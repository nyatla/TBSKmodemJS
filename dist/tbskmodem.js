/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack://tbskmodem-js/./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n\n//# sourceURL=webpack://tbskmodem-js/./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack://tbskmodem-js/./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./src/audio/AudioInput.js":
/*!*********************************!*\
  !*** ./src/audio/AudioInput.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AudioInput\": () => (/* binding */ AudioInput)\n/* harmony export */ });\n/* harmony import */ var _utils_Rms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Rms */ \"./src/utils/Rms.js\");\n\r\n/**\r\n * AudioWorkletNodeを使ったAudioキャプチャ\r\n */\r\n//@ts-check\r\n\r\n//dumpprocessssor.jsの中身\r\nconst ww_script=new Blob([\r\n`\r\nclass DumpProcessor extends AudioWorkletProcessor\r\n{\r\n    constructor(){\r\n        super();\r\n        console.log(\"DumpProcessor ready!\");\r\n        this.port.onmessage = (e) => {\r\n            switch(e.data[\"name\"]){\r\n            case \"start\":\r\n                this._q=[];\r\n                break;\r\n            case \"stop\":\r\n                this._q=undefined;\r\n                break;\r\n            case \"clear\":\r\n                this._q=this._q?[]:this._q;\r\n                break;\r\n            default:\r\n                console.log(\"Invalid message:\"+e); \r\n            }\r\n            console.log(e.data);\r\n          };\r\n    }\r\n    process(inputs, outputs, parameters){\r\n        let _t=this;\r\n        if(!_t._q){\r\n            return true;\r\n        }\r\n        /*\r\n        let b=[];\r\n        for(let i=0;i<inputs.length;i++){\r\n        \tlet s=inputs[i][0];\r\n        \tfor(let j=0;j<s.length;j++){\r\n        \t\tb.push(s[j]);\r\n        \t}\r\n        }\r\n        _t.port.postMessage({name:\"data\",value:b});\r\n\t\t*/\r\n\r\n        if(_t._q.length<100){\r\n            for(let i=0;i<inputs.length;i++){\r\n                _t._q.push(inputs[i][0]);//ch1のみ\r\n            }\r\n        }else{\r\n            console.log(\"Buffer overflow.\");\r\n        }\r\n        for(let i=0;i<Math.min(_t._q.length,inputs.length*2);i++){\r\n            _t.port.postMessage({name:\"data\",value:_t._q.shift()});\r\n        }\r\n\r\n        return true;\r\n    }\r\n  }\r\n  \r\n  registerProcessor(\"dump-processor\", DumpProcessor);\r\n\r\n`], {type: 'text/javascript'});\r\n\r\nclass AudioInput\r\n{\r\n    /**\r\n     * \r\n     * @param {number} sample_rate \r\n     */\r\n    constructor(sample_rate) {\r\n        var _t = this;\r\n        //see https://github.com/mdn/dom-examples/blob/main/media/web-dictaphone/scripts/app.js\r\n        if (!navigator.mediaDevices.getUserMedia) {\r\n            throw new Error('getUserMedia not supported on your browser!');\r\n        }\r\n        _t._sample_rate = sample_rate;\r\n        _t._media_devices = navigator.mediaDevices;\r\n        _t._media_stream = null;\r\n        _t._nodes = null;\r\n        _t._onsound = null;\r\n        _t._actx = null;\r\n        _t._rms=new _utils_Rms__WEBPACK_IMPORTED_MODULE_0__.Rms(Math.max(sample_rate/100,10));\r\n    }\r\n    enumerateDevices() {\r\n        const constraints = {\r\n            audio: true,\r\n            video: false\r\n        };\r\n        navigator.mediaDevices.enumerateDevices()\r\n            .then(function (devices) {\r\n                devices.forEach(function (device) {\r\n                    console.log(device.kind + \": \" + device.label +\r\n                        \" id = \" + device.deviceId);\r\n                });\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err.name + \": \" + err.message);\r\n            });\r\n    }\r\n    /**\r\n     * 音声キャプチャデバイスを開きます。結果はPromiseで返します。\r\n     * @returns {Promise}\r\n     *  成功:resolve,失敗:reject\r\n     * \r\n     */\r\n    open() {\r\n        var _t = this;\r\n        let dev = this._media_devices;\r\n\r\n        const constraints = {\r\n            audio: {\r\n                autoGainControl: { ideal: false },\r\n                echoCancellation: { ideal: false },\r\n                noiseSuppression:{ideal:false},\r\n                sampleRate: { ideal: _t._sample_rate },\r\n                sampleSize: { ideal: 16 },\r\n                channelCount: { ideal: 1 }\r\n            },\r\n            video: false\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n\r\n            dev.getUserMedia(constraints).then(\r\n                function (stream) {   //onSuccess\r\n                    _t._media_stream = stream;\r\n                    /*  https://addpipe.com/simple-web-audio-recorder-demo/js/app.js\r\n                        create an audio context after getUserMedia is called\r\n                        sampleRate might change after getUserMedia is called, like it does on macOS when recording through AirPods\r\n                        the sampleRate defaults to the one set in your OS for your playback device\r\n                    */\r\n\t\t            let actx = new (window.AudioContext || window.webkitAudioContext)({ sampleRate: _t._sample_rate });\r\n                    _t._actx = actx;\r\n                    console.log(\"actx sample rate\",actx.sampleRate);\r\n                    console.log(\"stream capability\",stream.getAudioTracks()[0].getCapabilities().sampleRate);\r\n                    let media_src_node = actx.createMediaStreamSource(stream);\r\n                    actx.audioWorklet.addModule(URL.createObjectURL(ww_script)).then(() => {\r\n                        let handler_node = new AudioWorkletNode(actx, 'dump-processor');\r\n                        handler_node.port.onmessage = (event) => {\r\n                            switch(event.data[\"name\"]){\r\n                            case \"data\":\r\n                                let v=event.data.value;\r\n                                for(let i=0;i<v.length;i++){\r\n                                    _t._rms.update(v[i]);\r\n                                }                                \r\n                                if (_t._onsound) {\r\n                                    _t._onsound(v);\r\n                                }\r\n                                break;\r\n                            default:\r\n\t                            console.log(\"unknown msg\");\r\n                            }\r\n                        };\r\n                        media_src_node.connect(handler_node);\r\n                        handler_node.connect(actx.destination);\r\n\r\n                        _t._nodes = { media_src: media_src_node, handler: handler_node };\r\n                        console.log(\"connected\");\r\n                        actx.suspend().then(()=>{\r\n                        \tactx.resume().then(()=>{resolve(true);})\r\n                        });\r\n    \r\n                    });\r\n                },\r\n                function (err) {   //onError\r\n                    console.log('The following error occured: ' + err);\r\n                    reject(false);\r\n                }\r\n            );\r\n        })\r\n    }\r\n    /**\r\n     * 音声キャプチャデバイスを閉じます。以降は使用不能です。\r\n     */\r\n    close() {\r\n        this.stop();\r\n        if (this._nodes) {\r\n            this._nodes.handler.disconnect();\r\n            this._nodes.media_src.disconnect();\r\n        }\r\n        this._nodes = null;\r\n        if(this._actx){\r\n            this._actx.close();\r\n            this._actx = null;    \r\n        }\r\n        const tracks = this._media_stream.getTracks();\r\n        tracks.forEach(function(track) {\r\n            track.stop();\r\n        });        \r\n    }\r\n    /**\r\n     * 関連付けられたオーディオコンテキストを返します。\r\n     * @returns {AudioContext}\r\n     */\r\n    get audioContext(){\r\n        return this._actx;\r\n    }\r\n    /**\r\n     * \r\n     * @returns {number}\r\n     */\r\n    get sampleRate(){\r\n        return this._sample_rate;\r\n    }\r\n    capability() {\r\n        //see https://note.com/npaka/n/n87acd80a4266\r\n        let tracks = this._media_stream.getTracks();\r\n        for (var i = 0; i < tracks.length; i++) {\r\n            console.log(tracks[i]);\r\n            console.log(tracks[i].getSettings());\r\n        }\r\n    }\r\n    /**\r\n     * 音声入力のコールバック処理を開始します。\r\n     * @param {*} onsound \r\n     */\r\n    start(onsound)\r\n    {\r\n        if (!this._actx || this._onsound) { throw new Error(); }\r\n        this._onsound = onsound;\r\n        this._nodes.handler.port.postMessage({name:\"start\"});\r\n        console.log(\"recorder started\");\r\n    }\r\n    /**\r\n     * コールバック処理を停止します。\r\n     */\r\n    stop() {\r\n        if (!this._actx) { throw new Error(); }\r\n        this._onsound = null;\r\n        this._nodes.handler.port.postMessage({name:\"stop\"});\r\n        console.log(\"recorder stopped\");\r\n    }\r\n    get rms(){\r\n        return this._rms.getLastRms();\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://tbskmodem-js/./src/audio/AudioInput.js?");

/***/ }),

/***/ "./src/audio/AudioPlayer.js":
/*!**********************************!*\
  !*** ./src/audio/AudioPlayer.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AudioPlayer\": () => (/* binding */ AudioPlayer)\n/* harmony export */ });\n//@ts-check\r\n\r\n/**\r\n * Audioバッファを一度だけ再生するプレイヤーです。\r\n */\r\nclass AudioPlayer\r\n{\r\n\t/**\r\n\t * \r\n\t * @param {AudioContext} actx \r\n\t * @param {AudioBuffer} audio_buffer \r\n\t */\r\n\tconstructor(actx,audio_buffer)\r\n\t{\r\n\t\tlet _t=this;\r\n\t\t_t._actx=actx;\r\n\t\tlet src= _t._actx.createBufferSource();\r\n\t\tsrc.buffer=audio_buffer;\r\n\t\tsrc.connect(_t._actx.destination);\r\n\t\t/** @type  {AudioBufferSourceNode?}*/\r\n\t\t_t._src=src;\r\n\t\t_t._playing=false;\r\n\t}\r\n\t/**\r\n\t * 再生が完了するとtrue\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isFinised(){\r\n\t\treturn !this._playing;\r\n\t}\r\n\t/**\r\n\t * 再生します。\r\n\t * @returns {Promise}\r\n\t * 再生が完了するとresolveします。\r\n\t */\r\n\tplay()\r\n    {\r\n\t\tif(!this._src || this._playing){throw new Error();}\r\n\t\tlet _t=this;\r\n        return new Promise((resolve) => {\r\n            _t._src.start();\r\n\t\t\t_t._playing=true;\r\n            _t._src.onended=()=>{\r\n\t\t\t\t_t._playing=false;\r\n\t\t\t\t_t._src=null;\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n        });\t\t\r\n\t}\r\n\t/**\r\n\t * 再生中であれば停止します。\r\n\t */\r\n\tstop()\r\n    {\r\n\t\tif(this._src){\r\n\t\t\tthis._src.stop();\r\n\t\t\tthis._playing=false;\r\n\t\t\tthis._src=null;\r\n\t\t}\r\n\t}\r\n}\n\n//# sourceURL=webpack://tbskmodem-js/./src/audio/AudioPlayer.js?");

/***/ }),

/***/ "./src/libtbskmodem.js":
/*!*****************************!*\
  !*** ./src/libtbskmodem.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TBSKmodemJS\": () => (/* binding */ TBSKmodemJS)\n/* harmony export */ });\n/* harmony import */ var _wasm_tbskmodem_wasm_mod_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm/tbskmodem_wasm_mod.wasm */ \"./src/wasm/tbskmodem_wasm_mod.wasm\");\n/* harmony import */ var _utils_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/classes */ \"./src/utils/classes.js\");\n/* harmony import */ var _audio_AudioInput__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./audio/AudioInput */ \"./src/audio/AudioInput.js\");\n/* harmony import */ var _audio_AudioPlayer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./audio/AudioPlayer */ \"./src/audio/AudioPlayer.js\");\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n/* harmony import */ var _tbskclasses_TbskModem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tbskclasses/TbskModem */ \"./src/tbskclasses/TbskModem.js\");\n/* harmony import */ var _tbskclasses_TbskModulator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tbskclasses/TbskModulator */ \"./src/tbskclasses/TbskModulator.js\");\n/* harmony import */ var _tbskclasses_TbskDemodulator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tbskclasses/TbskDemodulator */ \"./src/tbskclasses/TbskDemodulator.js\");\n/* harmony import */ var _tbskclasses_TbskListener__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tbskclasses/TbskListener */ \"./src/tbskclasses/TbskListener.js\");\n/* harmony import */ var _tbskclasses_TbskTone__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./tbskclasses/TbskTone */ \"./src/tbskclasses/TbskTone.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// @ts-check\n\n/**\n * ref::\n * https://zenn.dev/wok/articles/0022_bundle-wasm\n */\n\n/** @type {string}*/\nconst VERSION=\"TBSKmodemJS/0.2.0\";\n\n/**\n * \n */\nclass TBSKmodemJS\n{    \n    /** @type {TBSKmodemJS} */\n    static _instance=undefined;\n    /**\n     * 必要なAPIが揃っているかを返す。\n     * @returns {boolean}\n     */\n    static checkEnvironment()\n    {\n        let apis={\n            \"mediaDevice\":navigator.mediaDevices.getUserMedia?true:false,\n            \"AudioContext\":(window.AudioContext || window.webkitAudioContext)?true:false,\n            \"WebAssembly\":(typeof WebAssembly === 'object')\n        };\n        let r=true;\n        for(let k in apis){\n            r=r && apis[k];\n        }\n        return {success:r,result:{apis:apis}}\n\n    }\n    /**\n     * @async\n     * @returns {Promise<TBSKmodemJS>}\n     */\n    static async load() \n    {\n        let check=TBSKmodemJS.checkEnvironment();\n        if(!check.success){\n            throw new _utils_classes__WEBPACK_IMPORTED_MODULE_1__.TbskException(\"Missing required APIs.\");\n        }\n        if(TBSKmodemJS._instance){\n            console.log(\"TBSKmodemJS is already created.\");\n            return TBSKmodemJS._instance;\n        }\n        const mod = __webpack_require__(/*! ./wasm/tbskmodem_wasm_mod.js */ \"./src/wasm/tbskmodem_wasm_mod.js\");\n        const b = buffer__WEBPACK_IMPORTED_MODULE_4__.Buffer.from(_wasm_tbskmodem_wasm_mod_wasm__WEBPACK_IMPORTED_MODULE_0__.split(\",\")[1], \"base64\");\n        let wasm = await mod({ wasmBinary: b });\n        wasm._load_apis();\n        TBSKmodemJS._instance=new TBSKmodemJS(wasm);\n        return TBSKmodemJS._instance;\n    }\n    /**\n     * コンストラクタは使用せずに、load関数で生成してください。\n     * @constructor\n     * @param {*} wasm \n     */\n    constructor(wasm)\n    {\n        this.wasm=wasm;\n        /** @type {string}*/\n        this.version=VERSION+\";\"+wasm.VERSION;\n        class AudioSub{\n            constructor(){\n                this.AudioInput=_audio_AudioInput__WEBPACK_IMPORTED_MODULE_2__.AudioInput;\n                this.AudioPlayer=_audio_AudioPlayer__WEBPACK_IMPORTED_MODULE_3__.AudioPlayer;\n            }\n        };\n        /** @class {AudioSub}*/\n        this.audio=new AudioSub();\n        /** @class {TraitTone}*/\n        this.CustomTone=class extends _tbskclasses_TbskTone__WEBPACK_IMPORTED_MODULE_9__.TraitTone{\n            constructor(d){\n                super(wasm,d);\n            }\n        };\n        /** @class {SinTone}*/\n        this.SinTone=class extends _tbskclasses_TbskTone__WEBPACK_IMPORTED_MODULE_9__.SinTone{\n            constructor(points=10,cycle=10){\n                super(wasm,points,cycle);\n            }\n        };\n        /** @class {XPskSinTone}*/\n        this.XPskSinTone=class extends _tbskclasses_TbskTone__WEBPACK_IMPORTED_MODULE_9__.XPskSinTone{\n            constructor(points=10,cycle=10,div=8){\n                super(wasm,points,cycle,div);\n            }\n        };\n        /** @class {TbskModulator}*/\n        this.TbskModulator=class extends _tbskclasses_TbskModulator__WEBPACK_IMPORTED_MODULE_6__.TbskModulator\n        {\n            constructor(...args) {\n                super(...[wasm].concat(args));\n            }\n        };\n        /** @class {TbskDemodulator}*/\n        this.TbskDemodulator=class extends _tbskclasses_TbskDemodulator__WEBPACK_IMPORTED_MODULE_7__.TbskDemodulator\n        {\n            constructor(...args) {\n                super(...[wasm].concat(args));\n            }\n        };\n        /** @class {TbskModem}*/\n        this.TbskModem=class extends _tbskclasses_TbskModem__WEBPACK_IMPORTED_MODULE_5__.TbskModem\n        {\n            constructor(...args) {\n                super(...[wasm].concat(args));\n            }\n        };\n        /** @class {TbskListener}*/\n        this.TbskListener=class extends _tbskclasses_TbskListener__WEBPACK_IMPORTED_MODULE_8__.TbskListener\n        {\n            constructor(...args) {\n                super(...[wasm].concat(args));\n            }\n        };\n    }    \n}\n\n\n\n\n\n//# sourceURL=webpack://tbskmodem-js/./src/libtbskmodem.js?");

/***/ }),

/***/ "./src/tbskclasses/RecoverableStopIteration.js":
/*!*****************************************************!*\
  !*** ./src/tbskclasses/RecoverableStopIteration.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RecoverableStopIteration\": () => (/* binding */ RecoverableStopIteration)\n/* harmony export */ });\n/* harmony import */ var _StopIteration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StopIteration */ \"./src/tbskclasses/StopIteration.js\");\n\r\n\r\nclass RecoverableStopIteration extends _StopIteration__WEBPACK_IMPORTED_MODULE_0__.StopIteration {\r\n}\n\n//# sourceURL=webpack://tbskmodem-js/./src/tbskclasses/RecoverableStopIteration.js?");

/***/ }),

/***/ "./src/tbskclasses/StopIteration.js":
/*!******************************************!*\
  !*** ./src/tbskclasses/StopIteration.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StopIteration\": () => (/* binding */ StopIteration)\n/* harmony export */ });\nclass StopIteration extends Error {\r\n}\n\n//# sourceURL=webpack://tbskmodem-js/./src/tbskclasses/StopIteration.js?");

/***/ }),

/***/ "./src/tbskclasses/TbskDemodulator.js":
/*!********************************************!*\
  !*** ./src/tbskclasses/TbskDemodulator.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TbskDemodulator\": () => (/* binding */ TbskDemodulator)\n/* harmony export */ });\n/* harmony import */ var _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/classes.js */ \"./src/utils/classes.js\");\n/* harmony import */ var _utils_decoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/decoder.js */ \"./src/utils/decoder.js\");\n\r\n\r\n\r\n//@ts-check\r\n\r\nclass TbskDemodulator extends _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.WasmProxy\r\n{\r\n    /**\r\n     * \r\n     * @param {Tone} tone\r\n     * @param {Preamble} preamble\r\n     */\r\n    constructor(mod,tone, preamble_th=1.,preamble_cycle=4) {\r\n        super(mod,mod._wasm_tbskmodem_TbskDemodulator_A(tone._wasm_instance, preamble_th, preamble_cycle));\r\n    }\r\n    /**\r\n     * \r\n     * @param {DoubleInputIterator} src\r\n     */\r\n    _demodulateAsInt(src)\r\n    {\r\n        const mod=this._mod;\r\n        let r = mod._wasm_tbskmodem_TbskDemodulator_DemodulateAsInt(this._wasm_instance, src._wasm_instance);\r\n        if (r == 0) {\r\n            return null;\r\n        }\r\n        return new _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.IntOutputIterator(mod,r);\r\n    }\r\n    /**\r\n     * @param src array[double]\r\n     * @param {string} decoder\r\n     * \"utf8\" utf8でデコードして返します。\r\n     * undefined byte値配列を返します。\r\n     * @returns {string[]|number[]}\r\n     */\r\n    demodulate(src, decoder = undefined)\r\n    {\r\n        const mod=this._mod;\r\n        if (decoder == \"utf8\") {\r\n            decoder = new _utils_decoder_js__WEBPACK_IMPORTED_MODULE_1__.Utf8Decoder();\r\n        } else {\r\n            decoder = new _utils_decoder_js__WEBPACK_IMPORTED_MODULE_1__.PassDecoder();\r\n        }\r\n        let buf = new _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.DoubleInputIterator(mod);\r\n        try {\r\n            buf.puts(src);\r\n            //double*を渡して、intイテレータをもらう。リカバリしない。\r\n            //                        let wi = MOD._wasm_tbskmodem_TbskDemodulator_DemodulateAsInt(this._wasm_instance, buf._wasm_instance);\r\n            let out=this._demodulateAsInt(buf);\r\n            if (out == null) {\r\n                return [];\r\n            }\r\n            // arrayに変換\r\n            try {\r\n                if (decoder) {\r\n                    return decoder.put(out.toArray());\r\n                } else {\r\n                    return out.toArray();\r\n                }\r\n            } finally {\r\n                out.dispose();\r\n            }\r\n        } finally {\r\n            buf.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * 未検出でストリームが中断したらnull\r\n     * @param {any} src\r\n     * @return {DemodulateResult}\r\n     */\r\n    _demodulateAsInt_B(src){\r\n        const mod=this._mod;\r\n        let r = mod._wasm_tbskmodem_TbskDemodulator_DemodulateAsInt_B(this._wasm_instance, src._wasm_instance);\r\n        if (r == 0) {\r\n            return null;\r\n        }\r\n        return new DemodulateResult(mod,r);\r\n    }\r\n}\r\n\r\nclass DemodulateResult extends _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.WasmProxy {\r\n    constructor(mod,wasm_instance) {\r\n        super(mod,wasm_instance);\r\n    }\r\n    getType() {\r\n        return this._mod._wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetType(this._wasm_instance);\r\n    }\r\n    getOutput() {\r\n        return new _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.IntOutputIterator(this._mod,this._mod._wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetOutput(this._wasm_instance));\r\n    }\r\n    getRecover() {\r\n        const mod=this._mod;\r\n        let wi = mod._wasm_tbskmodem_TbskDemodulator_DemodulateResult_Recover(this._wasm_instance);\r\n        if (wi == 0) {\r\n            return null;\r\n        }\r\n        return new _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.IntOutputIterator(mod,wi);\r\n    }\r\n}\n\n//# sourceURL=webpack://tbskmodem-js/./src/tbskclasses/TbskDemodulator.js?");

/***/ }),

/***/ "./src/tbskclasses/TbskListener.js":
/*!*****************************************!*\
  !*** ./src/tbskclasses/TbskListener.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TbskListener\": () => (/* binding */ TbskListener)\n/* harmony export */ });\n/* harmony import */ var _TbskDemodulator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TbskDemodulator.js */ \"./src/tbskclasses/TbskDemodulator.js\");\n/* harmony import */ var _utils_decoder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/decoder.js */ \"./src/utils/decoder.js\");\n/* harmony import */ var _utils_classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/classes.js */ \"./src/utils/classes.js\");\n/* harmony import */ var _RecoverableStopIteration__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RecoverableStopIteration */ \"./src/tbskclasses/RecoverableStopIteration.js\");\n\r\n\r\n\r\n\r\n\r\nclass TbskListener extends _utils_classes_js__WEBPACK_IMPORTED_MODULE_2__.Disposable{\r\n    /**\r\n     * onStart,onData,onEndはpush関数をトリガーに非同期に呼び出します。\r\n     * \r\n     * デコードオブジェクトは、T put(data),reset()の関数を持つオブジェクトで、与えられたdataからTが生成できたときにTを返します。生成できない場合はundefinedです。resetで状態を初期化します。\r\n     * \r\n     * \r\n     * @param {Tone} tone\r\n     * @param {Preamble} preamble\r\n     * @param {onStart,onData,onEnd} events ハッシュ配列\r\n     */\r\n    constructor(mod,tone, preamble_th=1.0,preamble_cycle=4, events = {}, decoder = undefined) {\r\n        super();\r\n        if (!(\"onStart\" in events)) { events.onStart = null; }\r\n        if (!(\"onData\" in events)) { events.onData = null; }\r\n        if (!(\"onEnd\" in events)) { events.onEnd = null; }\r\n        let _t = this;\r\n        this._decoder = decoder == \"utf8\" ? new _utils_decoder_js__WEBPACK_IMPORTED_MODULE_1__.Utf8Decoder() : new _utils_decoder_js__WEBPACK_IMPORTED_MODULE_1__.PassDecoder();\r\n        this._demod = new _TbskDemodulator_js__WEBPACK_IMPORTED_MODULE_0__.TbskDemodulator(mod,tone, preamble_th, preamble_cycle);\r\n        this._input_buf = new _utils_classes_js__WEBPACK_IMPORTED_MODULE_2__.DoubleInputIterator(mod,true);\r\n        this._callOnStart = () => {\r\n            new Promise((resolve) => {\r\n                resolve();\r\n            }).then(() => { if (events.onStart) { events.onStart() } });\r\n        };\r\n        this._callOnData = (data) => {\r\n            new Promise((resolve) => {\r\n                resolve();\r\n            }).then(() => { if (events.onData) { events.onData(data) } });\r\n        };\r\n        this._callOnEnd = () => {\r\n            new Promise((resolve) => {\r\n                resolve();\r\n            }).then(() => { if (events.onEnd) { events.onEnd() } });\r\n        };\r\n    }\r\n    dispose()\r\n    {\r\n        if (this._currentGenerator) {\r\n            try {\r\n                this._currentGenerator.throw(new Error('Brake workflow!'));\r\n            } catch (e) {\r\n            }\r\n        }\r\n        this._demod.dispose();\r\n        this._input_buf.dispose();\r\n    }\r\n    push(src)\r\n    {\r\n        /**\r\n         * 1回目のyieldで関数を返す。\r\n         * @param {any} demod\r\n         * @param {any} input_buf\r\n         */\r\n        function* workflow(demod, input_buf,callOnStart,callOnData,callOnEnd,decoder)\r\n        {\r\n            decoder.reset();\r\n//                console.log(\"workflow called!\");\r\n            let out_buf = null;\r\n            let dresult = null;\r\n            dresult = demod._demodulateAsInt_B(input_buf);\r\n            if (dresult == null) {\r\n                //未検出でinputが終端\r\n                console.error(\"input err\");\r\n                return;//done\r\n            }\r\n            try\r\n            {\r\n                try {\r\n                    switch (dresult.getType()) {\r\n                        case 1://1 iter\r\n                            //                            console.log(\"signal detected\");\r\n                            out_buf = dresult.getOutput();\r\n                            break;\r\n                        case 2:// recover\r\n                            for (; ;) {\r\n                                //                                console.log(\"recover\");\r\n                                out_buf = dresult.getRecover();\r\n                                if (out_buf != null) {\r\n                                    break;\r\n                                }\r\n                                //リカバリ再要求があったので何もしない。\r\n                                yield;\r\n                            }\r\n                            break\r\n                        default:\r\n                            //継続不能なエラー\r\n                            console.error(\"unknown type.\");\r\n                            return;//done\r\n                    }\r\n                } finally {\r\n                    dresult.dispose();\r\n                    dresult = null;\r\n                }\r\n                //outにイテレータが入っている。\r\n                console.log(\"Signal detected!\");\r\n                callOnStart();\r\n                //終端に達する迄取り出し\r\n                let ra = [];\r\n                for (; ;) {\r\n                    try {\r\n                        for (; ;) {\r\n                            let w = out_buf.next();\r\n                            ra.push(w);\r\n                        }\r\n                    } catch (e) {\r\n                        if (e instanceof _RecoverableStopIteration__WEBPACK_IMPORTED_MODULE_3__.RecoverableStopIteration) {\r\n                            //                            console.log(\"RecoverableStopIteration\");\r\n                            if (ra.length > 0) {\r\n                                //ここでdataイベント\r\n                                console.log(\"data:\");\r\n                                //                                console.log(ra);\r\n                                if (decoder) {\r\n                                    let rd = decoder.put(ra);\r\n                                    if (rd) {\r\n                                        callOnData(rd);\r\n                                    }\r\n                                } else {\r\n                                    callOnData(ra);\r\n                                }\r\n                                ra = [];\r\n                            }\r\n                            yield;\r\n                            continue;\r\n                        } else if (e instanceof StopIteration) {\r\n                            if (ra.length > 0) {\r\n                                //console.log(\"StopIteration\");\r\n                                console.log(\"data:\");\r\n                                //console.log(ra);\r\n                                if (decoder) {\r\n                                    let rd = decoder.put(ra);\r\n                                    if (rd) {\r\n                                        callOnData(rd);\r\n                                    }\r\n                                } else {\r\n                                    callOnData(ra);\r\n                                }\r\n                                ra = [];\r\n                            }\r\n                            console.log(\"Signal lost!\");\r\n                            callOnEnd();\r\n                        }\r\n                        //ここではStopイテレーションの区別がつかないから、次のシグナル検出で判断する。\r\n                    }\r\n                    out_buf.dispose();\r\n                    out_buf = null;\r\n                    return;//done\r\n                }\r\n            } finally {\r\n                if (out_buf) { out_buf.dispose(); }\r\n                if (dresult) { dresult.dispose(); }\r\n            }\r\n            //関数終了。\r\n            console.log(\"end of workflow\");\r\n        }\r\n//            console.log(\"push callead!\");\r\n        this._input_buf.puts(src);\r\n//            console.log(\"input_buf_len:\" + src.length);\r\n        if (this._currentGenerator == null) {\r\n            this._currentGenerator = workflow(this._demod, this._input_buf, this._callOnStart, this._callOnData, this._callOnEnd, this._decoder);//新規生成\r\n        }\r\n        if (this._currentGenerator.next().done) {\r\n            this._currentGenerator = null;\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://tbskmodem-js/./src/tbskclasses/TbskListener.js?");

/***/ }),

/***/ "./src/tbskclasses/TbskModem.js":
/*!**************************************!*\
  !*** ./src/tbskclasses/TbskModem.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TbskModem\": () => (/* binding */ TbskModem)\n/* harmony export */ });\n/* harmony import */ var _audio_AudioInput_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../audio/AudioInput.js */ \"./src/audio/AudioInput.js\");\n/* harmony import */ var _audio_AudioPlayer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../audio/AudioPlayer.js */ \"./src/audio/AudioPlayer.js\");\n/* harmony import */ var _utils_functions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/functions */ \"./src/utils/functions.js\");\n/* harmony import */ var _TbskModulator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TbskModulator.js */ \"./src/tbskclasses/TbskModulator.js\");\n/* harmony import */ var _TbskTone_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TbskTone.js */ \"./src/tbskclasses/TbskTone.js\");\n/* harmony import */ var _TbskDemodulator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TbskDemodulator */ \"./src/tbskclasses/TbskDemodulator.js\");\n/* harmony import */ var _RecoverableStopIteration__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RecoverableStopIteration */ \"./src/tbskclasses/RecoverableStopIteration.js\");\n/* harmony import */ var _StopIteration__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./StopIteration */ \"./src/tbskclasses/StopIteration.js\");\n/* harmony import */ var _utils_decoder_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/decoder.js */ \"./src/utils/decoder.js\");\n/* harmony import */ var _utils_classes_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/classes.js */ \"./src/utils/classes.js\");\n//@ts-check\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * パケット受信１回分のワークフローです。\r\n */\r\nclass Workflow\r\n{\r\n    /**\r\n     * \r\n     * @param {*} demod \r\n     * @param {*} input_buf \r\n     * @param {*} decoder \r\n     * @param {onStart,onData(d),onEnd} handler \r\n     */\r\n     \r\n    constructor(demod,input_buf,decoder,handler){\r\n        let _t=this;\r\n        _t._input_buf=input_buf;\r\n        _t._kill_request=false;\r\n        _t._gen=undefined;\r\n        //このワークフローのPromise\r\n        _t.th_promise=new Promise((resolve)=>{\r\n            /**@type {Generator|undefined} */\r\n            _t._gen=this.proc(demod,input_buf,decoder,handler,resolve);\r\n        }).then(()=>{\r\n            _t._gen=undefined;\r\n        });\r\n    }\r\n    /**\r\n     * 処理を進めます。\r\n     * @param {*} src \r\n     * @returns \r\n     */\r\n    next(src){\r\n        this._input_buf.puts(src);\r\n        //@ts-ignore\r\n        return this._gen.next();\r\n    }\r\n    /**\r\n     * 二重呼び出しをしないでね。\r\n     */\r\n    kill(){\r\n        (0,_utils_functions__WEBPACK_IMPORTED_MODULE_2__.TBSK_ASSERT)(this._kill_request==false);\r\n        this._kill_request=true;\r\n        this.next([0]);//ダミーさん\r\n    }\r\n    /**\r\n     * ワークフローが完了するまで待つpromiseを返します。\r\n     * @returns \r\n     */\r\n    waitForEnd()\r\n    {\r\n        if(!this._gen){\r\n            return Promise.resolve();\r\n        }\r\n        return this.th_promise;\r\n    }\r\n\r\n    *proc(demod, input_buf,decoder,handler,resolver)\r\n    {\r\n        let _t=this;\r\n\r\n        decoder.reset();\r\n        //console.log(\"workflow called!\");\r\n        let out_buf = null;\r\n        let dresult = null;\r\n        dresult = demod._demodulateAsInt_B(input_buf);\r\n        if (dresult == null) {\r\n            //未検出でinputが終端\r\n            console.error(\"input err\");\r\n            resolver();//ジェネレータが完了した通知\r\n            return;//done\r\n        }\r\n        try\r\n        {\r\n            try {\r\n                switch (dresult.getType()) {\r\n                    case 1://1 iter\r\n                        //                            console.log(\"signal detected\");\r\n                        out_buf = dresult.getOutput();\r\n                        break;\r\n                    case 2:// recover\r\n                        for (; ;) {\r\n                            if(_t._kill_request){\r\n                                return;//done\r\n                            }\r\n                            //                                console.log(\"recover\");\r\n                            out_buf = dresult.getRecover();\r\n                            if (out_buf != null) {\r\n                                break;\r\n                            }\r\n                            //リカバリ再要求があったので何もしない。\r\n                            yield;\r\n                        }\r\n                        break\r\n                    default:\r\n                        //継続不能なエラー\r\n                        console.error(\"unknown type.\");\r\n                        throw new Error();\r\n                }\r\n            } finally {\r\n                dresult.dispose();\r\n                dresult = null;\r\n            }\r\n            //outにイテレータが入っている。\r\n            console.log(\"Signal detected!\");\r\n            handler.onStart();\r\n            //終端に達する迄取り出し\r\n            let ra = [];\r\n            for (; ;) {\r\n                try {\r\n                    for (; ;) {\r\n                        //stopリゾルバが設定されておるぞ。\r\n                        if(_t._kill_request){\r\n                            console.log(\"Kill accepted!\");\r\n                            throw new _StopIteration__WEBPACK_IMPORTED_MODULE_7__.StopIteration();//強制的に確定\r\n                        }\r\n                        let w = out_buf.next();\r\n                        ra.push(w);\r\n                    }\r\n                } catch (e) {\r\n                    if (e instanceof _RecoverableStopIteration__WEBPACK_IMPORTED_MODULE_6__.RecoverableStopIteration) {\r\n                        //                            console.log(\"RecoverableStopIteration\");\r\n                        if (ra.length > 0) {\r\n                            //ここでdataイベント\r\n                            console.log(\"data:\");\r\n                            //                                console.log(ra);\r\n                            if (decoder) {\r\n                                let rd = decoder.put(ra);\r\n                                if (rd) {\r\n                                    handler.onData(rd);//callOnData(rd);\r\n                                }\r\n                            } else {\r\n                                handler.onData(ra);//callOnData(ra);\r\n                            }\r\n                            ra = [];\r\n                        }\r\n                        yield;\r\n                        continue;\r\n                    } else if (e instanceof _StopIteration__WEBPACK_IMPORTED_MODULE_7__.StopIteration) {\r\n                        if (ra.length > 0) {\r\n                            //console.log(\"StopIteration\");\r\n                            console.log(\"data:\");\r\n                            //console.log(ra);\r\n                            if (decoder) {\r\n                                let rd = decoder.put(ra);\r\n                                if (rd) {\r\n                                    handler.onData(rd);//callOnData(rd);\r\n                                }\r\n                            } else {\r\n                                handler.onData(ra);//callOnData(ra);\r\n                            }\r\n                            ra = [];\r\n                        }\r\n                        console.log(\"Signal lost!\");\r\n                        handler.onEnd();//callOnEnd();\r\n                    }else{\r\n                        console.log(e);\r\n                    }\r\n                    //ここではStopイテレーションの区別がつかないから、次のシグナル検出で判断する。\r\n                }\r\n                out_buf.dispose();\r\n                out_buf = null;\r\n                return;//done\r\n            }\r\n        } finally {\r\n            if (out_buf) { out_buf.dispose(); }\r\n            if (dresult) { dresult.dispose(); }\r\n            resolver();//ジェネレータが完了した通知\r\n        }\r\n        //関数終了。\r\n        console.log(\"end of workflow\");\r\n    }\r\n}\r\n\r\n\r\nclass TbskListener2 extends _utils_classes_js__WEBPACK_IMPORTED_MODULE_9__.Disposable\r\n{\r\n    /**\r\n     * 非同期にコールされるpushは、信号を検出するとonPacketでパケットハンドラを呼び出します。\r\n     * onPacketハンドラは新しいIPacketHandlerを継承したパケット処理クラスを呼び出してください。\r\n     * \r\n     */\r\n    constructor(mod,tone, preamble_th=1.0,preamble_cycle=4,decoder = undefined) {\r\n        super();\r\n        this._decoder = decoder;\r\n        this._demod = new _TbskDemodulator__WEBPACK_IMPORTED_MODULE_5__.TbskDemodulator(mod,tone, preamble_th, preamble_cycle);\r\n        this._input_buf = new _utils_classes_js__WEBPACK_IMPORTED_MODULE_9__.DoubleInputIterator(mod,true);\r\n        this._currentGenerator=undefined;\r\n    }\r\n    dispose()\r\n    {\r\n        if (this._currentGenerator) {\r\n            try {\r\n                this._currentGenerator.throw(new Error('Brake workflow!'));\r\n            } catch (e) {\r\n            }\r\n        }\r\n        this._demod.dispose();\r\n        this._input_buf.dispose();\r\n    }\r\n    /**\r\n     * 信号の検出を開始します。\r\n     * onStart,onData,onEndの順でコールバック関数を呼び出します。\r\n     * onStartが呼び出された後は、必ずonEndが呼び出されます。\r\n     * @returns {Promise}\r\n     * 受信シーケンスが中断/完了したときに呼び出されます。\r\n     */\r\n    start(onStart,onData,onEnd){\r\n        (0,_utils_functions__WEBPACK_IMPORTED_MODULE_2__.TBSK_ASSERT)(!this._currentGenerator);\r\n        let _t=this;\r\n\r\n        let decoder = this._decoder == \"utf8\" ? new _utils_decoder_js__WEBPACK_IMPORTED_MODULE_8__.Utf8Decoder() : new _utils_decoder_js__WEBPACK_IMPORTED_MODULE_8__.PassDecoder();\r\n\r\n        this._currentGenerator =new Workflow(this._demod, this._input_buf, decoder,{onStart:onStart,onData:onData,onEnd:onEnd});//新規生成\r\n        return this._currentGenerator.waitForEnd().then(()=>{ \r\n            _t._currentGenerator=undefined;\r\n        });\r\n    }\r\n    /**\r\n     * 信号の検出を停止します。stopは１度だけしか呼べません。\r\n     * @returns {Promise}\r\n     * 状態がIDLEに戻るまで待機するPromiseです。\r\n     */\r\n    stop()\r\n    {\r\n        let _t=this;\r\n        (0,_utils_functions__WEBPACK_IMPORTED_MODULE_2__.TBSK_ASSERT)(this._currentGenerator);\r\n        //@ts-ignore\r\n        _t._currentGenerator.kill();\r\n        //@ts-ignore\r\n        let r=_t._currentGenerator.waitForEnd();\r\n        _t._currentGenerator=undefined;\r\n        return r;\r\n    }\r\n\r\n    \r\n    \r\n    push(src)\r\n    {\r\n        if (this._currentGenerator == null) {\r\n            return;\r\n        }\r\n        if (this._currentGenerator.next(src).done) {\r\n            this._currentGenerator = null;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * TBSK変調信号の送受信機能を統合したモデムクラスです。\r\n */\r\nclass TbskModem extends _utils_classes_js__WEBPACK_IMPORTED_MODULE_9__.Disposable\r\n{\r\n    static ST={\r\n        CLOSED:0,\r\n        OPENING:1,\r\n        CLOSING:1,\r\n        IDLE:2,\r\n        TX_RUNNING: 3,\r\n        TX_BREAKING:4,\r\n        RX_RUNNING: 5,\r\n        RX_BREAKING:6\r\n    };\r\n    /**\r\n     * インスタンスの状態を返します。\r\n     */\r\n    get status(){return this._status;};\r\n\r\n\r\n    \r\n    /**\r\n     * @param {*} mod \r\n     * @param {TraitTone|XPskSinTone|SinTone|undefined} tone\r\n     * @param {number|undefined} preamble_cycle \r\n     */\r\n    constructor(mod,tone=undefined,preamble_cycle=undefined,decoder=undefined)\r\n    {\r\n        super();\r\n        this._status=TbskModem.ST.CLOSED;\r\n        this._current_rx=undefined;\r\n        this._current_tx=undefined;\r\n        this._audio_input=undefined;\r\n        let attached_tone=tone?undefined:new _TbskTone_js__WEBPACK_IMPORTED_MODULE_4__.XPskSinTone(mod,10,10);\r\n        tone=tone?tone:attached_tone;\r\n        this._mod=new _TbskModulator_js__WEBPACK_IMPORTED_MODULE_3__.TbskModulator(mod,tone,preamble_cycle);\r\n        this._listener=new TbskListener2(\r\n            mod,tone,1.0,preamble_cycle,\r\n            decoder);\r\n        if(attached_tone){\r\n            attached_tone.dispose();//内部コピーがあるからもういらない。\r\n        }\r\n\r\n\r\n    }\r\n    /**\r\n     * Audioデバイスの準備ができるまで待ちます。\r\n     * @param {number} carrier\r\n     * @returns {Promise}\r\n     * resolve(boolean) trueで成功,falseで失敗\r\n     * ステータス以上の場合はrejectです。\r\n     */\r\n    open(carrier=16000)\r\n    {\r\n        let _t=this;\r\n        if(_t._status!=TbskModem.ST.CLOSED){\r\n            return Promise.reject();\r\n        }\r\n        let audio_input=new _audio_AudioInput_js__WEBPACK_IMPORTED_MODULE_0__.AudioInput(16000);\r\n        /** @type {?} */\r\n        let open_promise=audio_input.open()\r\n        /** @type {?} */\r\n        _t._status=TbskModem.ST.OPENING;\r\n\r\n        return new Promise((resolve)=>{\r\n            open_promise.then(\r\n            ()=>{\r\n                _t._audio_input=audio_input;\r\n                audio_input.start((s)=>{\r\n                    _t._listener.push(s);\r\n                });\r\n                _t._status=TbskModem.ST.IDLE;\r\n                resolve(true);\r\n            },\r\n            ()=>{resolve(false);}\r\n            )}\r\n        );\r\n    }\r\n    close()\r\n    {\r\n        let _t=this;\r\n        if(_t._status!=TbskModem.ST.IDLE){\r\n            return Promise.reject();\r\n        }\r\n        _t._status=TbskModem.ST.CLOSING;\r\n        this._audio_input.close();\r\n        return Promise.resolve().then(()=>{_t._status=TbskModem.ST.CLOSED;});\r\n    }\r\n    dispose()\r\n    {\r\n        if(this._status!=TbskModem.ST.CLOSED){\r\n            this.close();\r\n        }\r\n        this._mod.dispose();\r\n        this._listener.dispose();\r\n    }\r\n    /**\r\n     * srcをオーディオインタフェイスへ送信します。\r\n     * {TbskModem#txReady}がtrueである必要があります。\r\n     * @param {array[number]|string} src \r\n     * @returns {Promise}\r\n     * 送信が完了、またはtxBreakで中断した場合にresolveします。\r\n     * 送信処理を開始できない場合rejectします。\r\n     */\r\n    tx(src,stopsymbol=true)\r\n    {\r\n        if(!this.txReady){\r\n            return Promise.reject();\r\n        }\r\n        (0,_utils_functions__WEBPACK_IMPORTED_MODULE_2__.TBSK_ASSERT)(this._status==TbskModem.ST.IDLE);\r\n        let ainput=this._audio_input;\r\n        let actx=ainput.audioContext;\r\n        let mod=this._mod;\r\n        let f32_array = mod.modulate(src,stopsymbol);\r\n        let buf = actx.createBuffer(1, f32_array.length, ainput.sampleRate);\r\n        buf.getChannelData(0).set(f32_array);\r\n\r\n\r\n        let _t=this;\r\n        class TxSession{\r\n            constructor(player)\r\n            {\r\n                /** @type {AudioPlayer|?} */\r\n                this._player=player;\r\n                let pp=this._player.play();\r\n                this._promise=new Promise((resolve)=>{\r\n                    pp.then(()=>{\r\n                        _t._status=TbskModem.ST.IDLE;\r\n                        resolve(true);//必ず呼ばれる\r\n                    })\r\n                });               \r\n            }\r\n            /**\r\n             * キャンセルが完了する/完了していたら発火するPromise\r\n             * @returns \r\n             * 完了するとresolve\r\n             */\r\n            cancel()\r\n            {\r\n                this._player.stop();//playは発火する。\r\n                return this._promise;\r\n            }\r\n        }\r\n        let player=new _audio_AudioPlayer_js__WEBPACK_IMPORTED_MODULE_1__.AudioPlayer(actx,buf);\r\n        let current_tx=new TxSession(player);\r\n        this._current_tx=current_tx;\r\n        this._status=TbskModem.ST.TX_RUNNING;\r\n        return this._current_tx._promise;\r\n    }\r\n    /**\r\n     * 進行中のtxを中断します。\r\n     * @returns {Promise<boolean>}\r\n     * 待機状態が完了するとresolveします。\r\n     * 戻り値は、待機が成功した場合true,失敗した場合falsseです。\r\n     */\r\n    txBreak()\r\n    {\r\n        switch(this._status){\r\n        case TbskModem.ST.IDLE:\r\n            return Promise.resolve(true);\r\n        case TbskModem.ST.TX_RUNNING:\r\n            this._status=TbskModem.ST.RX_BREAKING;\r\n            //@ts-ignore\r\n            return new Promise((resolve)=>{this._current_tx.cancel().then(()=>{resolve(true)});});\r\n        default:\r\n            return Promise.resolve(false);\r\n        }\r\n    }\r\n    /**\r\n     * tx関数が実行可能な状態かを返します。\r\n     * @returns {boolean}\r\n     */    \r\n    get txReady(){\r\n        return this._status==TbskModem.ST.IDLE;\r\n    }\r\n    /**\r\n     * パケットを受信します。\r\n     * @returns {Promise}\r\n     * パケットの受信を完了するとresolveします。\r\n     * 受信が開始できないとrejectします。\r\n     * \r\n     */\r\n    rx(onStart,onData,onClose)\r\n    {\r\n        if(!this.rxReady){\r\n            return Promise.reject();\r\n        }\r\n        let _t=this;\r\n        class RxSession{\r\n            constructor(listener)\r\n            {\r\n                let promise=new Promise((resolve)=>{\r\n                    let packet_accepted=false;\r\n                    listener.start(\r\n                        ()=>{\r\n                            packet_accepted=true;\r\n                            Promise.resolve().then(\r\n                                onStart\r\n                            );\r\n                        },\r\n                        (d)=>{\r\n                            Promise.resolve().then(()=>{\r\n                                onData(d);\r\n                            })\r\n                        },\r\n                        ()=>{\r\n                            Promise.resolve().then(()=>{\r\n                                onClose();\r\n                            });\r\n                        },\r\n                    ).then(()=>{\r\n                        _t._status=TbskModem.ST.IDLE;\r\n                        resolve(packet_accepted);\r\n                    })\r\n                });\r\n                this._listener=listener;\r\n                this._promise=promise;\r\n            }\r\n            cancel(){\r\n                return this._listener.stop().then(()=>{\r\n                    _t._status=TbskModem.ST.IDLE;}\r\n                );\r\n            }\r\n        }\r\n        _t._current_rx=new RxSession(_t._listener);;\r\n        _t._status=TbskModem.ST.RX_RUNNING;\r\n        return _t._current_rx._promise;\r\n    }\r\n    /**\r\n     * rxを停止して待機状態になるまで待ちます。\r\n     * @returns {Promise<boolean>}\r\n     * 待機状態が完了するとresolveします。\r\n     * 戻り値は、待機が成功した場合true,失敗した場合falseです。\r\n     */\r\n    rxBreak()\r\n    {\r\n        switch(this._status){\r\n        case TbskModem.ST.IDLE:\r\n            return Promise.resolve(true);\r\n        case TbskModem.ST.RX_RUNNING:\r\n            this._status=TbskModem.ST.RX_BREAKING;\r\n            //@ts-ignore\r\n            let a=this._current_rx.cancel();\r\n            console.log(a);\r\n            return a;\r\n        default:\r\n            return Promise.resolve(false);\r\n        }\r\n    }\r\n    /**\r\n     * rx関数が実行可能な状態かを返します。\r\n     * @returns {boolean}\r\n     */\r\n    get rxReady(){\r\n        return this._status==TbskModem.ST.IDLE;\r\n    }\r\n    /**\r\n     * オーディオ入力のRMS値を返します。\r\n     */\r\n    get rms(){\r\n        return this._audio_input.rms;\r\n    }\r\n}\n\n//# sourceURL=webpack://tbskmodem-js/./src/tbskclasses/TbskModem.js?");

/***/ }),

/***/ "./src/tbskclasses/TbskModulator.js":
/*!******************************************!*\
  !*** ./src/tbskclasses/TbskModulator.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TbskModulator\": () => (/* binding */ TbskModulator)\n/* harmony export */ });\n/* harmony import */ var _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/classes.js */ \"./src/utils/classes.js\");\n//@ts-check\r\n\r\n\r\n\r\n/**\r\n * \r\n */\r\nclass TbskModulator extends _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.WasmProxy\r\n{\r\n    /**\r\n     * \r\n     * @param {Tone} tone\r\n     * @param {Preamble} preamble\r\n     */\r\n    constructor(mod,tone, preamble_cycle = 4) {  \r\n        super(mod,mod._wasm_tbskmodem_TbskModulator_A(tone._wasm_instance, preamble_cycle));\r\n    }\r\n    /**\r\n     * @param {array[number]|string} src\r\n     * @param {boolean} stopsymbol\r\n     * @return {Array[number]}\r\n     */\r\n    modulate(src,stopsymbol=true)\r\n    {\r\n        let mod=this._mod;\r\n        var buf = new _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.IntInputIterator(mod);\r\n        try {\r\n            if (typeof (src) == \"string\") {\r\n                let te = new TextEncoder();                    \r\n                buf.puts(te.encode(src));\r\n            } else {\r\n                buf.puts(src);\r\n            }\r\n            //int*を渡して、[int,float...]のポインタを返してもらう。\r\n            let wi = mod._wasm_tbskmodem_TbskModulator_Modulate(this._wasm_instance, buf._wasm_instance, stopsymbol);\r\n            if (wi == null) {\r\n                throw new Error();\r\n            }\r\n            // arrayに変換\r\n            let out = new _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.DoubleOutputIterator(mod,wi);\r\n            try {\r\n                return out.toArray();\r\n            } finally {\r\n                out.dispose();\r\n            }\r\n        } finally {\r\n            buf.dispose();\r\n        }\r\n    }\r\n    /**\r\n     * JS拡張。オーディオコンテキストのバッファを返す。\r\n     * @param {AudioContext} actx\r\n     * @param {array[number]} src\r\n     * @param {number} sampleRate\r\n     * @return {AudioBuffer}\r\n     */\r\n    modulate2AudioBuffer(actx, src, sampleRate) {\r\n        let f32_array = this.modulate(src);\r\n        //console.log(f32_array);\r\n        let buf = actx.createBuffer(1, f32_array.length, sampleRate);\r\n        buf.getChannelData(0).set(f32_array);\r\n        return buf;\r\n    }\r\n    version(){\r\n        return null;\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://tbskmodem-js/./src/tbskclasses/TbskModulator.js?");

/***/ }),

/***/ "./src/tbskclasses/TbskTone.js":
/*!*************************************!*\
  !*** ./src/tbskclasses/TbskTone.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SinTone\": () => (/* binding */ SinTone),\n/* harmony export */   \"TraitTone\": () => (/* binding */ TraitTone),\n/* harmony export */   \"XPskSinTone\": () => (/* binding */ XPskSinTone)\n/* harmony export */ });\n/* harmony import */ var _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/classes.js */ \"./src/utils/classes.js\");\n/* harmony import */ var _utils_functions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/functions.js */ \"./src/utils/functions.js\");\n// @ts-check\r\n\r\n\r\n\r\n\r\nclass TraitTone extends _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.WasmProxy {\r\n    /**\r\n     * @param {*} mod \r\n     * @param {number[]} double_array \r\n     */\r\n    constructor(mod,double_array) {\r\n        super(mod,mod._wasm_tbskmodem_TraitTone(double_array));\r\n    }\r\n}\r\nclass SinTone extends _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.WasmProxy {\r\n    /**\r\n     * \r\n     * @param {*} mod \r\n     * @param {number} points AS int \r\n     * @param {number} cycle  AS int\r\n     */\r\n    constructor(mod,points, cycle) {\r\n        let _cycle = (0,_utils_functions_js__WEBPACK_IMPORTED_MODULE_1__.set_default)(cycle, 1);\r\n        super(mod,mod._wasm_tbskmodem_SinTone(points, _cycle));\r\n    }\r\n}\r\nclass XPskSinTone extends _utils_classes_js__WEBPACK_IMPORTED_MODULE_0__.WasmProxy\r\n{\r\n    /**\r\n     * \r\n     * @param {*} mod \r\n     * @param {number} points AS int\r\n     * @param {number} cycle  AS int\r\n     * @param {number} div  AS int\r\n     */\r\n    constructor(mod,points, cycle=1, div=8) {\r\n        super(mod,mod._wasm_tbskmodem_XPskSinTone(points, cycle, div));\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://tbskmodem-js/./src/tbskclasses/TbskTone.js?");

/***/ }),

/***/ "./src/tbskmodem.js":
/*!**************************!*\
  !*** ./src/tbskmodem.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _libtbskmodem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./libtbskmodem.js */ \"./src/libtbskmodem.js\");\n//スタンドアロン版\n\n\n//頭の悪いエクスポート。\nwindow.TBSKmodemJS=_libtbskmodem_js__WEBPACK_IMPORTED_MODULE_0__.TBSKmodemJS;\n\n//# sourceURL=webpack://tbskmodem-js/./src/tbskmodem.js?");

/***/ }),

/***/ "./src/utils/BrokenTextStreamDecoder.js":
/*!**********************************************!*\
  !*** ./src/utils/BrokenTextStreamDecoder.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrokenTextStreamDecoder\": () => (/* binding */ BrokenTextStreamDecoder)\n/* harmony export */ });\n// @ts-check\r\n\r\n/**\r\n * Transrated by chatGPT\r\n */\r\nclass BrokenTextStreamDecoder {\r\n    static MAX_CHARACTOR_BYTES = 8;\r\n\r\n    constructor(encoding=\"utf-8\") {\r\n        this._decoder = new TextDecoder(encoding);\r\n        this._a = new Uint8Array(BrokenTextStreamDecoder.MAX_CHARACTOR_BYTES);\r\n        this._len = 0;\r\n    }\r\n\r\n    _decode(length) {\r\n        try {\r\n            const bb = this._a.slice(0, length);\r\n            const decoded = this._decoder.decode(bb);\r\n            return decoded.charAt(0);\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    shift(size) {\r\n        if (size <= 0) {\r\n            return;\r\n        }\r\n        if (this._len === 0) {\r\n            return;\r\n        }\r\n        const a = this._a;\r\n        for (let i = size; i < a.length; i++) {\r\n            a[i - size] = a[i];\r\n        }\r\n        this._len -= size;\r\n    }\r\n\r\n    peekFront() {\r\n        if (this._len > 0) {\r\n            return this._a[0];\r\n        }\r\n        return null;\r\n    }\r\n    test(d){\r\n        if(arguments.length==0){\r\n            if (this._len === 0) {\r\n                return 0;\r\n            }\r\n            for (let i = 1; i <= this._len; i++) {\r\n                const r = this._decode(i);\r\n                if (r !== null) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;    \r\n        }else{\r\n            const a = this._a;\r\n            if (this._len >= a.length) {\r\n                this.shift(1);\r\n            }\r\n            a[this._len] = d;\r\n            this._len++;\r\n            return this.test();\r\n        }\r\n    }\r\n\r\n    update(d) {\r\n        const len = this.test(d);\r\n        switch (len) {\r\n            case -1:\r\n                if(arguments.length==0){\r\n                    this.shift(1);\r\n                    return \"?\";    \r\n                }else{\r\n                    if (this._len === this._a.length) {\r\n                        return \"?\";\r\n                    } else {\r\n                        return null;\r\n                    }    \r\n                }\r\n            case 0:\r\n                return null;\r\n            default:\r\n                const r = this._decode(len);\r\n                this.shift(len);\r\n                return r;\r\n        }\r\n    }\r\n    holdLen() {\r\n        return this._len;\r\n    }\r\n\r\n    isBufferFull() {\r\n        return this._len === this._a.length;\r\n    }\r\n}\n\n//# sourceURL=webpack://tbskmodem-js/./src/utils/BrokenTextStreamDecoder.js?");

/***/ }),

/***/ "./src/utils/Rms.js":
/*!**************************!*\
  !*** ./src/utils/Rms.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Rms\": () => (/* binding */ Rms)\n/* harmony export */ });\n//Thank you chatGPT!\r\nclass Rms\r\n{\r\n    constructor(length) {\r\n      if (length >= 1 << 30) {\r\n        throw new Error('length must be less than 2^30');\r\n      }\r\n      this._buf = new Int32Array(length);\r\n      this._ptr = 0;\r\n      this._sum = 0;\r\n      this._fp = 30;\r\n    }\r\n  \r\n    update(d) {\r\n      let v = d > 1 ? 1 : (d < -1 ? -1 : d); // normalize to range [-1, 1]\r\n      let iv = Math.round(v * v * (1 << this._fp)); // 31-bit int\r\n      let buf = this._buf;\r\n      this._sum += iv - buf[this._ptr]; // Σx^2\r\n      buf[this._ptr] = iv;\r\n      this._ptr = (this._ptr + 1) % buf.length;\r\n      return this;\r\n    }\r\n  \r\n    getLastRms() {\r\n      // √(Σx^2/0x7fffffff/n)\r\n      return Math.sqrt(this._sum / (1 << this._fp) / this._buf.length);\r\n    }\r\n}\n\n//# sourceURL=webpack://tbskmodem-js/./src/utils/Rms.js?");

/***/ }),

/***/ "./src/utils/classes.js":
/*!******************************!*\
  !*** ./src/utils/classes.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BasicOutputIterator\": () => (/* binding */ BasicOutputIterator),\n/* harmony export */   \"Disposable\": () => (/* binding */ Disposable),\n/* harmony export */   \"DoubleInputIterator\": () => (/* binding */ DoubleInputIterator),\n/* harmony export */   \"DoubleOutputIterator\": () => (/* binding */ DoubleOutputIterator),\n/* harmony export */   \"IntInputIterator\": () => (/* binding */ IntInputIterator),\n/* harmony export */   \"IntOutputIterator\": () => (/* binding */ IntOutputIterator),\n/* harmony export */   \"PromiseTaskQ\": () => (/* binding */ PromiseTaskQ),\n/* harmony export */   \"TbskException\": () => (/* binding */ TbskException),\n/* harmony export */   \"WasmProxy\": () => (/* binding */ WasmProxy)\n/* harmony export */ });\n/* harmony import */ var _tbskclasses_StopIteration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tbskclasses/StopIteration */ \"./src/tbskclasses/StopIteration.js\");\n/* harmony import */ var _tbskclasses_RecoverableStopIteration__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tbskclasses/RecoverableStopIteration */ \"./src/tbskclasses/RecoverableStopIteration.js\");\n// @ts-check\r\n\r\n\r\nclass TbskException extends Error {\r\n    constructor(message,tag=undefined){\r\n        super(message);\r\n        console.log(\"TbskException\",message,tag);\r\n        this._tag=tag;\r\n    }\r\n}\r\n\r\nclass PromiseTaskQ{\r\n    constructor(){\r\n        this._q=[];\r\n        this._run=false;\r\n    }\r\n    push(f){\r\n        if(!f){\r\n            return;\r\n        }\r\n        let _t=this;\r\n        _t._q.push(f);\r\n        function kick(){\r\n            let p=Promise.resolve();\r\n            _t._run=true;\r\n            p.then(()=>{\r\n                try{\r\n                    let f=_t._q[0];\r\n                    _t._q.shift();\r\n                    f();\r\n                }finally{\r\n                    if(_t._q.length>0){\r\n                        return kick();\r\n                    }else{\r\n                        _t._run=false;\r\n                    }\r\n                }\r\n            });\r\n            return p;\r\n        }\r\n        //1個めならキック\r\n        if(!_t._run){\r\n        \t\tconsole.log(\"kick\");\r\n            kick();\r\n        }\r\n    }\r\n    isIdle(){\r\n        return !this._run;\r\n    }\r\n}\r\n\r\n\r\nclass Disposable {\r\n    dispose() { }\r\n}\r\nclass WasmProxy extends Disposable{\r\n    constructor(mod,wasm_instance) {\r\n        super();\r\n        this._mod=mod;\r\n        this._wasm_instance = wasm_instance;\r\n    }\r\n    dispose() {\r\n        this._mod._wasm_tbskmodem_Dispose(this._wasm_instance);\r\n        this._wasm_instance = null;\r\n        super.dispose();\r\n    }\r\n}\r\n\r\n\r\nclass IntInputIterator extends WasmProxy {\r\n    constructor(mod) {\r\n        super(mod,mod._wasm_tbskmodem_IntInputIterator());\r\n    }\r\n    /**\r\n     * @param {number} v \r\n     * @returns \r\n     */\r\n    put(v) {\r\n        this._mod._wasm_tbskmodem_IntInputIterator_put(this._wasm_instance, v);\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {number[]} v \r\n     * @returns \r\n     */\r\n    puts(v) {\r\n        for (var i = 0; i < v.length; i++) {\r\n            this.put(v[i] & 0x000000ff);\r\n        }\r\n        return this;\r\n    }\r\n}\r\nclass DoubleInputIterator extends WasmProxy {\r\n    /**\r\n     * \r\n     * @param {boolean} is_recoverable\r\n     */\r\n    constructor(mod,is_recoverable=false) {\r\n        super(mod,mod._wasm_tbskmodem_DoubleInputIterator(is_recoverable));\r\n    }\r\n    /**\r\n     * \r\n     * @param {number} v \r\n     * @returns \r\n     */\r\n    put(v) {\r\n        this._mod._wasm_tbskmodem_DoubleInputIterator_put(this._wasm_instance, v);\r\n        return this;\r\n    }\r\n    /**\r\n     * \r\n     * @param {number[]} v \r\n     * @returns \r\n     */\r\n    puts(v) {\r\n        for (var i = 0; i < v.length; i++) {\r\n            this.put(v[i]);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\nclass BasicOutputIterator extends WasmProxy {\r\n    constructor(mod,wasm_instance) {\r\n        super(mod,wasm_instance);\r\n    }\r\n    next(){throw new _tbskclasses_StopIteration__WEBPACK_IMPORTED_MODULE_0__.StopIteration();}\r\n    toArray() {\r\n        let r = [];\r\n        try {\r\n            for (; ;) {\r\n                r.push(this.next());\r\n            }\r\n        } catch (e) {\r\n            if (e instanceof _tbskclasses_StopIteration__WEBPACK_IMPORTED_MODULE_0__.StopIteration) {\r\n                //nothing to do\r\n            } else {\r\n                console.log(e);\r\n                throw e;\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n}\r\n\r\n\r\nclass DoubleOutputIterator extends BasicOutputIterator {\r\n    constructor(mod,wasm_instance) {\r\n        super(mod,wasm_instance);\r\n    }\r\n    next() {\r\n        let s = this._mod._wasm_tbskmodem_DoubleOutputIterator_hasNext(this._wasm_instance);\r\n        switch (s) {\r\n            case 0:\r\n                return this._mod._wasm_tbskmodem_DoubleOutputIterator_lastNext(this._wasm_instance);\r\n            case 1:\r\n                throw new _tbskclasses_RecoverableStopIteration__WEBPACK_IMPORTED_MODULE_1__.RecoverableStopIteration();\r\n            case 2:\r\n                throw new _tbskclasses_StopIteration__WEBPACK_IMPORTED_MODULE_0__.StopIteration();\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n}\r\nclass IntOutputIterator extends BasicOutputIterator {\r\n    constructor(mod,wasm_instance) {\r\n        super(mod,wasm_instance);\r\n    }\r\n    next() {\r\n        let s = this._mod._wasm_tbskmodem_IntOutputIterator_hasNext(this._wasm_instance);\r\n        switch (s) {\r\n            case 0:\r\n                return this._mod._wasm_tbskmodem_IntOutputIterator_lastNext(this._wasm_instance);\r\n            case 1:\r\n                throw new _tbskclasses_RecoverableStopIteration__WEBPACK_IMPORTED_MODULE_1__.RecoverableStopIteration();\r\n            case 2:\r\n                throw new _tbskclasses_StopIteration__WEBPACK_IMPORTED_MODULE_0__.StopIteration();\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack://tbskmodem-js/./src/utils/classes.js?");

/***/ }),

/***/ "./src/utils/decoder.js":
/*!******************************!*\
  !*** ./src/utils/decoder.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PassDecoder\": () => (/* binding */ PassDecoder),\n/* harmony export */   \"Utf8Decoder\": () => (/* binding */ Utf8Decoder)\n/* harmony export */ });\n/* harmony import */ var _BrokenTextStreamDecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrokenTextStreamDecoder */ \"./src/utils/BrokenTextStreamDecoder.js\");\n//@ts-check\r\n\r\nclass PassDecoder {\r\n    reset() { }\r\n    /**\r\n     * @param {number[]} data Uint8の数列\r\n     * @returns \r\n     */\r\n    put(data) { return data; }\r\n\r\n}\r\n\r\nclass Utf8Decoder {\r\n    constructor() {\r\n        this._decoder = new _BrokenTextStreamDecoder__WEBPACK_IMPORTED_MODULE_0__.BrokenTextStreamDecoder(\"utf8\");\r\n        this._q = [];\r\n        this._tmp = [];\r\n    }\r\n    reset() {\r\n        this._q = [];\r\n        this._tmp = [];\r\n    }\r\n    /**\r\n     * @param {number[]} data Uint8の数列\r\n     * @returns \r\n     */\r\n    put(data) {\r\n        let r=\"\";\r\n        for (let i = 0; i < data.length; i++) {\r\n            let c=this._decoder.update(data[i]);\r\n            if(c!=null){\r\n                r=r+c;\r\n            }\r\n        }\r\n        return (r.length>0)?r:undefined;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://tbskmodem-js/./src/utils/decoder.js?");

/***/ }),

/***/ "./src/utils/functions.js":
/*!********************************!*\
  !*** ./src/utils/functions.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TBSK_ASSERT\": () => (/* binding */ TBSK_ASSERT),\n/* harmony export */   \"set_default\": () => (/* binding */ set_default)\n/* harmony export */ });\n// @ts-check\r\nfunction TBSK_ASSERT(e,message){if(!e){console.error(\"ASSERT\");throw new Error(\"ASSERT!\");}}\r\nfunction set_default(a, v) { return (a === undefined || a === null) ? v : a; }\r\n\n\n//# sourceURL=webpack://tbskmodem-js/./src/utils/functions.js?");

/***/ }),

/***/ "./src/wasm/tbskmodem_wasm_mod.js":
/*!****************************************!*\
  !*** ./src/wasm/tbskmodem_wasm_mod.js ***!
  \****************************************/
/***/ ((module) => {

eval("\nvar Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module = typeof Module != \"undefined\" ? Module : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise(function(resolve, reject) {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = true;\n\nvar ENVIRONMENT_IS_WORKER = false;\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document != \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n {\n  read_ = url => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = url => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(xhr.response);\n   };\n  }\n  readAsync = (url, onload, onerror) => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = () => {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = title => document.title = title;\n} else {}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nObject.assign(Module, moduleOverrides);\n\nmoduleOverrides = null;\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nvar POINTER_SIZE = 4;\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nif (typeof WebAssembly != \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(text);\n }\n}\n\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n }\n var str = \"\";\n while (idx < endPtr) {\n  var u0 = heapOrArray[idx++];\n  if (!(u0 & 128)) {\n   str += String.fromCharCode(u0);\n   continue;\n  }\n  var u1 = heapOrArray[idx++] & 63;\n  if ((u0 & 224) == 192) {\n   str += String.fromCharCode((u0 & 31) << 6 | u1);\n   continue;\n  }\n  var u2 = heapOrArray[idx++] & 63;\n  if ((u0 & 240) == 224) {\n   u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n  } else {\n   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n  }\n  if (u0 < 65536) {\n   str += String.fromCharCode(u0);\n  } else {\n   var ch = u0 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++] = 192 | u >> 6;\n   heap[outIdx++] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++] = 224 | u >> 12;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   heap[outIdx++] = 240 | u >> 18;\n   heap[outIdx++] = 128 | u >> 12 & 63;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  }\n }\n heap[outIdx] = 0;\n return outIdx - startIdx;\n}\n\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n buffer = buf;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n}\n\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n\nvar wasmTable;\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n runtimeInitialized = true;\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what = \"Aborted(\" + what + \")\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n what += \". Build with -sASSERTIONS for more info.\";\n ___trap();\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return filename.startsWith(dataURIPrefix);\n}\n\nvar wasmBinaryFile;\n\nwasmBinaryFile = \"tbskmodem_wasm_mod.wasm\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n   return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise() {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch == \"function\") {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(function() {\n    return getBinary(wasmBinaryFile);\n   });\n  }\n }\n return Promise.resolve().then(function() {\n  return getBinary(wasmBinaryFile);\n });\n}\n\nfunction createWasm() {\n var info = {\n  \"env\": asmLibraryArg,\n  \"wasi_snapshot_preview1\": asmLibraryArg\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"memory\"];\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n  addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n  removeRunDependency(\"wasm-instantiate\");\n }\n addRunDependency(\"wasm-instantiate\");\n function receiveInstantiationResult(result) {\n  receiveInstance(result[\"instance\"]);\n }\n function instantiateArrayBuffer(receiver) {\n  return getBinaryPromise().then(function(binary) {\n   return WebAssembly.instantiate(binary, info);\n  }).then(function(instance) {\n   return instance;\n  }).then(receiver, function(reason) {\n   err(\"failed to asynchronously prepare wasm: \" + reason);\n   abort(reason);\n  });\n }\n function instantiateAsync() {\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch == \"function\") {\n   return fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    var result = WebAssembly.instantiateStreaming(response, info);\n    return result.then(receiveInstantiationResult, function(reason) {\n     err(\"wasm streaming compile failed: \" + reason);\n     err(\"falling back to ArrayBuffer instantiation\");\n     return instantiateArrayBuffer(receiveInstantiationResult);\n    });\n   });\n  } else {\n   return instantiateArrayBuffer(receiveInstantiationResult);\n  }\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n   return exports;\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   readyPromiseReject(e);\n  }\n }\n instantiateAsync().catch(readyPromiseReject);\n return {};\n}\n\nvar tempDouble;\n\nvar tempI64;\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  callbacks.shift()(Module);\n }\n}\n\nfunction _TBSKmodem_api_load_() {\n let MOD = Module;\n if (\"tbskmodem\" in MOD) {\n  console.log(\"tbskmodem api is already initialized.\");\n  return;\n }\n console.log(\"Start tbskmodem initialize.\");\n function set_default(a, v) {\n  return a === undefined || a === null ? v : a;\n }\n class Disposable {\n  dispose() {}\n }\n class WasmProxy extends Disposable {\n  constructor(wasm_instance) {\n   super();\n   this._wasm_instance = wasm_instance;\n  }\n  dispose() {\n   MOD._wasm_tbskmodem_Dispose(this._wasm_instance);\n   this._wasm_instance = null;\n   super.dispose();\n  }\n }\n class IntInputIterator extends WasmProxy {\n  constructor() {\n   super(MOD._wasm_tbskmodem_IntInputIterator());\n  }\n  put(v) {\n   MOD._wasm_tbskmodem_IntInputIterator_put(this._wasm_instance, v);\n   return this;\n  }\n  puts(v) {\n   for (var i = 0; i < v.length; i++) {\n    this.put(v[i] & 255);\n   }\n   return this;\n  }\n }\n class DoubleInputIterator extends WasmProxy {\n  constructor(is_recoverable = false) {\n   super(MOD._wasm_tbskmodem_DoubleInputIterator(is_recoverable));\n  }\n  put(v) {\n   MOD._wasm_tbskmodem_DoubleInputIterator_put(this._wasm_instance, v);\n   return this;\n  }\n  puts(v) {\n   for (var i = 0; i < v.length; i++) {\n    this.put(v[i]);\n   }\n   return this;\n  }\n }\n class BasicOutputIterator extends WasmProxy {\n  constructor(wasm_instance) {\n   super(wasm_instance);\n  }\n  toArray() {\n   let r = [];\n   try {\n    for (;;) {\n     r.push(this.next());\n    }\n   } catch (e) {\n    if (e instanceof StopIteration) {} else {\n     console.log(e);\n     throw e;\n    }\n   }\n   return r;\n  }\n }\n class DoubleOutputIterator extends BasicOutputIterator {\n  constructor(wasm_instance) {\n   super(wasm_instance);\n  }\n  next() {\n   let s = MOD._wasm_tbskmodem_DoubleOutputIterator_hasNext(this._wasm_instance);\n   switch (s) {\n   case 0:\n    return MOD._wasm_tbskmodem_DoubleOutputIterator_lastNext(this._wasm_instance);\n\n   case 1:\n    throw new RecoverableStopIteration();\n\n   case 2:\n    throw new StopIteration();\n\n   default:\n    throw new Error();\n   }\n  }\n }\n class IntOutputIterator extends BasicOutputIterator {\n  constructor(wasm_instance) {\n   super(wasm_instance);\n  }\n  next() {\n   let s = MOD._wasm_tbskmodem_IntOutputIterator_hasNext(this._wasm_instance);\n   switch (s) {\n   case 0:\n    return MOD._wasm_tbskmodem_IntOutputIterator_lastNext(this._wasm_instance);\n\n   case 1:\n    throw new RecoverableStopIteration();\n\n   case 2:\n    throw new StopIteration();\n\n   default:\n    throw new Error();\n   }\n  }\n }\n class StopIteration extends Error {}\n class RecoverableStopIteration extends StopIteration {}\n class TraitTone extends WasmProxy {\n  constructor(double_array) {\n   super(MOD._wasm_tbskmodem_TraitTone());\n  }\n }\n class SieTone extends WasmProxy {\n  constructor(poinsts, cycle) {\n   let _cycle = set_default(cycle, 1);\n   super(MOD._wasm_tbskmodemm_SinTone(points, _cycle));\n  }\n }\n class XPskSinTone extends WasmProxy {\n  constructor(poinsts, cycle, div) {\n   let _cycle = set_default(cycle, 1);\n   let _div = set_default(div, 8);\n   super(MOD._wasm_tbskmodem_XPskSinTone(poinsts, _cycle, _div));\n  }\n }\n class CoffPreamble extends WasmProxy {\n  constructor(tone, threshold, cycle) {\n   let _threshold = set_default(threshold, 1);\n   let _cycle = set_default(cycle, 4);\n   super(MOD._wasm_tbskmodem_CoffPreamble(tone._wasm_instance, _threshold, _cycle));\n  }\n }\n class PassDecoder {\n  reset() {}\n  put(data) {\n   return data;\n  }\n }\n class Utf8Decoder {\n  constructor() {\n   this._decoder = new TextDecoder(\"utf8\", {\n    fatal: true\n   });\n   this._q = [];\n   this._tmp = [];\n  }\n  reset() {\n   this._q = [];\n   this._tmp = [];\n  }\n  put(data) {\n   for (let i = 0; i < data.length; i++) {\n    this._q.push(data[i]);\n   }\n   let ret = [];\n   ML: while (this._q.length > 0) {\n    for (var i = 0; i < this._q.length; i++) {\n     try {\n      let inp = new Uint8Array(this._q.slice(0, i + 1));\n      ret.push(this._decoder.decode(inp));\n      this._q = this._q.slice(i + 1);\n      continue ML;\n     } catch (e) {\n      if (i > 8) {\n       ret.push(this._q[0]);\n       this._q = this._q.slice(1);\n       continue ML;\n      }\n     }\n    }\n    break;\n   }\n   if (ret.length > 0) {\n    return ret;\n   }\n   return undefined;\n  }\n }\n class TbskModulator extends WasmProxy {\n  constructor(tone, preamble_cycle = 4) {\n   super(MOD._wasm_tbskmodem_TbskModulator_A(tone._wasm_instance, preamble_cycle));\n  }\n  modulate(src, stopsymbol = true) {\n   var buf = new IntInputIterator();\n   try {\n    if (typeof src == \"string\") {\n     let te = new TextEncoder();\n     buf.puts(te.encode(src));\n    } else {\n     buf.puts(src);\n    }\n    let wi = MOD._wasm_tbskmodem_TbskModulator_Modulate(this._wasm_instance, buf._wasm_instance, stopsymbol);\n    if (wi == null) {\n     throw new Error();\n    }\n    let out = new DoubleOutputIterator(wi);\n    try {\n     return out.toArray();\n    } finally {\n     out.dispose();\n    }\n   } finally {\n    buf.dispose();\n   }\n  }\n  modulate2AudioBuffer(actx, src, sampleRate) {\n   let f32_array = this.modulate(src);\n   let buf = actx.createBuffer(1, f32_array.length, sampleRate);\n   buf.getChannelData(0).set(f32_array);\n   return buf;\n  }\n }\n class TbskDemodulator extends WasmProxy {\n  constructor(tone, preamble_th = 1, preamble_cycle = 4) {\n   super(MOD._wasm_tbskmodem_TbskDemodulator_A(tone._wasm_instance, preamble_th, preamble_cycle));\n  }\n  _demodulateAsInt(buf) {\n   let r = MOD._wasm_tbskmodem_TbskDemodulator_DemodulateAsInt(this._wasm_instance, buf._wasm_instance);\n   if (r == 0) {\n    return null;\n   }\n   return new IntOutputIterator(r);\n  }\n  demodulate(src, decoder = undefined) {\n   if (decoder == \"utf8\") {\n    decoder = new Utf8Decoder();\n   } else {\n    decoder = new PassDecoder();\n   }\n   let buf = new DoubleInputIterator();\n   try {\n    buf.puts(src);\n    let out = this._demodulateAsInt(buf);\n    if (out == null) {\n     return [];\n    }\n    try {\n     if (decoder) {\n      return decoder.put(out.toArray());\n     } else {\n      return out.toArray();\n     }\n    } finally {\n     out.dispose();\n    }\n   } finally {\n    buf.dispose();\n   }\n  }\n  _demodulateAsInt_B(src) {\n   let r = MOD._wasm_tbskmodem_TbskDemodulator_DemodulateAsInt_B(this._wasm_instance, src._wasm_instance);\n   if (r == 0) {\n    return null;\n   }\n   return new DemodulateResult(r);\n  }\n }\n class DemodulateResult extends WasmProxy {\n  constructor(wasm_instance) {\n   super(wasm_instance);\n  }\n  getType() {\n   return MOD._wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetType(this._wasm_instance);\n  }\n  getOutput() {\n   return new IntOutputIterator(MOD._wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetOutput(this._wasm_instance));\n  }\n  getRecover() {\n   let wi = MOD._wasm_tbskmodem_TbskDemodulator_DemodulateResult_Recover(this._wasm_instance);\n   if (wi == 0) {\n    return null;\n   }\n   return new IntOutputIterator(wi);\n  }\n }\n class TbskListener extends Disposable {\n  constructor(tone, preamble_th = 1, preamble_cycle = 4, events = {}, decoder = undefined) {\n   super();\n   if (!(\"onStart\" in events)) {\n    events.onStart = null;\n   }\n   if (!(\"onData\" in events)) {\n    events.onData = null;\n   }\n   if (!(\"onEnd\" in events)) {\n    events.onEnd = null;\n   }\n   let _t = this;\n   this._decoder = decoder == \"utf8\" ? new Utf8Decoder() : new PassDecoder();\n   this._demod = new TbskDemodulator(tone, preamble_th, preamble_cycle);\n   this._input_buf = new DoubleInputIterator(true);\n   this._callOnStart = () => {\n    new Promise(resolve => {\n     resolve();\n    }).then(() => {\n     if (events.onStart) {\n      events.onStart();\n     }\n    });\n   };\n   this._callOnData = data => {\n    new Promise(resolve => {\n     resolve();\n    }).then(() => {\n     if (events.onData) {\n      events.onData(data);\n     }\n    });\n   };\n   this._callOnEnd = () => {\n    new Promise(resolve => {\n     resolve();\n    }).then(() => {\n     if (events.onEnd) {\n      events.onEnd();\n     }\n    });\n   };\n  }\n  dispose() {\n   if (this._currentGenerator) {\n    try {\n     this._currentGenerator.throw(new Error(\"Brake workflow!\"));\n    } catch (e) {}\n   }\n   this._demod.dispose();\n   this._input_buf.dispose();\n  }\n  push(src) {\n   function* workflow(demod, input_buf, callOnStart, callOnData, callOnEnd, decoder) {\n    decoder.reset();\n    let out_buf = null;\n    let dresult = null;\n    dresult = demod._demodulateAsInt_B(input_buf);\n    if (dresult == null) {\n     console.error(\"input err\");\n     return;\n    }\n    try {\n     try {\n      switch (dresult.getType()) {\n      case 1:\n       out_buf = dresult.getOutput();\n       break;\n\n      case 2:\n       for (;;) {\n        out_buf = dresult.getRecover();\n        if (out_buf != null) {\n         break;\n        }\n        yield;\n       }\n       break;\n\n      default:\n       console.error(\"unknown type.\");\n       return;\n      }\n     } finally {\n      dresult.dispose();\n      dresult = null;\n     }\n     console.log(\"Signal detected!\");\n     callOnStart();\n     let ra = [];\n     for (;;) {\n      try {\n       for (;;) {\n        let w = out_buf.next();\n        ra.push(w);\n       }\n      } catch (e) {\n       if (e instanceof RecoverableStopIteration) {\n        if (ra.length > 0) {\n         console.log(\"data:\");\n         if (decoder) {\n          let rd = decoder.put(ra);\n          if (rd) {\n           callOnData(rd);\n          }\n         } else {\n          callOnData(ra);\n         }\n         ra = [];\n        }\n        yield;\n        continue;\n       } else if (e instanceof StopIteration) {\n        if (ra.length > 0) {\n         console.log(\"data:\");\n         if (decoder) {\n          let rd = decoder.put(ra);\n          if (rd) {\n           callOnData(rd);\n          }\n         } else {\n          callOnData(ra);\n         }\n         ra = [];\n        }\n        console.log(\"Signal lost!\");\n        callOnEnd();\n       }\n      }\n      out_buf.dispose();\n      out_buf = null;\n      return;\n     }\n    } finally {\n     if (out_buf) {\n      out_buf.dispose();\n     }\n     if (dresult) {\n      dresult.dispose();\n     }\n    }\n    console.log(\"end of workflow\");\n   }\n   this._input_buf.puts(src);\n   if (this._currentGenerator == null) {\n    this._currentGenerator = workflow(this._demod, this._input_buf, this._callOnStart, this._callOnData, this._callOnEnd, this._decoder);\n   }\n   if (this._currentGenerator.next().done) {\n    this._currentGenerator = null;\n   }\n  }\n }\n class PcmData extends WasmProxy {\n  constructor(wasm_instance) {\n   super(wasm_instance);\n  }\n  static create(float_data, sample_bits, frame_rate) {\n   let input_src = new DoubleInputIterator();\n   input_src.puts(float_data);\n   return new PcmData(MOD._wasm_tbskmodem_PcmData_2(input_src._wasm_instance, sample_bits, frame_rate));\n  }\n  dump() {\n   let iter = new IntOutputIterator(MOD._wasm_tbskmodem_PcmData_Dump(this._wasm_instance));\n   return new Uint8Array(iter.toArray());\n  }\n }\n const JSBIND_VERSION = \"JSBind/0.1.1\";\n MOD.tbskmodem = {\n  VERSION: (() => {\n   return JSBIND_VERSION + \";TBSKmodemCPP/\" + MOD._wasm_tbskmodem_VERSION(0) + \".\" + MOD._wasm_tbskmodem_VERSION(1) + \".\" + MOD._wasm_tbskmodem_VERSION(2);\n  })(),\n  getPointerHolderSize: () => {\n   return MOD._wasm_tbskmodem_PointerHolder_Size();\n  },\n  Utf8Decoder: Utf8Decoder,\n  WasmProxy: WasmProxy,\n  StopIteration: StopIteration,\n  IntInputIterator: IntInputIterator,\n  DoubleInputIterator: DoubleInputIterator,\n  IntOutputIterator: IntOutputIterator,\n  DoubleOutputIterator: DoubleOutputIterator,\n  TraitTone: TraitTone,\n  SieTone: SieTone,\n  XPskSinTone: XPskSinTone,\n  CoffPreamble: CoffPreamble,\n  TbskModulator: TbskModulator,\n  TbskDemodulator: TbskDemodulator,\n  TbskListener: TbskListener,\n  PcmData: PcmData\n };\n console.log(\"tbskmodem initialized.\", this._instance);\n return this._instance;\n}\n\nfunction ___assert_fail(condition, filename, line, func) {\n abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [ filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\" ]);\n}\n\nfunction _abort() {\n abort(\"\");\n}\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest, src, src + num);\n}\n\nfunction abortOnCannotGrowMemory(requestedSize) {\n abort(\"OOM\");\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n abortOnCannotGrowMemory(requestedSize);\n}\n\nvar asmLibraryArg = {\n \"TBSKmodem_api_load_\": _TBSKmodem_api_load_,\n \"__assert_fail\": ___assert_fail,\n \"abort\": _abort,\n \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n \"emscripten_resize_heap\": _emscripten_resize_heap\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_VERSION = Module[\"_wasm_tbskmodem_VERSION\"] = function() {\n return (_wasm_tbskmodem_VERSION = Module[\"_wasm_tbskmodem_VERSION\"] = Module[\"asm\"][\"wasm_tbskmodem_VERSION\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_malloc = Module[\"_wasm_tbskmodem_malloc\"] = function() {\n return (_wasm_tbskmodem_malloc = Module[\"_wasm_tbskmodem_malloc\"] = Module[\"asm\"][\"wasm_tbskmodem_malloc\"]).apply(null, arguments);\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_free = Module[\"_wasm_tbskmodem_free\"] = function() {\n return (_wasm_tbskmodem_free = Module[\"_wasm_tbskmodem_free\"] = Module[\"asm\"][\"wasm_tbskmodem_free\"]).apply(null, arguments);\n};\n\nvar _free = Module[\"_free\"] = function() {\n return (_free = Module[\"_free\"] = Module[\"asm\"][\"free\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_putInt = Module[\"_wasm_tbskmodem_putInt\"] = function() {\n return (_wasm_tbskmodem_putInt = Module[\"_wasm_tbskmodem_putInt\"] = Module[\"asm\"][\"wasm_tbskmodem_putInt\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_getInt = Module[\"_wasm_tbskmodem_getInt\"] = function() {\n return (_wasm_tbskmodem_getInt = Module[\"_wasm_tbskmodem_getInt\"] = Module[\"asm\"][\"wasm_tbskmodem_getInt\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_PointerHolder_Size = Module[\"_wasm_tbskmodem_PointerHolder_Size\"] = function() {\n return (_wasm_tbskmodem_PointerHolder_Size = Module[\"_wasm_tbskmodem_PointerHolder_Size\"] = Module[\"asm\"][\"wasm_tbskmodem_PointerHolder_Size\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_Dispose = Module[\"_wasm_tbskmodem_Dispose\"] = function() {\n return (_wasm_tbskmodem_Dispose = Module[\"_wasm_tbskmodem_Dispose\"] = Module[\"asm\"][\"wasm_tbskmodem_Dispose\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_IntInputIterator = Module[\"_wasm_tbskmodem_IntInputIterator\"] = function() {\n return (_wasm_tbskmodem_IntInputIterator = Module[\"_wasm_tbskmodem_IntInputIterator\"] = Module[\"asm\"][\"wasm_tbskmodem_IntInputIterator\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_IntInputIterator_put = Module[\"_wasm_tbskmodem_IntInputIterator_put\"] = function() {\n return (_wasm_tbskmodem_IntInputIterator_put = Module[\"_wasm_tbskmodem_IntInputIterator_put\"] = Module[\"asm\"][\"wasm_tbskmodem_IntInputIterator_put\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_DoubleInputIterator = Module[\"_wasm_tbskmodem_DoubleInputIterator\"] = function() {\n return (_wasm_tbskmodem_DoubleInputIterator = Module[\"_wasm_tbskmodem_DoubleInputIterator\"] = Module[\"asm\"][\"wasm_tbskmodem_DoubleInputIterator\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_DoubleInputIterator_put = Module[\"_wasm_tbskmodem_DoubleInputIterator_put\"] = function() {\n return (_wasm_tbskmodem_DoubleInputIterator_put = Module[\"_wasm_tbskmodem_DoubleInputIterator_put\"] = Module[\"asm\"][\"wasm_tbskmodem_DoubleInputIterator_put\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_IntOutputIterator_hasNext = Module[\"_wasm_tbskmodem_IntOutputIterator_hasNext\"] = function() {\n return (_wasm_tbskmodem_IntOutputIterator_hasNext = Module[\"_wasm_tbskmodem_IntOutputIterator_hasNext\"] = Module[\"asm\"][\"wasm_tbskmodem_IntOutputIterator_hasNext\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_IntOutputIterator_lastNext = Module[\"_wasm_tbskmodem_IntOutputIterator_lastNext\"] = function() {\n return (_wasm_tbskmodem_IntOutputIterator_lastNext = Module[\"_wasm_tbskmodem_IntOutputIterator_lastNext\"] = Module[\"asm\"][\"wasm_tbskmodem_IntOutputIterator_lastNext\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_DoubleOutputIterator_hasNext = Module[\"_wasm_tbskmodem_DoubleOutputIterator_hasNext\"] = function() {\n return (_wasm_tbskmodem_DoubleOutputIterator_hasNext = Module[\"_wasm_tbskmodem_DoubleOutputIterator_hasNext\"] = Module[\"asm\"][\"wasm_tbskmodem_DoubleOutputIterator_hasNext\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_DoubleOutputIterator_lastNext = Module[\"_wasm_tbskmodem_DoubleOutputIterator_lastNext\"] = function() {\n return (_wasm_tbskmodem_DoubleOutputIterator_lastNext = Module[\"_wasm_tbskmodem_DoubleOutputIterator_lastNext\"] = Module[\"asm\"][\"wasm_tbskmodem_DoubleOutputIterator_lastNext\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TraitTone = Module[\"_wasm_tbskmodem_TraitTone\"] = function() {\n return (_wasm_tbskmodem_TraitTone = Module[\"_wasm_tbskmodem_TraitTone\"] = Module[\"asm\"][\"wasm_tbskmodem_TraitTone\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_SinTone = Module[\"_wasm_tbskmodem_SinTone\"] = function() {\n return (_wasm_tbskmodem_SinTone = Module[\"_wasm_tbskmodem_SinTone\"] = Module[\"asm\"][\"wasm_tbskmodem_SinTone\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_XPskSinTone = Module[\"_wasm_tbskmodem_XPskSinTone\"] = function() {\n return (_wasm_tbskmodem_XPskSinTone = Module[\"_wasm_tbskmodem_XPskSinTone\"] = Module[\"asm\"][\"wasm_tbskmodem_XPskSinTone\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_CoffPreamble = Module[\"_wasm_tbskmodem_CoffPreamble\"] = function() {\n return (_wasm_tbskmodem_CoffPreamble = Module[\"_wasm_tbskmodem_CoffPreamble\"] = Module[\"asm\"][\"wasm_tbskmodem_CoffPreamble\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskModulator_A = Module[\"_wasm_tbskmodem_TbskModulator_A\"] = function() {\n return (_wasm_tbskmodem_TbskModulator_A = Module[\"_wasm_tbskmodem_TbskModulator_A\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskModulator_A\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskModulator_B = Module[\"_wasm_tbskmodem_TbskModulator_B\"] = function() {\n return (_wasm_tbskmodem_TbskModulator_B = Module[\"_wasm_tbskmodem_TbskModulator_B\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskModulator_B\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskModulator_Modulate = Module[\"_wasm_tbskmodem_TbskModulator_Modulate\"] = function() {\n return (_wasm_tbskmodem_TbskModulator_Modulate = Module[\"_wasm_tbskmodem_TbskModulator_Modulate\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskModulator_Modulate\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskDemodulator_A = Module[\"_wasm_tbskmodem_TbskDemodulator_A\"] = function() {\n return (_wasm_tbskmodem_TbskDemodulator_A = Module[\"_wasm_tbskmodem_TbskDemodulator_A\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskDemodulator_A\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskDemodulator_B = Module[\"_wasm_tbskmodem_TbskDemodulator_B\"] = function() {\n return (_wasm_tbskmodem_TbskDemodulator_B = Module[\"_wasm_tbskmodem_TbskDemodulator_B\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskDemodulator_B\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskDemodulator_DemodulateAsInt = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateAsInt\"] = function() {\n return (_wasm_tbskmodem_TbskDemodulator_DemodulateAsInt = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateAsInt\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskDemodulator_DemodulateAsInt\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskDemodulator_DemodulateAsInt_B = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateAsInt_B\"] = function() {\n return (_wasm_tbskmodem_TbskDemodulator_DemodulateAsInt_B = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateAsInt_B\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskDemodulator_DemodulateAsInt_B\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetType = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetType\"] = function() {\n return (_wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetType = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetType\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetType\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetOutput = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetOutput\"] = function() {\n return (_wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetOutput = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetOutput\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskDemodulator_DemodulateResult_GetOutput\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_TbskDemodulator_DemodulateResult_Recover = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateResult_Recover\"] = function() {\n return (_wasm_tbskmodem_TbskDemodulator_DemodulateResult_Recover = Module[\"_wasm_tbskmodem_TbskDemodulator_DemodulateResult_Recover\"] = Module[\"asm\"][\"wasm_tbskmodem_TbskDemodulator_DemodulateResult_Recover\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_PcmData_1 = Module[\"_wasm_tbskmodem_PcmData_1\"] = function() {\n return (_wasm_tbskmodem_PcmData_1 = Module[\"_wasm_tbskmodem_PcmData_1\"] = Module[\"asm\"][\"wasm_tbskmodem_PcmData_1\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_PcmData_2 = Module[\"_wasm_tbskmodem_PcmData_2\"] = function() {\n return (_wasm_tbskmodem_PcmData_2 = Module[\"_wasm_tbskmodem_PcmData_2\"] = Module[\"asm\"][\"wasm_tbskmodem_PcmData_2\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_PcmData_GetSampleBits = Module[\"_wasm_tbskmodem_PcmData_GetSampleBits\"] = function() {\n return (_wasm_tbskmodem_PcmData_GetSampleBits = Module[\"_wasm_tbskmodem_PcmData_GetSampleBits\"] = Module[\"asm\"][\"wasm_tbskmodem_PcmData_GetSampleBits\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_PcmData_GetFramerate = Module[\"_wasm_tbskmodem_PcmData_GetFramerate\"] = function() {\n return (_wasm_tbskmodem_PcmData_GetFramerate = Module[\"_wasm_tbskmodem_PcmData_GetFramerate\"] = Module[\"asm\"][\"wasm_tbskmodem_PcmData_GetFramerate\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_PcmData_GetByteslen = Module[\"_wasm_tbskmodem_PcmData_GetByteslen\"] = function() {\n return (_wasm_tbskmodem_PcmData_GetByteslen = Module[\"_wasm_tbskmodem_PcmData_GetByteslen\"] = Module[\"asm\"][\"wasm_tbskmodem_PcmData_GetByteslen\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_PcmData_DataAsFloat = Module[\"_wasm_tbskmodem_PcmData_DataAsFloat\"] = function() {\n return (_wasm_tbskmodem_PcmData_DataAsFloat = Module[\"_wasm_tbskmodem_PcmData_DataAsFloat\"] = Module[\"asm\"][\"wasm_tbskmodem_PcmData_DataAsFloat\"]).apply(null, arguments);\n};\n\nvar _wasm_tbskmodem_PcmData_Dump = Module[\"_wasm_tbskmodem_PcmData_Dump\"] = function() {\n return (_wasm_tbskmodem_PcmData_Dump = Module[\"_wasm_tbskmodem_PcmData_Dump\"] = Module[\"asm\"][\"wasm_tbskmodem_PcmData_Dump\"]).apply(null, arguments);\n};\n\nvar _load_apis = Module[\"_load_apis\"] = function() {\n return (_load_apis = Module[\"_load_apis\"] = Module[\"asm\"][\"load_apis\"]).apply(null, arguments);\n};\n\nvar ___errno_location = Module[\"___errno_location\"] = function() {\n return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\n};\n\nvar ___trap = Module[\"___trap\"] = function() {\n return (___trap = Module[\"___trap\"] = Module[\"asm\"][\"__trap\"]).apply(null, arguments);\n};\n\nvar _setThrew = Module[\"_setThrew\"] = function() {\n return (_setThrew = Module[\"_setThrew\"] = Module[\"asm\"][\"setThrew\"]).apply(null, arguments);\n};\n\nvar stackSave = Module[\"stackSave\"] = function() {\n return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\n};\n\nvar stackRestore = Module[\"stackRestore\"] = function() {\n return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\n};\n\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\n return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\n};\n\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\n return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\n};\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction run(args) {\n args = args || arguments_;\n if (runDependencies > 0) {\n  return;\n }\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n}\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\n\n  return Module.ready\n}\n);\n})();\nif (true)\n  module.exports = Module;\nelse {}\n\n\n//# sourceURL=webpack://tbskmodem-js/./src/wasm/tbskmodem_wasm_mod.js?");

/***/ }),

/***/ "./src/wasm/tbskmodem_wasm_mod.wasm":
/*!******************************************!*\
  !*** ./src/wasm/tbskmodem_wasm_mod.wasm ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"data:application/wasm;base64,AGFzbQEAAAABogEZYAF/AGABfwF/YAF/AXxgAn9/AX9gAn9/AGADf39/AX9gAABgBH9/f38AYAN/f38AYAF/AX5gBn9/f39/fwBgBX9/f39/AGAEf39/fwF/YAABf2AFf39/f38Bf2ADf3x/AX9gAn98AGAEf398fwF/YAN/f3wBf2ACfH8BfGADfHx/AXxgAnx8AXxgAXwBfGAGf39/f39/AX9gBX5/f39/AX8CdAUDZW52DV9fYXNzZXJ0X2ZhaWwABwNlbnYTVEJTS21vZGVtX2FwaV9sb2FkXwAGA2VudhVlbXNjcmlwdGVuX21lbWNweV9iaWcACANlbnYWZW1zY3JpcHRlbl9yZXNpemVfaGVhcAABA2VudgVhYm9ydAAGA+QD4gMGAAEBAAgDDQAADQEABAABEAABAQECAwYGAwUPAwMFDwMDAwQBAwEFBQEBAQEAAQMGBQYBAAABAAEAAQAAAQEBAQAEBAEAAAEAAAICAQABAAEAAQABAAEAAQAAAQABAAEAAAEAAAMBAAEAAgIBAAEAAQAAAQABAAEBAQABABEEBQgFAQEAAQACBQQEAgUBAAEAAQAGAAMSAQABAAEEBgcHBAABAAEAAgIBAAEAAQAAAgEBAAwDDgMAAAUMAQABBAMBAQAAAwMCAgkJAQEBAAADAwEBCQkBBQQEAQUBAQAAAQEJCQEMAQEAAAEBBQICAQABAAEBAQAAAgIBDAEAAg4DAQEABQwEAwMDAwEABQABAwEEAA4BAQMBAAABAQABAAUBAAcBAQAEAAEFCAEBAAEAAQAFBAEJAQEACQEAAgIBAAEAAAEBAAICAQABAAEBAAICAQABAAEAAAUBAQAAAwEJBAABCAEBAAEAAQABAAAHAAEAAAIBAAEAAQEAAQEBAAUFAxMUFRYNAQAEAQcDBAsKFwUFCA4IAQADAQEEAwMBAQEAAQgEAQABBgYGBgYAAwYABgEAAQEFBQgHBwcDBwcICwoLCwsKCgoBAQEBAQAAAQEAAwEBGAEEAQEABA0AAQQGAwQHAXABwAPAAwUGAQGAAoACDQMBAAAGDQJ/AUGAwgULfwFBAAsH1wsxBm1lbW9yeQIAEV9fd2FzbV9jYWxsX2N0b3JzAAUWd2FzbV90YnNrbW9kZW1fVkVSU0lPTgAHFXdhc21fdGJza21vZGVtX21hbGxvYwAIBm1hbGxvYwCMAxN3YXNtX3Ric2ttb2RlbV9mcmVlAAkEZnJlZQCNAxV3YXNtX3Ric2ttb2RlbV9wdXRJbnQAChV3YXNtX3Ric2ttb2RlbV9nZXRJbnQACyF3YXNtX3Ric2ttb2RlbV9Qb2ludGVySG9sZGVyX1NpemUADBZ3YXNtX3Ric2ttb2RlbV9EaXNwb3NlAA0fd2FzbV90YnNrbW9kZW1fSW50SW5wdXRJdGVyYXRvcgAPI3dhc21fdGJza21vZGVtX0ludElucHV0SXRlcmF0b3JfcHV0ABIid2FzbV90YnNrbW9kZW1fRG91YmxlSW5wdXRJdGVyYXRvcgAUJndhc21fdGJza21vZGVtX0RvdWJsZUlucHV0SXRlcmF0b3JfcHV0ABUod2FzbV90YnNrbW9kZW1fSW50T3V0cHV0SXRlcmF0b3JfaGFzTmV4dAAXKXdhc21fdGJza21vZGVtX0ludE91dHB1dEl0ZXJhdG9yX2xhc3ROZXh0ABgrd2FzbV90YnNrbW9kZW1fRG91YmxlT3V0cHV0SXRlcmF0b3JfaGFzTmV4dAAZLHdhc21fdGJza21vZGVtX0RvdWJsZU91dHB1dEl0ZXJhdG9yX2xhc3ROZXh0ABoYd2FzbV90YnNrbW9kZW1fVHJhaXRUb25lABsWd2FzbV90YnNrbW9kZW1fU2luVG9uZQAeGndhc21fdGJza21vZGVtX1hQc2tTaW5Ub25lAB8bd2FzbV90YnNrbW9kZW1fQ29mZlByZWFtYmxlACAed2FzbV90YnNrbW9kZW1fVGJza01vZHVsYXRvcl9BACEed2FzbV90YnNrbW9kZW1fVGJza01vZHVsYXRvcl9CACIld2FzbV90YnNrbW9kZW1fVGJza01vZHVsYXRvcl9Nb2R1bGF0ZQAjIHdhc21fdGJza21vZGVtX1Ric2tEZW1vZHVsYXRvcl9BACQgd2FzbV90YnNrbW9kZW1fVGJza0RlbW9kdWxhdG9yX0IAJS53YXNtX3Ric2ttb2RlbV9UYnNrRGVtb2R1bGF0b3JfRGVtb2R1bGF0ZUFzSW50ACYwd2FzbV90YnNrbW9kZW1fVGJza0RlbW9kdWxhdG9yX0RlbW9kdWxhdGVBc0ludF9CACc3d2FzbV90YnNrbW9kZW1fVGJza0RlbW9kdWxhdG9yX0RlbW9kdWxhdGVSZXN1bHRfR2V0VHlwZQApOXdhc21fdGJza21vZGVtX1Ric2tEZW1vZHVsYXRvcl9EZW1vZHVsYXRlUmVzdWx0X0dldE91dHB1dAAqN3dhc21fdGJza21vZGVtX1Ric2tEZW1vZHVsYXRvcl9EZW1vZHVsYXRlUmVzdWx0X1JlY292ZXIAKxh3YXNtX3Ric2ttb2RlbV9QY21EYXRhXzEALBh3YXNtX3Ric2ttb2RlbV9QY21EYXRhXzIALSR3YXNtX3Ric2ttb2RlbV9QY21EYXRhX0dldFNhbXBsZUJpdHMALiN3YXNtX3Ric2ttb2RlbV9QY21EYXRhX0dldEZyYW1lcmF0ZQAvIndhc21fdGJza21vZGVtX1BjbURhdGFfR2V0Qnl0ZXNsZW4AMCJ3YXNtX3Ric2ttb2RlbV9QY21EYXRhX0RhdGFBc0Zsb2F0ADEbd2FzbV90YnNrbW9kZW1fUGNtRGF0YV9EdW1wADMJbG9hZF9hcGlzADUZX19pbmRpcmVjdF9mdW5jdGlvbl90YWJsZQEAEF9fZXJybm9fbG9jYXRpb24AiwMGX190cmFwAOUDCHNldFRocmV3AOQDCXN0YWNrU2F2ZQDhAwxzdGFja1Jlc3RvcmUA4gMKc3RhY2tBbGxvYwDjAwpkeW5DYWxsX2ppAOYDCfIFAQBBAQu/A9UDtQHRAwY2ODk6nQMJOzw6CT0+Ogk/QUJERUYJzQNJSksJTE5PUFFSU1Q6CVVWSwlXWDoJWVpLCVtcXV5fCWBhOgliY2RlZglnaDoJtQEJaWoJa2w6CW1ub3BxcnN0dXZ3CXh5Ogl6e3x9fn+AAYEBhwGIAYkBgwGFAYoBiwFLCZQBlQGMAY0BjgHJAcsBzQHMAZYBlwGPAZABkQHOAcoBxQHHAcYByAGSAZMBtgOSAZMBkgGTAZIBkwGSAZMBkgGTAZIBkwGSAZMBCZkBmgEJnAGdAUsJngGfAaABpQGmAacBqAE6CakBqgGrAawBrQGuAa8BsAGxAbIBswEJtAG1AQm2AbcBdwm8Ab0BwAHBAcEBwQHCAbUBCdAB0gHaAdsB3AHUAdYB2AHXAdEB0wHdAd4B3wHZAdUBkgGTAZIBkwGSAZMBkgGTAZIBkwGSAZMBkgGTAZIBkwGSAZMBkgGTAZIBkwG1AQngAeIB5AHmAeUB4QHjAecB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QQALNgIQIAIgASgCBCIBNgIUIAEEQCABIAEoAgRBAWo2AgQLAkAGQAZAIAJBGGogACACQRBqEOgCGSACJAAgAkEQahARCQALAkAgAigCFCIBRQ0AIAEgASgCBCIDQQFrNgIEIAMNAAZAIAEgASgCACgCCBEAABgDIAEQnAMLBkBBIBCeAyIBQgA3AgQgAUIANwIQIAFBxCk2AgAgAUIANwIYIAIgATYCFCACIAFBDGo2AhAgAUEBNgIMIAIoAhghAAJAIAIoAhwiA0UEQCABIAA2AhAgASADNgIUDAELIAMgAygCBEEBajYCBCABIAA2AhAgAUEUaiIAKAIAIQEgACADNgIAIAFFDQAgASABKAIEIgNBAWs2AgQgAw0ABkAgASABKAIAKAIIEQAAGAQgARCcAwsgAiACKAIQNgIIIAIgAigCFCIBNgIMIAEEQCABIAEoAgRBAWo2AgQLBkAgAkEIahAQIQMZIAIkACACQQhqEBEgAkEQahARCQALGSACJAAgAkEYahARCQALBwAhASACJABB5MEBQbwINgIAQQAhA0HgwQFBADYCACABEN8DQejBASgCACEAIAEQrAMhBAJAIABBAkYEQAZAQSAQngMiAUIANwIMIAFCADcCBCABQcQpNgIAIAFCADcCFCABQQA2AhwgAiABNgIUIAIgAUEMaiIDNgIQIAJBCGogBBAoIAMiAEECNgIAIAJBCGoiBCgCACEFIAQoAgQiBARAIAQgBCgCBEEBajYCBAsgACAFNgIMIABBEGoiBSgCACEAIAUgBDYCAAJAIABFDQAgACAAKAIEIgRBAWs2AgQgBA0AIAAgACgCACgCCBEAACAAEJwDCyACQQhqEBEgAiABNgIMIAIgAzYCCCABIAEoAgRBAWo2AgQGQCACQQhqEBAhAwwDGSACJAAgAkEIahARIAJBEGoQEQkACwAZIAIkAAZAEK0DGSACJAAQtAMACwkACwALEK0DDAILIAJBCGoQESACQRBqEBEQrQMMAQsCQCACKAIMIgFFDQAgASABKAIEIgBBAWs2AgQgAA0AIAEgASgCACgCCBEAACABEJwDCwJAIAIoAhQiAUUNACABIAEoAgQiAEEBazYCBCAADQAgASABKAIAKAIIEQAAIAEQnAMLIAIoAhwiAUUNACABIAEoAgQiAEEBazYCBCAADQAgASABKAIAKAIIEQAAIAEQnAMLIAJBIGokACADC24AIAAgASgCBDYCACAAIAEoAggiADYCBCAARQRAIAFCADcCBA8LIAAgACgCBEEBajYCBCABKAIIIQAgAUIANwIEAkAgAEUNACAAIAAoAgQiAUEBazYCBCABDQAgACAAKAIAKAIIEQAAIAAQnAMLCwoAIAAoAgAoAgALtQIBAn8jAEEQayIBJAACQCAAKAIAIgIoAgBBAUYEQEEcEJ4DIgBBlCk2AgwgAEGkKDYCACAAQgA3AgQgACACKAIENgIQIAAgAigCCCICNgIUIABBDGohAyACBEAgAiACKAIEQQFqNgIECyAAQQA2AhggASAANgIMIAEgAzYCCCABIAA2AgQgASADNgIAIAAgACgCBEEBajYCBAZAIAEQECECDAIZIAEkACABEBEgAUEIahARCQALAAtB4xlBzQxBkQNBgQoQAAALAkAgASgCBCIARQ0AIAAgACgCBCIDQQFrNgIEIAMNACAAIAAoAgAoAggRAAAgABCcAwsCQCABKAIMIgBFDQAgACAAKAIEIgNBAWs2AgQgAw0AIAAgACgCACgCCBEAACAAEJwDCyABQRBqJAAgAgvfAwEDfyMAQRBrIgEkAAJAAkAgACgCACIAKAIAQQJGBEAgACgCDCIDIAMoAgAoAggRAQBFDQIgASAAKAIMIgAgACgCACgCDBEEAAZAQRwQngMhAAwCGSABJAAgARARCQALAAtB0RlBzQxBnANBlQwQAAALIABCADcCBCAAQZQpNgIMIABBpCg2AgAgACABKAIANgIQIAAgASgCBCICNgIUIABBDGohAwJAAkACQCACRQRAIABBADYCGCABIAA2AgwgASADNgIIDAELIAIgAigCBEEBajYCBCABKAIEIQIgAEEANgIYIAEgADYCDCABIAM2AgggAkUNACACIAIoAgQiAEEBazYCBCAARQRAIAIgAigCACgCCBEAACACEJwDCyABIAEoAgwiADYCBCABIAEoAgg2AgAgAEUNAgwBCyABIAA2AgQgASADNgIACyAAIAAoAgRBAWo2AgQLBkAgARAQIQIZIAEkACABEBEgAUEIahARCQALAkAgASgCBCIARQ0AIAAgACgCBCIDQQFrNgIEIAMNACAAIAAoAgAoAggRAAAgABCcAwsgASgCDCIARQ0AIAAgACgCBCIDQQFr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NgIAIAFCADcCBCABQQA2AhQgAiABNgIsIAIgAUEMaiIBNgIoIAIgATYCJCACQbQbNgIgBkAgACgCACgCBCIAIAJBIGogACgCACgCCBEDABpBHBCeAyEABkAgACACQShqEDQhARkgAiQAIAAQjQMJAAsgAiABNgIcIAIgAUEMaiIDNgIYBkBBHBCeAyIAQgA3AgQgAEGkKDYCACABKAIMQQxrKAIAIQQgASABKAIEQQFqNgIEIAAgATYCFCAAIAMgBGo2AhAgAEGUKTYCDCABIAEoAgRBAWo2AgQgAEEANgIYIAEgASgCBCIDQQFrNgIEIABBDGohBCADRQRABkAgASABKAIAKAIIEQAAGAMgARCcAwsgAiAANgIUIAIgBDYCECACQgA3AwgGQCACQRBqEBAhABkgAiQAIAJBEGoQESACQQhqEBEJAAsZIAIkACACQRhqEBEJAAsZIAIkACACQShqEBEJAAsCQCACKAIUIgFFDQAgASABKAIEIgNBAWs2AgQgAw0AIAEgASgCACgCCBEAACABEJwDCwJAIAIoAgwiAUUNACABIAEoAgQiA0EBazYCBCADDQAgASABKAIAKAIIEQAAIAEQnAMLAkAgAigCHCIBRQ0AIAEgASgCBCIDQQFrNgIEIAMNACABIAEoAgAoAggRAAAgARCcAwsCQCACKAIsIgFFDQAgASABKAIEIgNBAWs2AgQgAw0AIAEgASgCACgCCBEAACABEJwDCyACQTBqJAAgAAv3AQECfyMAQRBrIgMkACAAQgA3AgQgAEHgMDYCACADIAEoAgAiAjYCCCADIAEoAgQiATYCDCABBEAgASABKAIEQQFqNgIECyAAQfwxNgIYIABB4DE2AgwgAEEANgIQBkBBEBCeAyEBGSADJAAgA0EIahARCQALIAEgAjYCCCABIAI2AgQgAUHQMjYCACABIAMoAgwiAjYCDAJAIAJFBEAgACABNgIUDAELIAIgAigCBEEBajYCBCADKAIMIQIgACABNgIUIAJFDQAgAiACKAIEIgFBAWs2AgQgAQ0AIAIgAigCACgCCBEAACACEJwDCyADQRBqJAAgAAsEABABC/wBAQh/AkACQCABBEADQCACIAlqLQAAIQcCQCAAKAIEIgQoAgQiAyAEKAIIIgVJBEAgAyAHNgIAIAQgA0EEajYCBAwBCyADIAQoAgAi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KAIEIQEgAEEANgIEIAEEQCABIAEoAgAoAgQRAAALIAALbQECfyAAQeTGADYCECAAQcjGADYCAAJAIAAoAgwiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQAAIAEQnAMLIAAoAgQhASAAQQA2AgQgAQRAIAEgASgCACgCBBEAAAsgABCNAwuxAQIDfwF8IwAhAQZAIAAoAggiAiACKAIAKAIAEQIAIQQHACEAIAEkAEHkwQFBpDQ2AgBB4MEBQQA2AgAgABDfAwJAQejBASgCAEEBRgRAIAAQrAMaBkAQrgMMAhkgASQABkAQrQMZIAEkABC0AwALCQALAAsJAQsACyAAKAIEIgAoAgghAiAAKAIEIgEgACgCECIDQQN0aiAEOQMAIAAgA0EBaiACIAFrQQN1cDYCECAECxMAIAAgACgCAEEMaygCAGoQqwELeAECfyAAIAAoAgBBEGsoAgBqIgBB5MYANgIQIABByMYANgIAAkAgACgCDCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAAAgARCcAwsgACgCBCEBIABBADYCBCABBEAgASABKAIAKAIEEQAACyAAC3sBAn8gACAAKAIAQRBrKAIAaiIAQeTGADYCECAAQcjGADYCAAJAIAAoAgwiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQAAIAEQnAMLIAAoAgQhASAAQQA2AgQgAQRAIAEgASgCACgCBBEAAAsgABCNAwslAQF/IABB6McANgIAIAAoAgQiAQRAIAAgATYCCCABEI0DCyAACygBAX8gAEHoxwA2AgAgACgCBCIBBEAgACABNgIIIAEQjQMLIAAQjQMLDQAgAEGkyAA2AgAgAAsQACAAQaTIADYCACAAEI0DCxMAIABBEGogACgCECgCBBEBABoLkAEBA38jACECAkAgACgCBCIBQQBMBEAGQAZAQQQQpAMhABgDIAAQ6AEhAQwCGSACJAAgABCmAwkACwALIAAgAUEBazYCBCAAIAAoAggiAUEBaiAAKAIMIgIoAgQgAigCACIAa0EDdSIDcDYCCCABIANPBEAQogEACyAAIAFBA3RqKwMADwsgAUGgG0ECEKgDAAsEACAACw0AIABB+MkANgIAIAALEAAgAEH4yQA2AgAgABCNAwvkBQIFfwJ8IwBBEGshBCACKwMIIQkCfwJAIAErAwgiCiAAKwMIZEUEQEEAIAkgCmRFDQIaIARBCGoiByABQQhqIgUpAwA3AwAgBCABKQMANwMAIAUgAkEIaiIGKQMANwMAIAEgAikDADcDACAGIAcpAwA3AwAgAiAEKQMANwMAQQEgBSsDACAAKwMIZEUNAhogByAAQQhqIgYpAwA3AwAgBCAAKQMANwMAIAYgBSkDADcDACAAIAEpAwA3AwAgBSAHKQMANwMAIAEgBCkDADcDAAwBCyAJIApkBEAgBEEIaiIGIABBCGoiBSkDADcDACAEIAApAwA3AwAgBSACQQhqIgcpAwA3AwAgACACKQMANwMAIAcgBikDADcDACACIAQpAwA3AwBBAQwCCyAEQQhqIgcgAEEIaiIGKQMANwMAIAQgACkDADcDACAGIAFBCGoiBSkDADcDACAAIAEpAwA3AwAgBSAHKQMANwMAIAEgBCkDADcDAEEBIAIrAwggBSsDAGRFDQEaIAcgBSkDADcDACAEIAEpAwA3AwAgBSACQQhqIgYpAwA3AwAgASACKQMANwMAIAYgBykDADcDACACIAQpAwA3AwALQQILIQYgAysDCCACKwMIZAR/IARBCGoiByACQQhqIgUpAwA3AwAgBCACKQMANwMAIAUgA0EIaiIIKQMANwMAIAIgAykDADcDACAIIAcpAwA3AwAgAyAEKQMANwMAIAUrAwAgASsDCGRFBEAgBkEBag8LIAcgAUEIaiIDKQMANwMAIAQgASkDADcDACADIAUpAwA3AwAgASACKQMANwMAIAUgBykDADcDACACIAQpAwA3AwAgAysDACAAKwMIZEUEQCAGQQJqDwsgBEEIaiICIABBCGoiAykDADcDACAEIAApAwA3AwAgAyABQQhqIgUpAwA3AwAgACABKQMANwMAIAUgAikDADcDACABIAQpAwA3AwAgBkEDagUgBgsLzgwDCH8DfAF+IwBBEGsiAiQAQQEhCAJAAkACQAJAAkACQCABIABrQQR1DgYFBQABAgMECyABQQhrKwMAIAArAwhkRQ0EIAJBCGoiBCAAQQhqIgUpAwA3AwAgAiAAKQMANwMAIAUgAUEQayIDQQhqIgEpAwA3AwAgACADKQMANwMAIAEgBCkDADcDACADIAIpAwA3AwAMBAsgAEEQaiEDIAFBEGsiBEEIaiIFKwMAIQogACsDGCILIAArAwhkRQRAIAogC2RFDQQgAkEIaiIFIANBCGoiASkDADcDACACIAMpAwA3AwAgASAEQQhqIgYpAwA3AwAgAyAEKQMANwMAIAYgBSkDADcDACAEIAIpAwA3AwAgACsDGCAAKwMIZEUNBCAFIABBCGoiBCkDADcDACACIAApAwA3AwAgBCABKQMANwMAIAAgAykDADcDACABIAUpAwA3AwAgAyACKQMANwMADAQLIAogC2QEQCACQQhqIgMgAEEIaiIFKQMANwMAIAIgACkDADcDACAFIARBCGoiASkDADcDACAAIAQpAwA3AwAgASADKQMANwMAIAQgAikDADcDAAwECyACQQhqIgEgAEEIaiIHKQMANwMAIAIgACkDADcDACAHIANBCGoiBikDADcDACAAIAMpAwA3AwAgBiABKQMANwMAIAMgAikDADcDACAFKwMAIAArAxhkRQ0DIAEgBikDADcDACACIAMpAwA3AwAgBiAEQQhqIgApAwA3AwAgAyAEKQMANwMAIAAgASkDADcDACAEIAIpAwA3AwAMAwsgACAAQRBqIABBIGogAUEQaxC4ARoMAgsgACAAQRBqIgYgAEEgaiIFIABBMGoiBBC4ARogAUEIaysDACAAKwM4ZEUNASACQQhqIgMgBEEIaiIHKQMANwMAIAIgBCkDADcDACAHIAFBEGsiAUEIaiIJKQMANwMAIAQgASkDADcDACAJIAMpAwA3AwAgASACKQMANwMAIAArAzggACsDKGRFDQEgAyAFQQhqIgEpAwA3AwAgAiAFKQMANwMAIAEgBykDADcDACAFIAQpAwA3AwAgByADKQMANwMAIAQgAikDADcDACAAKwMoIAArAxhkRQ0BIAJBCGoiAyAGQQhqIgQpAwA3AwAgAiAGKQMANwMAIAQgBUEIaiIBKQMANwMAIAYgBSkDADcDACABIAMpAwA3AwAgBSACKQMANwMAIAArAxggACsDCGRFDQEgAyAAQQhqIgUpAwA3AwAgAiAAKQMANwMAIAUgBCkDADcDACAAIAYpAwA3AwAgBCADKQMANwMAIAYgAikDADcDAAwBCyAAQRBqIQMgAEEgaiEEIAArAyghCgJAIAArAxgiCyAAKwMIIgxkRQRAIAogC2RFDQEgAkEIaiIFIANBCGoi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KAIAKAIIEQAAIAEQnAMLIAALagECfyAAQcDqADYCHCAAQaTqADYCACAAKAIYIQEgAEEANgIYIAEEQCABIAEoAgAoAgQRAAALAkAgACgCCCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAAAgARCcAwsgAAt4AQJ/IAAgACgCAEEQaygCAGoiAEHA6gA2AhwgAEGk6gA2AgAgACgCGCEBIABBADYCGCABBEAgASABKAIAKAIEEQAACwJAIAAoAggiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQAAIAEQnAMLIAALbQECfyAAQcDqADYCHCAAQaTqADYCACAAKAIYIQEgAEEANgIYIAEEQCABIAEoAgAoAgQRAAALAkAgACgCCCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAAAgARCcAwsgABCNAwt7AQJ/IAAgACgCAEEQaygCAGoiAEHA6gA2AhwgAEGk6gA2AgAgACgCGCEBIABBADYCGCABBEAgASABKAIAKAIEEQAACwJAIAAoAggiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQAAIAEQnAMLIAAQjQMLbQIFfwJ8IAAoAgQiASABKAIAKAIAEQIAIQYgACgCGCIBKAIEIgIgASgCECIDQQN0aiIEKwMAIQcgASgCCCEFIAQgBjkDACABIANBAWogBSACa0EDdXA2AhAgACAGIAArAxCgIAehIgY5AxAgBgt7AgV/AnwgACAAKAIAQQxrKAIAaiIAKAIEIgEgASgCACgCABECACEGIAAoAhgiASgCBCICIAEoAhAiA0EDdGoiBCsDACEHIAEoAgghBSAEIAY5AwAgASADQQFqIAUgAmtBA3VwNgIQIAAgBiAAKwMQoCAHoSIGOQMQIAYLMgEBfiAAIAApAwgiAUINhiABhSIBQhGIIAGFIgFCBYYgAYVC/////weDIgE3AwggAacL7QIBB38jACEHIAAgATYCBCAAQezrADYCACAAQX8gAUEDdCABQYCAgIAGcRsiARCeAyABEIYDNgIIIAAgAigCADYCQCAAIAIoAgQiATYCRCABBEAgASABKAIEQQFqNgIECyAAQgA3AxggAEIANwIMIABCADcDSCAAQgA3AyAgAEIANwMoIABCADcDMCAAQgA3AzggAEIANwNQIABCADcDWCAAQQA2AmAgA0EASgRAIABBQGshCCAAQcgAaiEFQQAhAkEAIQEDQCACIAlqIgQgBiABa0EIdEEBa0EAIAEgBkcbRgRABkAgBRATGSAHJAAgBRBAIAgQESAAKAIIIQEgAEEANgIIIAEEQCABEI0DCwkACyAAKAJYIgkgACgCXCICaiEEIAAoAlAhBiAAKAJMIQELIAEgBEEIdkH8//8HcWooAgAgBEH/B3FBAnRqQQA2AgAgACACQQFqIgI2AlwgCkEBaiIKIANHDQALCyAAC2EBAn8gAEHs6wA2AgAgAEHIAGoQQAJAIAAoAkQiAUUNACABIAEoAgQiAkEBazYCBCACDQAgASABKAIAKAIIEQAAIAEQnAMLIAAoAgghASAAQQA2AgggAQRAIAEQjQMLIAALZAECfyAAQezrADYCACAAQcgAahBAAkAgACgCRCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAAAgARCcAwsgACgCCCEBIABBADYCCCABBEAgARCNAwsgABCNAwvlCAMHfwh+CXwjACEBIAAoAgwgACgCBG8hBQJABkAgACgCQCICIAIoAgAoAgARAgAiEEQAAAAAAADwv2YgEEQAAAAAAADwP2VxRQRAQYUaQZ4SQTpB/AkQAAwCCwcAIQAgASQAQeTBAUHI6wA2AgBB4MEBQQA2AgAgABDfAwJAQejBASgCAEEBRgRAIAAQrAMaBkAQrgMMAhkgASQABkAQrQMZIAEkABC0AwALCQALAAsJAQsACyAAKAJQIgEgACgCTCICa0EIdEEBa0EAIAEgAkcbIAAoAlwiBiAAKAJYIgFqIgNHIQcCfyAQRAAAAAAAANBBoiIQmUQAAAAAAADgQWMEQCAQqgwBC0GAgICAeAshBCAHRQRAIABByABqEBMgACgCWCIBIAAoAlwiBmohAyAAKAJMIQILIAIgA0EIdkH8//8HcWooAgAgA0H/B3FBAnRqIAQ2AgAgAiABQQh2Qfz//wdxaigCACABQf8HcUECdGooAgAhAyAAIAFBAWoiATYCWCAAIAY2AlwgAUGAEE8EQCACKAIAEI0DIAAgACgCTEEEajYCTCAAIAAoAlhBgAhrNgJYCyADrCEIIASsIQkCQCAAKAJgIgIgACgCBEgEQCAAIAJBAWo2AmAgACAAKAIQQQFqNgIQIAAgACkDGCAJfCIMNwMYIAAgACkDKCAIfCINNwMoIAAgACkDICAJIAl+Qh6IfCIONwMgIAAgACkDMCAIIAh+Qh6IfCIPNwMwIAAgACkDOCAIIAl+Qh6HfCIINwM4IAAoAgggBUEDdGoiAiAENgIAIAJBBGohAgwBCyAAKAIIIAVBA3RqIgFBBGoiAjQCACEKIAAgACkDGCAJIAE0AgAiC318Igw3AxggACAAKQMoIAggCn18Ig03AyggACAAKQMgIAkgCX5CHoggCyALfkIeiH18Ig43AyAgACAAKQMwIAggCH5CHoggCiAKfkIeiH18Ig83AzAgACAAKQM4IAggCX5CHocgCiALfkIeh318Igg3AzggASAENgIACyACIAM2AgAgACAAKAIMQQFqNgIMIAAoAhAiAEEASgRARAAAAAAAAPA/IRACQCAAQQFGDQBEAAAAAAAAAAAhECAMuUQAAAAAAAAQPqIiFSAAtyISoyITRAAAAAAAAADAoiAVoiATIBOiIBKiIA65RAAAAAAAABA+oqCgIhFEAAAAAAAAAABlDQAgESAAQQFrtyIWo58iGEQAAAAAAAAQPmMNACANuUQAAAAAAAAQPqIiFyASoyIRRAAAAAAAAADAoiAXoiARIBGiIBKiIA+5RAAAAAAAABA+oqCgIhREAAAAAAAAAABlDQAgFCAWo58iFEQAAAAAAAAQPmMNAEQAAAAAAADwPyATIBKiIBGiIAi5RAAAAAAAABA+oqAgESAVoqEgEyAXoqEgFqMgGCAUoqMiEEQAAAAAAADwv6UgEEQAAAAAAADwP2QbIRALIBAPC0GZGkGeEkHmAEH8CRAAAAsAC0YBAn8jACEGIABB+OwANgIABkAGQEEgEJ4DIQUYASAFIAQgA0EIbSABIAIQmAIhAxkgBiQAIAUQjQMJAAsgACADNgIEIAALkAgCB38BfCMAIQhBDBCeAyIDQQA2AgggA0IANwIAAkAGQAJAAkACQAJAIAFBCGsOCQABAQEBAQEBAgELA0AGQAJ/An8gACAAKAIAKAIAEQIARAAAAAAAwF9AokQAAAAAAABgQKAiCUQAAAAAAADwQWMgCUQAAAAAAAAAAGZxBEAgCasMAQtBAAshBCADKAIIIgUgAksEQCACIAQ6AAAgAyACQQFqIgI2AgQMAwsgAiADKAIAIgFrIgdBAWoiAkEASARAEBwMCAtBAEH/////ByAFIAFrIgVBAXQiBiACIAIgBkkbIAVB/////wNPGyIFRQ0AGiAFEJ4DCyECBwAhAiAIJABB5MEBQeDsADYCAEHgwQFBADYCACACEN8DQejBASgCAEEBRgRAIAIQrAMaEK0DDAULCQALIAIgB2oiBiAEOgAAIAMgAiABIAcQhQMiBCAFajYCCCADIAZBAWoiAjYCBCADIAQ2AgAgAUUNACABEI0DDAALAAsGQAZAQQgQpAMhABgFIABB+woQoQMhAhkgCCQABkAgABCmAxgFCQALIAJBrLABNgIAIAJB0LABQQMQqAMMAwsDQAZAAn8CfwJAIAAgACgCACgCABECACIJRAAAAAAAAPA/ZUUNACAJRAAAAAAAAPC/ZkUNAEQAAAAAwP/fQEQAAAAAAADgQCAJRAAAAAAAAAAAZhsgCaIiCZlEAAAAAAAA4EFjBEAgCaoMAgtBgICAgHgMAQtB8xlBjg5BHEGZGRAAAAshAQJAIAMoAggiBCACSwRAIAIgAToAACADIAJBAWoiAjYCBCADKAIIIQQMAQsgAiADKAIAIgVrIgdBAWoiAkEASARAEBwMBwsgB0H/////ByAEIAVrIgRBAXQiBiACIAIgBkkbIARB/////wNPGyIEBH8gBBCeAwVBAAsiAmoiBiABOgAAIAMgAiAFIAcQhQMiByAEaiIENgIIIAMgBkEBaiICNgIEIAMgBzYCACAFRQ0AIAUQjQMLIAFBgP4DcUEIdiEFIAIgBEkEQCACIAU6AAAgAyACQQFqIgI2AgQMAwsgAiADKAIAIgFrIgdBAWoiAkEASARAEBwMBgtBAEH/////ByAEIAFrIgRBAXQiBiACIAIgBkkbIARB/////wNPGyIERQ0AGiAEEJ4DCyECBwAhAiAIJABB5MEBQeDsADYCAEHgwQFBATYCACACEN8DQejBASgCAEEBRgRAIAIQrAMaEK0DDAMLCQALIAIgB2oiBiAFOgAAIAMgAiABIAcQhQMiBSAEajYCCCADIAZBAWoiAjYCBCADIAU2AgAgAUUNACABEI0DDAALAAsZIAgkACADKAIAIgIEQCADIAI2AgQgAhCNAwsgAxCNAwkACyADDwsAC4gGAgl/AXwjAEEQayIGJAAgACgCBBCZAiIBKAIEIAEoAhAQjQIhCSAAKAIEEJkCEJMCIQcgACgCBBCaAhCVAiEBQQwQngMiAEEANgIIIABCADcCACAGIAA2AggGQAJAAkACQAJAAkACQCABQQhrDgkAAgICAgICAgECCwNAIAMgB04NAyADIAlqLQAAuEQAAAAAAOBvQKNEAAAAAAAA4L+gIQoCQCAGKAIIIgAoAgQiASAAKAIIIgJJBEAgASAKOQMAIAAgAUEIajYCBAwBCyABIAAoAgAiBWsiCEEDdSIEQQFqIgFBgICAgAJPBEAQHAwHCyAEQQN0Qf////8BIAIgBWsiAkECdSIEIAEgASAESRsgAkH4////B08bIgEEfyABQYCAgIACTwRAEB0MCAsgAUEDdBCeAwVBAAsiAmoiBCAKOQMAIAAgAiAFIAgQhQMiAiABQQN0ajYCCCAAIARBCGo2AgQgACACNgIAIAVFDQAgBRCNAwsgA0EBaiEDDAALAAsgB0F+cSEHA0AgAyAHTg0CIAYoAgghACADIAlqLgAAIgG3IgpEAAAAAMD/30CjIApEAAAAAAAAAD+iIAFBAE4bIQogACgCBCIBIAAoAggiAkkEQCABIAo5AwAgACABQQhqNgIEIANBAmohAwwBCyABIAAoAgAiBWsiCEEDdSIEQQFqIgFBgICAgAJPBEAQHAwFCyAEQQN0Qf////8BIAIgBWsiAkECdSIEIAEgASAESRsgAkH4////B08bIgEEfyABQYCAgIACTwRAEB0MBgsgAUEDdBCeAwVBAAsiAmoiBCAKOQMAIAAgAiAFIAgQhQMiAiABQQN0ajYCCCAAIARBCGo2AgQgACACNgIAIAUEQCAFEI0DCyADQQJqIQMMAAsACwZABkBBCBCkAyEDGAUgA0HuChChAyEADAIZIAYkAAZAIAMQpgMYBQkACwALIAYoAgghACAGQRBqJAAgAA8LIABBrLABNgIAIABB0LABQQMQqAMLGSAGJAAgBkEIahAyCQALAAsvAQF/IABB+OwANgIAIAAoAgQhASAAQQA2AgQgAQRAIAEgASgCACgCBBEAAAsgAAsyAQF/IABB+OwANgIAIAAoAgQhASAAQQA2AgQgAQRAIAEgASgCACgCBBEAAAsgABCNAwvmAQEIfwJAIAIEQANAIAEgCGohCQJAIAAoAgQiBCgCBCIDIAQoAghHBEAgAyAJLQAAOgAAIAQgA0EBajYCBAwBCyADIAQoAgAiB2siA0EBaiIFQQBIDQNB/////wcgA0EBdCIGIAUgBSAGSRsgA0H/////A08bIgYEfyAGEJ4DBUEACyIFIANqIgogCS0AADoAACAEIAUgByADEIUDIgMgBmo2AgggBCAKQQFqNgIEIAQgAzYCACAHRQ0AIAcQjQMLIAhBAWoiCCACRw0ACwsgACgCBCIEKAIEIAQoAgAgAmprDwsQHAALUAEBfyMAQRBrIgQkACAAIAEgAhCIAiEBIANBAEoEQEEAIQIgBEEAOgAPA0AgACAEQQ9qQQEQiAIaIAJBAWoiAiADRw0ACwsgBEEQaiQAIAELKAEBfyMAQRBrIgIkACACIAE7AA4gACACQQ5qQQIQiAIaIAJBEGokAAsrAQF/IwBBEGsiAiQAIAIgATYADCAAIAJBDGpBBBCIAiEBIAJBEGokACABCxAAIAAoAgQoAgAgAWooAAALDQAgACgCBCgCACABags2AQF/IAEgACgCBCICKAIEIAIoAgAiAmsgAiABKAIAKAIAEQUAGiAAKAIEIgAoAgQgACgCAGsLPQECfyAAQbDtADYCACAAKAIEIQEgAEEANgIEIAEEQCABKAIAIgIEQCABIAI2AgQgAhCNAwsgARCNAwsgAAtAAQJ/IABBsO0ANgIAIAAoAgQhASAAQQA2AgQgAQRAIAEoAgAiAgRAIAEgAjYCBCACEI0DCyABEI0DCyAAEI0DC/oCAQN/IwAhBSAAQejtADYCAAZABkBBCBCeAyEDGAEgA0Gw7QA2AgBBDBCeAyIEQQA2AgggBEIANwIAIAMgBDYCBBkgBSQAIAMQjQMJAAsgACADNgIEAkAGQAJAIAAgAyABQQRBABCJAjYCCCAAIAAoAgQgAhCLAjYCDAJ/QQUhA0EBIQQCQAJAAkAgASICQQNxRQ0AA0AgAi0AAEUNAiADQQFrIgNBAEchBCACQQFqIgJBA3FFDQEgAw0ACwsgBEUNAQJAIAItAABFDQAgA0EESQ0AA0AgAigCACIEQX9zIARBgYKECGtxQYCBgoR4cQ0CIAJBBGohAiADQQRrIgNBA0sNAAsLIANFDQELA0AgAiACLQAARQ0CGiACQQFqIQIgA0EBayIDDQALC0EACyICIAFrQQUgAhtBBUkNAEG7GUHfD0EYQaIUEAAMAgsZIAUkACAAKAIEIQMgAEEANgIEIAMEQCADIAMoAgAoAgQRAAALCQALIAAPCwALDQAgABCfAhogABCNAwsPACAAKAIEIAAoAgwQjAILDAAgACgCBCABEI4CCxAAIAAoAgQoAgQoAgAuABYLywIBBn8CQCAAKAIEIgMgACgCACIEa0EDdSIFQQFqIgJBgICAgAJJBEBB/////wEgACgCCCAEayIGQQJ1IgcgAiACIAdJGyAGQfj///8HTxsiAkGAgICAAk8NASACQQN0IgYQngMiByAFQQN0aiICIAEoAgA2AgAgAiABKAIENgIEIAFCADcCACAGIAdqIQEgAkEIaiEFIAMgBEcEQANAIAJBCGsiAiADQQhrIgMoAgA2AgAgAiADKAIENgIEIANCADcCACADIARHDQALCyAAIAE2AgggACgCACEBIAAgAjYCACAAKAIEIQMgACAFNgIEIAEgA0cEQANAAkAgA0EIayIDKAIEIgJFDQAgAiACKAIEIgRBAWs2AgQgBA0AIAIgAigCACgCCBEAACACEJwDCyABIANHDQALCyABBEAgARCNAwsPCxAcAAsQHQALcQEEfyAAKAIAIgIEQCAAKAIEIgMgAiIBRwRAA0ACQCADQQhrIgMoAgQiAUUNACABIAEoAgQiBEEBazYCBCAEDQAgASABKAIAKAIIEQAAIAEQnAMLIAIgA0cNAAsgACgCACEBCyAAIAI2AgQgARCNAwsLvAcBBn8jAEEQayIGJAAgAEGPGSAEQSRqEJECIgdBuO4ANgIABkAgBygCBEGUGUEEQQAQiQIhBRkgBiQAIAdB6O0ANgIAIAcoAgQhBSAHQQA2AgQgBQRAIAUgBSgCACgCBBEAAAsJAAsgB0IANwIUIAcgBTYCECAHQQA2AhwgB0HM7gA2AgAgB0EUaiEABkBBHBCeAyIFQgA3AgQgBUH08AA2AgAGQCMAIQogBUEMaiIIQfcaQRAQkQIiCUGQ7gA2AgAGQCAJKAIEQQEQigIgCSgCBEEBEIoCIAkoAgQgARCLAhogCSgCBCABIAJsEIsCGiAJKAIEIAIQigIgCSgCBCACQQN0EIoCGSAKJAAgCUHo7QA2AgAgCSgCBCECIAlBADYCBCACBEAgAiACKAIAKAIEEQAACwkACxkgBiQAIAUQjQMJAAsgBiAFNgIMIAYgCDYCCCAGQgA3AwACQCAHKAIYIgEgBygCHEkEQCABIAU2AgQgASAINgIAIAZCADcDCCAHIAFBCGo2AhgMAQsGQCAAIAZBCGoQlgIZIAYkACAGQQhqEBEgBhARCQALIAYoAgwiBUUNACAFIAUoAgQiCEEBazYCBCAIDQAGQCAFIAUoAgAoAggRAAAYAiAFEJwDCwJAIAYoAgQiBUUNACAFIAUoAgQiCEEBazYCBCAIDQAGQCAFIAUoAgAoAggRAAAYAiAFEJwDC0EgEJ4DIgVCADcCBCAFQezxADYCAAZAIwAhAiAFQQxqIghB0BggBBCRAiIBQfztADYCAAZAIAEoAgQgAyAEIARBAXEQiQIhBBkgAiQAIAFB6O0ANgIAIAEoAgQhBCABQQA2AgQgBARAIAQgBCgCACgCBBEAAAsJAAsgASAENgIQIAFBpO4ANgIAGSAGJAAgBRCNAwkACyAGIAU2AgwgBiAINgIIIAZCADcDAAJAIAcoAhgiBCAHKAIcSQRAIAQgBTYCBCAEIAg2AgAgBkIANwMIIAcgBEEIajYCGAwBCwZAIAAgBkEIahCWAhkgBiQAIAZBCGoQESAGEBEJAAsgBigCDCIFRQ0AIAUgBSgCBCIIQQFrNgIEIAgNAAZAIAUgBSgCACgCCBEAABgCIAUQnAMLAkAgBigCBCIFRQ0AIAUgBSgCBCIIQQFrNgIEIAgNAAZAIAUgBSgCACgCCBEAABgCIAUQnAMLGSAGJAAgABCXAiAHQejtADYCACAHKAIEIQUgB0EANgIEIAUEQCAFIAUoAgAoAgQRAAALCQALIAZBEGokACAHC4sBAQN/AkAgACgCFCICIAAoAhhHBH8gAEEUaiEDA0AgAiABQQN0aigCACICKAIEIAIoAggQjQIoAABB5MLRiwZGBEAgACgCGCAAKAIUIgBrQQN1IAFNDQMgACABQQN0aigCAA8LIAFBAWoiASAAKAIYIAAoAhQiAmtBA3VJDQALQQAFIAELDwsQogEAC4sBAQN/AkAgACgCFCICIAAoAhhHBH8gAEEUaiEDA0AgAiABQQN0aigCACICKAIEIAIoAggQjQIoAABB5trRgwJGBEAgACgCGCAAKAIUIgBrQQN1IAFNDQMgACABQQN0aigCAA8LIAFBAWoiASAAKAIYIAAoAhQiAmtBA3VJDQALQQAFIAELDwsQogEAC14BA38gACgCBCABEI4CIQMgACgCFCICIAAoAhhHBEADQCACIARBA3RqKAIAIgIgASACKAIAKAIIEQMAIANqIQMgBEEBaiIEIAAoAhggACgCFCICa0EDdUkNAAsLIAMLpQEBBH8gAEHM7gA2AgAgACgCFCIDBEAgACgCGCICIAMiAUcEQANAAkAgAkEIayICKAIEIgFFDQAgASABKAIEIgRBAWs2AgQgBA0AIAEgASgCACgCCBEAACABEJwDCyACIANHDQALIAAoAhQhAQsgACADNgIYIAEQjQMLIABB6O0ANgIAIAAoAgQhAiAAQQA2AgQgAgRAIAIgAigCACgCBBEAAAsgAAuoAQEEfyAAQczuADYCACAAKAIUIgMEQCAAKAIYIgIgAyIBRwRAA0ACQCACQQhrIgIoAgQiAUUNACABIAEoAgQiBEEBazYCBCAEDQAgASABKAIAKAIIEQAAIAEQnAMLIAIgA0cNAAsgACgCFCEBCyAAIAM2AhggARCNAwsgAEHo7QA2AgAgACgCBCECIABBADYCBCACBEAgAiACKAIAKAIEEQAACyAAEI0DCzIBAX8gAEHo7QA2AgAgACgCBCEBIABBADYCBCABBEAgASABKAIAKAIEEQAACyAAEI0DCy8BAX8gAEHo7QA2AgAgACgCBCEBIABBADYCBCABBEAgASABKAIAKAIEEQAACyAACw0AIABB9PAANgIAIAALEAAgAEH08AA2AgAgABCNAwsNACAAQezxADYCACAACxAAIABB7PEANgIAIAAQjQMLvQMBB38gAEGQ9AA2AgAgACABKAIANgIEIAAgASgCBCIENgIIIAQEQCAEIAQoAgRBAWo2AgQLIAAgAigCADYCDCAAIAIoAgQiBDYCECAEBEAgBCAEKAIEQQFqNgIECyMAIQYgAEEEaiECIABBDGohBwZAQfgAEJ4DIgRCADcCBCAEQZz2ADYCAAZAIwAhBSAEQRBqIgNCADcCBCADQgA3AhQgA0IANwIMIANBjM8ANgJgIANBuM4ANgIAIAMgASgCADYCHCADIAEoAgQiATYCICABBEAgASABKAIEQQFqNgIECyADQRxqIQggA0IANwMoIANBAToAXCADQQA2AlggA0IANwNQIANCADcDSCADQUBrQgA3AwAgA0E4aiIJQgA3AwAgA0IANwMwBkBBBBCeAyEBGSAFJAAgA0HUAGoQESAD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KAIUIgFBB3ZB/P//D3FqKAIAIAFB/wNxQQN0aigCBCIBRQ0AIAEgASgCBCICQQFrNgIEIAINACABIAEoAgAoAggRAAAgARCcAwsgACAAKAIYQQFrNgIYIAAgACgCFEEBaiIBNgIUIAFBgAhJDQAgACgCCCgCABCNAyAAIAAoAghBBGo2AgggACAAKAIUQYAEazYCFAsGQCADKAIAIgEgASgCACgCABECACEGDAMHACEBIAQkAEHkwQFBsPMANgIAQeDBAUEANgIAIAEQ3wNB6MEBKAIAQQFGBEAgARCsAxogAygCBCECIANCADcCAAJAIAJFDQAgAiACKAIEIgFBAWs2AgQgAQ0AIAIgAigCACgCCBEAACACEJwDCxCtAwwDCwkACwALCwZABkBBBBCkAyEAGAIgABDoASEDGSAEJAAgABCmAwkACyADQaAbQQIQqAMACyAGCxMAIAAgACgCAEEMaygCAGoQywILEwAgACAAKAIAQRBrKAIAahDJAgsWACAAIAAoAgBBEGsoAgBqEMkCEI0DCw0AIABB0P4ANgIAIAALEAAgAEHQ/gA2AgAgABCNAwsHACAAENICC+UBAQJ/IABBtIABKAIAIgE2AgAgACABQRBrKAIAakHQgAEoAgA2AgAgACAAKAIAQRRrKAIAakHUgAEoAgA2AgAgACAAKAIAQQxrKAIAakHYgAEoAgA2AgACQCAAKAIgIgFFDQAgASABKAIEIgJBAWs2AgQgAg0AIAEgASgCACgCCBEAACABEJwDCyAAQbiAASgCACIBNgIAIAAgAUEQaygCAGpBxIABKAIANgIAIAAgACgCAEEUaygCAGpByIABKAIANgIAIAAgACgCAEEMaygCAGpBzIABKAIANgIAIABBBGoQTSAACwoAIAAQ0gIQjQMLiQECAn8BfCMAIQEGQCAAKAIcIgIgAigCACgCABECACEDBwAhACABJABB5MEBQejzADYCAEHgwQFBADYCACAAEN8DAkBB6MEBKAIAQQFGBEAgABCsAxoGQBCuAwwCGSABJAAGQBCtAxkgASQAELQDAAsJAAsACwkBCwALIAAgACkDKEIBfDcDKCADC5cBAgJ/AXwjACEBBkAgACAAKAIAQQxrKAIAaiIAKAIcIgIgAigCACgCABECACEDBwAhACABJABB5MEBQfjzADYCAEHgwQFBADYC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AAAgAUEBaiEBIAJBAWoiAkEDcUUNASACIANJDQALCwJAIANBfHEiBEHAAEkNACACIARBQGoiBUsNAANAIAIgASgCADYCACACIAEoAgQ2AgQgAiABKAIINgIIIAIgASgCDDYCDCACIAEoAhA2AhAgAiABKAIUNgIUIAIgASgCGDYCGCACIAEoAhw2AhwgAiABKAIgNgIgIAIgASgCJDYCJCACIAEoAig2AiggAiABKAIsNgIsIAIgASgCMDYCMCACIAEoAjQ2AjQgAiABKAI4NgI4IAIgASgCPDYCPCABQUBrIQEgAkFAayICIAVNDQALCyACIARPDQEDQCACIAEoAgA2AgAgAUEEaiEBIAJBBGoiAiAESQ0ACwwBCyADQQRJBEAgACECDAELIAAgA0EEayIESwRAIAAhAgwBCyAAIQIDQCACIAEtAAA6AAAgAiABLQABOgABIAIgAS0AAjoAAiACIAEtAAM6AAMgAUEEaiEBIAJBBGoiAiAETQ0ACwsgAiADSQRAA0AgAiABLQAAOgAAIAFBAWohASACQQFqIgIgA0cNAAsLIAAL6QIBAn8CQCAAIAFGDQAgASAAIAJqIgNrQQAgAkEBdGtNBEAgACABIAIQhAMPCyAAIAFzQQNxIQQCQAJAIAAgAUkEQCAEBEAgACEDDAMLIABBA3FFBEAgACEDDAILIAAhAwNAIAJFDQQgAyABLQAAOgAAIAFBAWohASACQQFrIQIgA0EBaiIDQQNxDQALDAELAkAgBA0AIANBA3EEQANAIAJFDQUgACACQQFrIgJqIgMgASACai0AADoAACADQQNxDQALCyACQQNNDQADQCAAIAJBBGsiAmogASACaigCADYCACACQQNLDQALCyACRQ0CA0AgACACQQFrIgJqIAEgAmotAAA6AAAgAg0ACwwCCyACQQNNDQADQCADIAEoAgA2AgAgAUEEaiEBIANBBGohAyACQQRrIgJBA0sNAAsLIAJFDQADQCADIAEtAAA6AAAgA0EBaiEDIAFBAWohASACQQFrIgINAAsLIAAL2AIBAn8CQCABRQ0AIABBADoAACAAIAFqIgJBAWtBADoAACABQQNJDQAgAEEAOgACIABBADoAASACQQNrQQA6AAAgAkECa0EAOgAAIAFBB0kNACAAQQA6AAMgAkEEa0EAOgAAIAFBCUkNACAAQQAg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dGhpcy0+X3BlYWtfb2Zmc2V0LnN1Y2Nlc3MAdGVybWluYXRpbmcgZHVlIHRvICVzIGV4Y2VwdGlvbiBvZiB0eXBlICVzAHRlcm1pbmF0aW5nIGR1ZSB0byAlcyBleGNlcHRpb24gb2YgdHlwZSAlczogJXMAdmVjdG9yAFN1Ykl0ZXJhdG9yAHdhc21fdGJza21vZGVtX1Ric2tEZW1vZHVsYXRvcl9EZW1vZHVsYXRlUmVzdWx0X1JlY292ZXIAL21udC9kL3Byb2plY3QucHVibGljL1RCU0ttb2RlbS1TZXJpZXMvVGJza01vZGVtQ3BwL2Vtc2NyaXB0ZW4vdGJza21vZGVtanMvLi9zcmMvLi9mdW5jdGlvbnMuY3BwAC9tbnQvZC9wcm9qZWN0LnB1YmxpYy9UQlNLbW9kZW0tU2VyaWVzL1Ric2tNb2RlbUNwcC9zcmMvdGJza21vZGVtL3Ric2ttb2RlbS9UYnNrRGVtb2R1bGF0b3IuY3BwAC9tbnQvZC9wcm9qZWN0LnB1YmxpYy9UQlNLbW9kZW0tU2VyaWVzL1Ric2tNb2RlbUNwcC9zcmMvdGJza21vZGVtL2tva29saW5rL3V0aWxzL0Zsb2F0Q29udmVydGVyLmNwcAAvbW50L2QvcHJvamVjdC5wdWJsaWMvVEJTS21vZGVtLVNlcmllcy9UYnNrTW9kZW1DcHAvc3JjL3Ric2ttb2RlbS9rb2tvbGluay9wcm90b2NvbC90YnNrL3RyYWl0YmxvY2tjb2Rlci5jcHAAL21udC9kL3Byb2plY3QucHVibGljL1RCU0ttb2RlbS1TZXJpZXMvVGJza01vZGVtQ3BwL3NyYy90YnNrbW9kZW0va29rb2xpbmsvdXRpbHMvd2F2ZWZpbGUvcmlmZmlvLmNwcAAvbW50L2QvcHJvamVjdC5wdWJsaWMvVEJTS21vZGVtLVNlcmllcy9UYnNrTW9kZW1DcHAvc3JjL3Ric2ttb2RlbS9rb2tvbGluay9wcm90b2NvbC90YnNrL3Ric2ttb2RlbS5jcHAAL21udC9kL3Byb2plY3QucHVibGljL1RCU0ttb2RlbS1TZXJpZXMvVGJza01vZGVtQ3BwL3NyYy90YnNrbW9kZW0va29rb2xpbmsvcHJvdG9jb2wvdGJzay9wcmVhbWJsZS9Db2ZmUHJlYW1ibGUuY3BwAC9tbnQvZC9wcm9qZWN0LnB1YmxpYy9UQlNLbW9kZW0tU2VyaWVzL1Ric2tNb2RlbUNwcC9zcmMvdGJza21vZGVtL2tva29saW5rL3V0aWxzL21hdGgvY29ycmNvZWYvU2VsZkNvcnJjb2VmSXRlcmF0b3IyLmNwcABJbnZhbGlkIGNvX3N0ZXAAUnVuAHN0ZDo6ZXhjZXB0aW9uAHRlcm1pbmF0aW5nIGR1ZSB0byAlcyBmb3JlaWduIGV4Y2VwdGlvbgB0ZXJtaW5hdGVfaGFuZGxlciB1bmV4cGVjdGVkbHkgdGhyZXcgYW4gZXhjZXB0aW9uAFdhaXRGb3JTeW1ib2wAQ2h1bmsAIXRoaXMtPl9hc21ldGh0b2RfbG9jawAhdGhpcy0+X2FzbWV0aG9kX2xvY2sAYmFkX2FycmF5X25ld19sZW5ndGgAL21udC9kL3Byb2plY3QucHVibGljL1RCU0ttb2RlbS1TZXJpZXMvVGJza01vZGVtQ3BwL3NyYy90YnNrbW9kZW0va29rb2xpbmsvcHJvdG9jb2wvdGJzay8uLi8uLi9zdHJlYW1zL3Jvc3RyZWFtcy5oAC9tbnQvZC9wcm9qZWN0LnB1YmxpYy9UQlNLbW9kZW0tU2VyaWVzL1Ric2tNb2RlbUNwcC9zcmMvdGJza21vZGVtL2tva29saW5rL3Byb3RvY29sL3Ric2svcHJlYW1ibGUvLi4vLi4vLi4vc3RyZWFtcy9yb3N0cmVhbXMuaAAvbW50L2QvcHJvamVjdC5wdWJsaWMvVEJTS21vZGVtLVNlcmllcy9UYnNrTW9kZW1DcHAvc3JjL3Ric2ttb2RlbS9rb2tvbGluay9wcm90b2NvbC90YnNrL3ByZWFtYmxlLy4uLy4uLy4uL3V0aWxzL21hdGgvLi4vUmluZ0J1ZmZlci5oAHRlcm1pbmF0aW5nAHIuc2l6ZSgpIDw9IHNpemUAdW5leHBlY3RlZAAhdGhpcy0+X2Nsb3NlZAB0ZXJtaW5hdGVfaGFuZGxlciB1bmV4cGVjdGVkbHkgcmV0dXJuZWQAc3RkOjpiYWRfYWxsb2MAZGF0YQBsYXZlZmlsdGVyICE9IE5VTEwAdGhpcy0+X3dzcmV4ID09IDBMAHRoaXMtPl9yZXN1bHQgPT0gMEwAUklGRgBXQVZFAERvdWJsZVRvSW50MTYAdGhpcy0+X2NvX3N0ZXAgPj0gNABzdHJubGVuKG5hbWUsIDUpIDw9IDQAKCpwdHIpLT50eXBlID09IDIAKCpwdHIpLT50eXBlPT0xADEgPj0gYiAmJiBiID49IC0xAC0xIDw9IGR2ICYmIGR2IDw9IDEAdGhpcy0+biA+IDAASW52YWxpZCBwdHIuAFBvaW50ZXIgaG9sZGVyIGZ1bGwuAHNpemUgPCBidWYuc2l6ZSgpAFB1cmUgdmlydHVhbCBmdW5jdGlvbiBjYWxsZWQhAGZtdCAATjEyVEJTS21vZGVtQ1BQMTVQeVN0b3BJdGVyYXRpb25FAAAAnFYAAHwNAACYVwAAAAAAAAwOAAAFAAAAWjI3d2FzbV90YnNrbW9kZW1fUGNtRGF0YV9EdW1wRThUb1ZlY3RvcgBOMTJUQlNLbW9kZW1DUFAxM0lCaW5hcnlXcml0ZXJFAAAAAHRWAADhDQAAnFYAALgNAAAEDgAAAAAAAIAOAAAGAAAABwAAAAgAAAAJAAAACgAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4xMlRCU0ttb2RlbUNQUDdTaW5Ub25lRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQCcVgAANA4AAPRVAAAAAAAA+A4AAAsAAAAMAAAADQAAAAkAAAAOAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQOVRyYWl0VG9uZUVOU185YWxsb2NhdG9ySVMyX0VFRUUAAACcVgAAqA4AAPRVAAAAAAAAaA8AAA8AAAAQAAAAEQAAAAkAAAASAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJMTNJbnB1dEl0ZXJhdG9ySWlFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAnFYAACAPAAD0VQAAKAAAAAAAAAAcEAAAEwAAABQAAAAVAAAA2P///9j////Y////HBAAABYAAAAXAAAAGAAAADEzSW5wdXRJdGVyYXRvcklpRQBOMTJUQlNLbW9kZW1DUFAyNU5vbmVDb3B5Q29uc3RydWN0b3JfY2xhc3NFAAB0VgAAuw8AAE4xMlRCU0ttb2RlbUNQUDExSVB5SXRlcmF0b3JJaUVFAAAAAHRWAADwDwAA+FYAAKgPAAAAAAAAAgAAAOgPAAACAAAAFBAAAAP0//9OMTJUQlNLbW9kZW1DUFAyNFJlY292ZXJhYmxlU3RvcEl0ZXJhdGlvbkUAAJxWAAA8EAAAoA0AAAAAAABoEAAAAgAAABkAAAAaAAAAAAAAAOwQAAAbAAAAHAAAAB0AAAAJAAAAHgAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSTEzSW5wdXRJdGVyYXRvcklkRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQAAAJxWAACkEAAA9FUAACwAAAAAAAAAaBEAAB8AAAAgAAAAIQAAANT////U////1P///2gRAAAiAAAAIwAAACQAAAAxM0lucHV0SXRlcmF0b3JJZEUATjEyVEJTS21vZGVtQ1BQMTFJUHlJdGVyYXRvcklkRUUAdFYAAD8RAAD4VgAALBEAAAAAAAACAAAA6A8AAAIAAABgEQAAA/T//wAAAAD4EQAAJQAAACYAAAAnAAAACQAAACgAAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMTJUQlNLbW9kZW1DUFAxMVhQc2tTaW5Ub25lRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQAAAACcVgAApBEAAPRVAAAAAAAAdBIAACkAAAAqAAAAKwAAAAkAAAAsAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQMTJDb2ZmUHJlYW1ibGVFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAnFYAACASAAD0VQAAAAAAAPASAAAtAAAALgAAAC8AAAAJAAAAMAAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4xMlRCU0ttb2RlbUNQUDEzVGJza01vZHVsYXRvckVOU185YWxsb2NhdG9ySVMyX0VFRUUAAJxWAACcEgAA9FUAAAAAAABgEwAAMQAAADIAAAAzAAAACQAAADQAAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUkxNE91dHB1dEl0ZXJhdG9ySWRFTlNfOWFsbG9jYXRvcklTMl9FRUVFAACcVgAAGBMAAPRVAAAAAAAAkBMAADUAAAA2AAAAMTRPdXRwdXRJdGVyYXRvcklkRQCcVgAAfBMAAOgPAAAAAAAAEBQAADcAAAA4AAAAOQAAAAkAAAA6AAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQMTVUYnNrRGVtb2R1bGF0b3JFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAAJxWAAC4EwAA9FUAAAAAAACAFAAAOwAAADwAAAA9AAAACQAAAD4AAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUkxNE91dHB1dEl0ZXJhdG9ySWlFTlNfOWFsbG9jYXRvcklTMl9FRUVFAACcVgAAOBQAAPRVAAAAAAAAsBQAAD8AAABAAAAAMTRPdXRwdXRJdGVyYXRvcklpRQCcVgAAnBQAAOgPAAAAAAAAIBUAAEEAAABCAAAAQwAAAAkAAABEAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJMTZEZW1vZHVsYXRlUmVzdWx0TlNfOWFsbG9jYXRvcklTMV9FRUVFAAAAnFYAANgUAAD0VQAAAAAAAJQVAABFAAAARgAAAEcAAAAJAAAASAAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU4xMlRCU0ttb2RlbUNQUDdQY21EYXRhRU5TXzlhbGxvY2F0b3JJUzJfRUVFRQCcVgAASBUAAPRVAAAAAAAAJBYAAEkAAABKAAAASwAAAEwAAABNAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX3BvaW50ZXJJUEtOU182dmVjdG9ySWROU185YWxsb2NhdG9ySWRFRUVFTlNfMTRkZWZhdWx0X2RlbGV0ZUlTNV9FRU5TMl9JUzVfRUVFRQAAAACcVgAAvBUAAPRVAABOU3QzX18yMTRkZWZhdWx0X2RlbGV0ZUlLTlNfNnZlY3RvcklkTlNfOWFsbG9jYXRvcklkRUVFRUVFAAAAAAAA3BYAAE4AAABPAAAAUAAAAAkAAABRAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQMTBQeUl0ZXJhdG9ySWRFRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAnFYAAIgWAAD0VQAADAAAAAAAAAA8FwAAUgAAAFMAAABUAAAA9P////T////0////PBcAAFUAAABWAAAAVwAAAE4xMlRCU0ttb2RlbUNQUDEwUHlJdGVyYXRvcklkRUUA+FYAABwXAAAAAAAAAgAAAOgPAAACAAAAYBEAAAP0//8AAAAA2BcAAFgAAABZAAAATjEyVEJTS21vZGVtQ1BQMTBQeUl0ZXJhdG9ySWRFMTJQdHJXcmFwcGVyQ1NFAE4xMlRCU0ttb2RlbUNQUDEwUHlJdGVyYXRvcklkRTEzVmVjdG9yV3JhcHBlckUAAAAAnFYAAJoXAADoDwAAnFYAAGwXAADMFwAAAAAAAEwYAABaAAAAWwAAAFwAAAAJAAAAXQAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU5TXzZ2ZWN0b3JJaU5TXzlhbGxvY2F0b3JJaUVFRUVOUzJfSVM0X0VFRUUAAACcVgAAABgAAPRVAAAAAAAAyBgAAF4AAABfAAAAYAAAAAkAAABhAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQMTBQeUl0ZXJhdG9ySWlFRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAnFYAAHQYAAD0VQAADAAAAAAAAAAoGQAAYgAAAGMAAABkAAAA9P////T////0////KBkAAGUAAABmAAAAZwAAAE4xMlRCU0ttb2RlbUNQUDEwUHlJdGVyYXRvcklpRUUA+FYAAAgZAAAAAAAAAgAAAOgPAAACAAAAFBAAAAP0//8AAAAAxBkAAGgAAABpAAAATjEyVEJTS21vZGVtQ1BQMTBQeUl0ZXJhdG9ySWlFMTJQdHJXcmFwcGVyQ1NFAE4xMlRCU0ttb2RlbUNQUDEwUHlJdGVyYXRvcklpRTEzVmVjdG9yV3JhcHBlckUAAAAAnFYAAIYZAADoDwAAnFYAAFgZAAC4GQAAAAAAAAMAAAAIAAAA/wARAQIAAwEAAn0AaBAAAKANAAD/ABEBAgADAQACfQBoEAAAoA0AAP8AHQEIAAEBAQIBAwUBAAIAA30AoA0AAAAAAABoEAAA/wANAQIAAQEAAAAAaBAAAP8ADQECAAEBAAAAAKANAEHONAvvCPA/AAAAAPwaAABrAAAAbAAAAG0AAABuAAAATjEyVEJTS21vZGVtQ1BQMjBSZWNvdmVyYWJsZUV4Y2VwdGlvbklOU18xNVdhaXRGb3JTeW1ib2xBU0VFRQAAAJxWAABoGgAAmFcAAE4xMlRCU0ttb2RlbUNQUDEyQ29mZlByZWFtYmxlRQBOMTJUQlNLbW9kZW1DUFA4UHJlYW1ibGVFAAAAAJxWAADTGgAA6A8AAJxWAAC0GgAA8BoAAAAAAAB4GwAAbwAAAHAAAABxAAAACQAAAHIAAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMTJUQlNLbW9kZW1DUFAxMlByZWFtYmxlQml0c0VOU185YWxsb2NhdG9ySVMyX0VFRUUAAACcVgAAJBsAAPRVAABgAAAAYAAAAGAAAABgAAAAYAAAAAAAAACgIAAAcwAAAHQAAAB1AAAAdgAAAHcAAAB4AAAAeQAAAHoAAAAAAAAAoP///wAAAACg////oP///6D///+g////AAAAAAAAAACg////oP///6D///+gIAAAewAAAHwAAAB9AAAAfgAAAH8AAACAAAAAgQAAAIIAAACgGwAAsBwAADgdAACcHgAAtB4AAHQdAAB0HQAAdB0AAAQdAAAEHQAABB0AAAQdAAAEHQAA9BsAAPQbAAD0GwAA9BsAAPQbAAD0HgAA9B4AAPQeAAD0HgAA9B4AAPwfAAD8HwAA/B8AAPwfAABEIAAARCAAAEQgAAB0IAAAdCAAAGAAAABgAAAAYAAAAGAAAABgAAAAAAAAADQrAACDAAAAhAAAAHUAAAB2AAAAdwAAAHgAAAB5AAAAegAAAAAAAACg////AAAAAKD///+g////oP///6D///8AAAAAAAAAAKD///+g////oP///zQrAAB7AAAAhQAAAIYAAAB+AAAAfwAAAIAAAACBAAAAggAAAGAAAABgAAAAYAAAAAAAAABwHgAAhwAAAIgAAAB1AAAAdgAAAHcAAAAAAAAAoP///6D///+g////AAAAAAAAAACg////AAAAAKD///9wHgAAiQAAAIoAAACLAAAAfgAAAH8AAACAAAAAiQAAAE4xMlRCU0ttb2RlbUNQUDEzQmFzaWNSb1N0cmVhbUlkRUUATjEyVEJTS21vZGVtQ1BQOUlSb1N0cmVhbUlkRUUATjEyVEJTS21vZGVtQ1BQMjBJUmVjb3ZlcmFibGVJdGVyYXRvcklkRUUAAPhWAADRHQAAAAAAAAEAAABgEQAAA+z///hWAACzHQAAAAAAAAEAAAD8HQAAA+j//04xMlRCU0ttb2RlbUNQUDEzQmFzaWNJdGVyYXRvcklkRUUAAPhWAAAsHgAAAAAAAAIAAADoDwAAAgAAAGARAAAD9P//+FYAAJAdAAACAAAAAgAAABQeAAAD8P//UB4AAAIAAABgAAAAAAAAAFAeAACMAAAAjQAAAKD///8AAAAAoP///1AeAACJAAAAjgAAAI8AQfA9C9wBtB8AAIkAAACQAAAAkQAAAIkAAACJAAAAiQAAAIkAAACJAAAATjEyVEJTS21vZGVtQ1BQOElFbmNvZGVySU5TXzE3VHJhaXRCbG9ja0VuY29kZXJFTlNfMTBJQml0U3RyZWFtRWRFRQBOMTJUQlNLbW9kZW1DUFA3SUZpbHRlcklOU18xN1RyYWl0QmxvY2tFbmNvZGVyRU5TXzEwSUJpdFN0cmVhbUVkRUUAAPhWAABYHwAAAAAAAAEAAAAUHgAAA9T///hWAAAUHwAAAAAAAAEAAACcHwAAA8z//wBB+D8LIZwfAACJAAAAkgAAAJMAAACJAAAAiQAAAIkAAACJAAAAiQBBwMAACx0UHgAAiQAAAJQAAACVAAAAiQAAAIkAAACJAAAAiQBB8MAAC+kQ/B0AAIkAAACWAAAAlwAAAE4xMlRCU0ttb2RlbUNQUDEyUHJlYW1ibGVCaXRzRQAAnFYAAIAgAAA0KwAAAAAAADAhAABJAAAAmAAAAJkAAACaAAAAmwAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9wb2ludGVySVBOMTJUQlNLbW9kZW1DUFA5Qml0U3RyZWFtRU5TXzE0ZGVmYXVsdF9kZWxldGVJUzJfRUVOU185YWxsb2NhdG9ySVMyX0VFRUUAnFYAAMggAAD0VQAATlN0M19fMjE0ZGVmYXVsdF9kZWxldGVJTjEyVEJTS21vZGVtQ1BQOUJpdFN0cmVhbUVFRQAAAAAAAAAA7CEAAJwAAACdAAAAngAAAAkAAACfAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQMjBXYWl0Rm9yU3ltYm9sQVNfaW1wbEVOU185YWxsb2NhdG9ySVMyX0VFRUUAAACcVgAAkCEAAPRVAAAAAAAArCIAAKAAAAChAAAAogAAAKMAAACkAAAATjEyVEJTS21vZGVtQ1BQMjBXYWl0Rm9yU3ltYm9sQVNfaW1wbEUATjEyVEJTS21vZGVtQ1BQMTVXYWl0Rm9yU3ltYm9sQVNFAE4xMlRCU0ttb2RlbUNQUDExQXN5bmNNZXRob2RJTlNfMTROdWxsYWJsZVJlc3VsdEl4RUVFRQCcVgAAXSIAAOgPAACcVgAAOyIAAJQiAACcVgAAFCIAAKAiAAAAAAAAMCMAAKUAAACmAAAApwAAAAkAAACoAAAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQMTZCdWZmZXJlZEl0ZXJhdG9ySWRFRU5TXzlhbGxvY2F0b3JJUzNfRUVFRQAAAACcVgAA1CIAAPRVAAAQAAAAAAAAANQjAACpAAAAqgAAAKsAAADw////8P////D////UIwAArAAAAK0AAACuAAAATjEyVEJTS21vZGVtQ1BQMjRCYXNpY1JlY292ZXJhYmxlSXRlcmF0b3JJZEVFAAAAnFYAAHAjAABQHgAATjEyVEJTS21vZGVtQ1BQMTZCdWZmZXJlZEl0ZXJhdG9ySWRFRQAAAJxWAACsIwAAoCMAAAAAAAAQJAAArwAAALAAAABOMTJUQlNLbW9kZW1DUFAxMFJpbmdCdWZmZXJJZEVFAJxWAADwIwAA6A8AAAAAAACUJAAAsQAAALIAAACzAAAACQAAALQAAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMTJUQlNLbW9kZW1DUFAyMVNlbGZDb3JyY29lZkl0ZXJhdG9yMkVOU185YWxsb2NhdG9ySVMyX0VFRUUAAJxWAAA4JAAA9FUAAAAAAADkJAAAtQAAALYAAAC3AAAATjEyVEJTS21vZGVtQ1BQMTBSaW5nQnVmZmVySWRFMTFTdWJJdGVyYXRvckUAAAAAnFYAALQkAABgEQAAAAAAAFglAAC4AAAAuQAAALoAAAAJAAAAuwAAAE5TdDNfXzIyMF9fc2hhcmVkX3B0cl9lbXBsYWNlSU5TXzZ2ZWN0b3JJZE5TXzlhbGxvY2F0b3JJZEVFRUVOUzJfSVM0X0VFRUUAAACcVgAADCUAAPRVAAAAAAAAqBoAAGoAAAC8AAAAGgAAAL0AAAAAAAAA9CUAAL4AAAC/AAAAAAAAADAmAAC+AAAAwAAAAAAAAABcJgAAvgAAAMEAAABOMTJUQlNLbW9kZW1DUFA5VHJhaXRUb25lRQBOU3QzX18yNnZlY3RvcklkTlNfOWFsbG9jYXRvcklkRUVFRQAAdFYAAMclAAD4VgAArCUAAAAAAAACAAAA7CUAAAIEAADoDwAAAgAAAE4xMlRCU0ttb2RlbUNQUDdTaW5Ub25lRQAAAACcVgAAFCYAAPQlAABOMTJUQlNLbW9kZW1DUFAxMVhQc2tTaW5Ub25lRQAAAJxWAAA8JgAA9CUAAAAAAACcJgAAwgAAAMMAAADEAAAATjEyVEJTS21vZGVtQ1BQMTFEZWZhdWx0SXRlckUAAACcVgAAfCYAABQQAAD/AA0BAgABAQAAAACgDQAA/wARAQIAAwEAAn0AaBAAAKANAAD/ABEBAgADAQACfQBoEAAAoA0AAP8AEQECAAMBAAJ9AGgQAACgDQAA/wARAQIAAwEAAn0AaBAAAKANAAD/ABEBAgADAQACfQBoEAAAoA0AAGAAAABgAAAAYAAAAGAAAABgAAAAAAAAADQrAACDAAAAhAAAAHUAAAB2AAAAdwAAAHgAAAB5AAAAegAAAAAAAACg////AAAAAKD///+g////oP///6D///8AAAAAAAAAAKD///+g////oP///zQrAAB7AAAAhQAAAIYAAAB+AAAAfwAAAIAAAACBAAAAggAAADgnAACAKQAA5CkAAPwpAAC8KQAAvCkAALwpAACMJwAAjCcAAIwnAACMJwAAjCcAADwqAAA8KgAAPCoAADwqAAA8KgAAjCoAAIwqAACMKgAAjCoAANQqAADUKgAA1CoAAAQrAAAEKwAAXAAAAFwAAABYAAAAWAAAAFgAAABYAAAAAAAAAOAvAADFAAAAxgAAAMcAAADIAAAAyQAAAMoAAADLAAAAzAAAAAAAAACo////qP///6j///+o////AAAAAAAAAACo////qP///6j////gLwAAzQAAAM4AAADPAAAA0AAAANEAAADSAAAA0wAAAAAAAACk/////P///6T///+k////pP///6T////8/////P///6T///+k////pP///+AvAAAAAAAAzgAAAM8AQezRAAuZAtQAAAA0KAAAaCsAAMwsAADkLAAApCsAAKQrAACkKwAAgCgAAIAoAACAKAAAgCgAANAoAADQKAAAGC0AABgtAAAYLQAASC0AAEgtAACALQAAgC0AAIAtAACALQAACC4AAAguAABQLgAAUC4AAFAuAABYLwAAoC8AAKAvAACgLwAAYAAAAGAAAABgAAAAAAAAAHAeAACHAAAAiAAAAHUAAAB2AAAAdwAAAAAAAACg////oP///6D///8AAAAAAAAAAKD///8AAAAAoP///3AeAACJAAAAigAAAIsAAAB+AAAAfwAAAIAAAACJAAAAYAAAAAAAAABQHgAAjAAAAI0AAACg////AAAAAKD///9QHgAAiQAAAI4AAACPAEG41AALIbQfAACJAAAAkAAAAJEAAACJAAAAiQAAAIkAAACJAAAAiQBBiNUACyGcHwAAiQAAAJIAAACTAAAAiQAAAIkAAACJAAAAiQAAAIkAQdDVAAsdFB4AAIkAAACUAAAAlQAAAIkAAACJAAAAiQAAAIkAQYDWAAvtA/wdAACJAAAAlgAAAJcAAABOMTJUQlNLbW9kZW1DUFAxN1RyYWl0QmxvY2tFbmNvZGVyRQD4VgAAECsAAAIAAAACAAAAtB8AAAPo//9wHgAAAAAAAFgAAABYAAAAWAAAAAAAAACgLAAA1QAAANYAAADHAAAAyAAAAMkAAAAAAAAAqP///6j///+o////AAAAAAAAAACo////AAAAAKj///+gLAAAiQAAANcAAADYAAAA0AAAANEAAADSAAAAiQAAAE4xMlRCU0ttb2RlbUNQUDEzQmFzaWNSb1N0cmVhbUlpRUUATjEyVEJTS21vZGVtQ1BQOUlSb1N0cmVhbUlpRUUATjEyVEJTS21vZGVtQ1BQMjBJUmVjb3ZlcmFibGVJdGVyYXRvcklpRUUAAPhWAAABLAAAAAAAAAEAAAAUEAAAA+z///hWAADjKwAAAAAAAAEAAAAsLAAAA+j//04xMlRCU0ttb2RlbUNQUDEzQmFzaWNJdGVyYXRvcklpRUUAAPhWAABcLAAAAAAAAAIAAADoDwAAAgAAABQQAAAD9P//+FYAAMArAAACAAAAAgAAAEQsAAAD8P//gCwAAAIAAABYAAAAAAAAAIAsAADZAAAA2gAAAKj///8AAAAAqP///4AsAACJAAAA2wAAANwAQZTaAAsdRCwAAIkAAADdAAAA3gAAAIkAAACJAAAAiQAAAIkAQcTaAAsNLCwAAIkAAADfAAAA4ABB/NoAC5UBvC0AAIkAAADhAAAA4gAAAIkAAACJAAAAiQAAAIkAAABOMTJUQlNLbW9kZW1DUFAxMElCaXRTdHJlYW1FAAAAAPhWAACcLQAAAAAAAAEAAABELAAAA9T//wAAAAAAAAAA/P////z////8/////P////z////8/////P///wAAAAD8////AAAAABAvAAAAAAAA4wAAAOQAQaTcAAsBiQBBwNwAC6ECBAAAAAAAAAAEAAAAEC8AAIkAAADlAAAA5gAAAIkAAACJAAAAiQAAAIkAAABOMTJUQlNLbW9kZW1DUFA4SURlY29kZXJJTlNfMTdUcmFpdEJsb2NrRGVjb2RlckVOU185SVJvU3RyZWFtSWRFRWlFRQBOMTJUQlNLbW9kZW1DUFA3SUZpbHRlcklOU18xN1RyYWl0QmxvY2tEZWNvZGVyRU5TXzlJUm9TdHJlYW1JZEVFaUVFAAAAAPhWAACxLgAAAAAAAAEAAABELAAAA9T///hWAABsLgAAAAAAAAEAAAD4LgAAA8z//wAAAAD8/////P////z////8/////P////z////8////AAAAAPz///8AAAAA+C4AAAAAAADnAAAA6ABB9N4ACwGJAEGQ3wALtQQEAAAAAAAAAAQAAAD4LgAAiQAAAOkAAADqAAAAiQAAAIkAAACJAAAAiQAAAE4xMlRCU0ttb2RlbUNQUDE3VHJhaXRCbG9ja0RlY29kZXJFAPhWAAC8LwAAAgAAAAMAAACgLAAAAgAAALwtAAAD6P//EC8AAAPk//8AAAAA6A8AAOsAAADsAAAA/wANAQIAAQEAAAAAaBAAAP8ADQECAAEBAAAAAGgQAAD/ABEBAgADAQACfQBoEAAAoA0AAP8AEQECAAMBAAJ9AGgQAACgDQAALAAAACwAAAAsAAAALAAAAAAAAACQMgAA7QAAAO4AAADHAAAAyAAAAMkAAADvAAAA8AAAAAAAAADU////1P///9T////U////AAAAAAAAAADU////1P///9T///+QMgAA8QAAAPIAAADzAAAA0AAAANEAAADSAAAA9AAAAHgwAABAMQAApDEAALwxAAB8MQAAfDEAAHwxAADAMAAAwDAAAMAwAADAMAAA9DEAAPQxAAD0MQAA9DEAADgyAAA4MgAAODIAAGgyAABoMgAALAAAACwAAAAsAAAAAAAAAKAsAADVAAAA1gAAAMcAAADIAAAAyQAAAAAA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QQAAXgEAAF8BAAB1AAAAdgAAAHcAAABgAQAAYQEAAND////Q////0P///9D///8AAAAAAAAAAND////Q////0P///5BBAABiAQAAYwEAAGQBAAB+AAAAfwAAAIAAAABlAQAA1D8AAIRAAADoQAAAAEEAAMBAAADAQAAAwEAAABhAAAAYQAAAGEAAADRBAAA0QQAANEEAAGRBAABkQQAAMAAAADAAAAAwAAAAAAAAAHAeAACHAAAAiAAAAHUAAAB2AAAAdwAAAAAAAADQ////0P///9D///8AAAAAAAAAAND///8AAAAA0P///3AeAACJAAAAigAAAIsAAAB+AAAAfwAAAIAAAACJAAAAMAAAAAAAAABQHgAAjAAAAI0AAADQ////AAAAAND///9QHgAAiQAAAI4AAACPAEGwggELHRQeAACJAAAAlAAAAJUAAACJAAAAiQAAAIkAAACJAEHgggEL2QL8HQAAiQAAAJYAAACXAAAATjEyVEJTS21vZGVtQ1BQOFJvU3RyZWFtSWRFRQAAAACcVgAAcEEAAHAeAAAAAAAAEEIAAGYBAABnAQAAaAEAAAkAAABpAQAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQMTdUcmFpdEJsb2NrRGVjb2RlckVOU185YWxsb2NhdG9ySVMyX0VFRUUAAJxWAAC4QQAA9FUAAAAAAACQQgAAagEAAGsBAABsAQAACQAAAG0BAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMTJUQlNLbW9kZW1DUFAxNkFzeW5jRGVtb2R1bGF0ZVhFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAnFYAADhCAAD0VQAAAAAAAKAEAAAqAQAAbgEAABoAAABvAQAAAAAAABwAQciFAQsJHAAAABwAAAAcAEHohQELIkBEAABwAQAAcQEAAHIBAADQAAAA0QAAANIAAABzAQAAdAEAQZiGAQsp5P///+T////k////5P///+T///9ARAAAdQEAAHYBAADHAAAAyAAAAMkAQdSGAQs15P///+T////k////AAAAAKAsAADVAAAA1gAAAMcAAADIAAAAyQAAAAAAAAAcAAAAHAAAABwAQZSHAQvqARwAAAAAAAAAHAAAAKAsAACJAAAA1wAAANgAAADQAAAA0QAAANIAAACJAAAATjEyVEJTS21vZGVtQ1BQN0lGaWx0ZXJJTlNfMTVCaXRzV2lkdGhGaWx0ZXJFTlNfOUlSb1N0cmVhbUlpRUVpRUUAAAD4VgAAwEMAAAAAAAABAAAARCwAAAPU//9OMTJUQlNLbW9kZW1DUFAxNUJpdHNXaWR0aEZpbHRlckUAAAD4VgAAHEQAAAIAAAACAAAAoCwAAAPM//8ERAAAA8j///8ADQECAAEBAAAAAKAEAAD/AA0BAgABAQAAAACgBABBmIkBC94FMEUAAHgBAAB5AQAAegEAAHsBAAB8AQAATjEyVEJTS21vZGVtQ1BQMjBBc3luY0RlbW9kdWxhdGVBc0ludEUATjEyVEJTS21vZGVtQ1BQMTFBc3luY01ldGhvZElOU3QzX18yMTBzaGFyZWRfcHRySU5TXzExSVB5SXRlcmF0b3JJaUVFRUVFRQAAAACcVgAA10QAAOgPAAD4VgAAsEQAAAAAAAABAAAAJEUAAAPk//8AAAAAvEUAAH0BAAB+AQAAfwEAAAkAAACAAQAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQMTVCaXRzV2lkdGhGaWx0ZXJFTlNfOWFsbG9jYXRvcklTMl9FRUVFAAAAAJxWAABkRQAA9FUAAAAAAABERgAAgQEAAIIBAACDAQAACQAAAIQBAABOU3QzX18yMjBfX3NoYXJlZF9wdHJfZW1wbGFjZUlOMTJUQlNLbW9kZW1DUFAyNEJpdHNXaWR0aENvbnZlcnRJdGVyYXRvckVOU185YWxsb2NhdG9ySVMyX0VFRUUAAACcVgAA5EUAAPRVAAAAAAAAyEYAAIUBAACGAQAAhwEAAAkAAACIAQAATlN0M19fMjIwX19zaGFyZWRfcHRyX2VtcGxhY2VJTjEyVEJTS21vZGVtQ1BQMjBBc3luY0RlbW9kdWxhdGVBc0ludEVOU185YWxsb2NhdG9ySVMyX0VFRUUAAACcVgAAbEYAAPRVAAAAAAAA8AQAAHcBAACJAQAAGgAAAIoBAAD/ABEBAgADAQACfQBoEAAAoA0AAP8AEQECAAMBAAJ9AGgQAACgDQAA/wANAQIAAQEAAAAAaBAAAP8ADQECAAEBAAAAAGgQAAAAAAAAZEcAACsBAACLAQAA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nFYAAPhYAADYWAAAU3Q5dHlwZV9pbmZvAAAAAHRWAAAYWQAA/P/////////8//////////7//////////P/////////4//////////z//////////P/////////8//////////z//////////P/////////+//////////z/////////+P////////8AQZmzAQsNYQEAoQEAAKIBAABlBQDWtQIEbmFtZQGAsgLnAwANX19hc3NlcnRfZmFpbAETVEJTS21vZGVtX2FwaV9sb2FkXwIVZW1zY3JpcHRlbl9tZW1jcHlfYmlnAxZlbXNjcmlwdGVuX3Jlc2l6ZV9oZWFwBAVhYm9ydAURX193YXNtX2NhbGxfY3RvcnMGF19fY3h4X2dsb2JhbF9hcnJheV9kdG9yBxZ3YXNtX3Ric2ttb2RlbV9WRVJTSU9OCBV3YXNtX3Ric2ttb2RlbV9tYWxsb2MJE3dhc21fdGJza21vZGVtX2ZyZWUKFXdhc21fdGJza21vZGVtX3B1dEludAsVd2FzbV90YnNrbW9kZW1fZ2V0SW50DCF3YXNtX3Ric2ttb2RlbV9Qb2ludGVySG9sZGVyX1NpemUNFndhc21fdGJza21vZGVtX0Rpc3Bvc2UOHFBvaW50ZXJIb2xkZXI6OlJlbW92ZSh2b2lkKikPH3dhc21fdGJza21vZGVtX0ludElucHV0SXRlcmF0b3IQNVBvaW50ZXJIb2xkZXI6OkFkZChzdGQ6Ol9fMjo6c2hhcmVkX3B0cjx2b2lkPiBjb25zdCYpETVzdGQ6Ol9fMjo6c2hhcmVkX3B0cjx2b2lkPjo6fnNoYXJlZF9wdHJbYWJpOnYxNTAwMF0oKRIjd2FzbV90YnNrbW9kZW1fSW50SW5wdXRJdGVyYXRvcl9wdXQTRXN0ZDo6X18yOjpkZXF1ZTxpbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Pj46Ol9fYWRkX2JhY2tfY2FwYWNpdHkoKRQid2FzbV90YnNrbW9kZW1fRG91YmxlSW5wdXRJdGVyYXRvchUmd2FzbV90YnNrbW9kZW1fRG91YmxlSW5wdXRJdGVyYXRvcl9wdXQWS3N0ZDo6X18yOjpkZXF1ZTxkb3VibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZG91YmxlPj46Ol9fYWRkX2JhY2tfY2FwYWNpdHkoKRcod2FzbV90YnNrbW9kZW1fSW50T3V0cHV0SXRlcmF0b3JfaGFzTmV4dBgpd2FzbV90YnNrbW9kZW1fSW50T3V0cHV0SXRlcmF0b3JfbGFzdE5leHQZK3dhc21fdGJza21vZGVtX0RvdWJsZU91dHB1dEl0ZXJhdG9yX2hhc05leHQaLHdhc21fdGJza21vZGVtX0RvdWJsZU91dHB1dEl0ZXJhdG9yX2xhc3ROZXh0Gxh3YXNtX3Ric2ttb2RlbV9UcmFpdFRvbmUcX3N0ZDo6X18yOjp2ZWN0b3I8ZG91YmxlLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGRvdWJsZT4+OjpfX3Rocm93X2xlbmd0aF9lcnJvclthYmk6djE1MDAwXSgpIGNvbnN0HS9zdGQ6Ol9fdGhyb3dfYmFkX2FycmF5X25ld19sZW5ndGhbYWJpOnYxNTAwMF0oKR4Wd2FzbV90YnNrbW9kZW1fU2luVG9uZR8ad2FzbV90YnNrbW9kZW1fWFBza1NpblRvbmUgG3dhc21fdGJza21vZGVtX0NvZmZQcmVhbWJsZSEed2FzbV90YnNrbW9kZW1fVGJza01vZHVsYXRvcl9BIh53YXNtX3Ric2ttb2RlbV9UYnNrTW9kdWxhdG9yX0IjJXdhc21fdGJza21vZGVtX1Ric2tNb2R1bGF0b3JfTW9kdWxhdGUkIHdhc21fdGJza21vZGVtX1Ric2tEZW1vZHVsYXRvcl9BJSB3YXNtX3Ric2ttb2RlbV9UYnNrRGVtb2R1bGF0b3JfQiYud2FzbV90YnNrbW9kZW1fVGJza0RlbW9kdWxhdG9yX0RlbW9kdWxhdGVBc0ludCcwd2FzbV90YnNrbW9kZW1fVGJza0RlbW9kdWxhdG9yX0RlbW9kdWxhdGVBc0ludF9CKFBUQlNLbW9kZW1DUFA6OlJlY292ZXJhYmxlRXhjZXB0aW9uPFRCU0ttb2RlbUNQUDo6QXN5bmNEZW1vZHVsYXRlQXNJbnQ+OjpEZXRhY2goKSk3d2FzbV90YnNrbW9kZW1fVGJza0RlbW9kdWxhdG9yX0RlbW9kdWxhdGVSZXN1bHRfR2V0VHlwZSo5d2FzbV90YnNrbW9kZW1fVGJza0RlbW9kdWxhdG9yX0RlbW9kdWxhdGVSZXN1bHRfR2V0T3V0cHV0Kzd3YXNtX3Ric2ttb2RlbV9UYnNrRGVtb2R1bGF0b3JfRGVtb2R1bGF0ZVJlc3VsdF9SZWNvdmVyLBh3YXNtX3Ric2ttb2RlbV9QY21EYXRhXzEtGHdhc21fdGJza21vZGVtX1BjbURhdGFfMi4kd2FzbV90YnNrbW9kZW1fUGNtRGF0YV9HZXRTYW1wbGVCaXRzLyN3YXNtX3Ric2ttb2RlbV9QY21EYXRhX0dldEZyYW1lcmF0ZTAid2FzbV90YnNrbW9kZW1fUGNtRGF0YV9HZXRCeXRlc2xlbjEid2FzbV90YnNrbW9kZW1fUGNtRGF0YV9EYXRhQXNGbG9hdDLDAXN0ZDo6X18yOjp1bmlxdWVfcHRyPHN0ZDo6X18yOjp2ZWN0b3I8ZG91YmxlLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGRvdWJsZT4+IGNvbnN0LCBzdGQ6Ol9fMjo6ZGVmYXVsdF9kZWxldGU8c3RkOjpfXzI6OnZlY3Rvcjxkb3VibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZG91YmxlPj4gY29uc3Q+Pjo6fnVuaXF1ZV9wdHJbYWJpOnYxNTAwMF0oKTMbd2FzbV90YnNrbW9kZW1fUGNtRGF0YV9EdW1wNNcCc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxpbnQ+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxpbnQ+Pj46Ol9fc2hhcmVkX3B0cl9lbXBsYWNlW2FiaTp2MTUwMDBdPHN0ZDo6X18yOjpzaGFyZWRfcHRyPHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+PiY+KHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpQeUl0ZXJhdG9yPGludD4+LCBzdGQ6Ol9fMjo6c2hhcmVkX3B0cjxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pj4mKTUJbG9hZF9hcGlzNk13YXNtX3Ric2ttb2RlbV9QY21EYXRhX0R1bXA6OlRvVmVjdG9yOjpXcml0ZUJ5dGVzKHVuc2lnbmVkIGxvbmcsIHZvaWQgY29uc3QqKTc3c3RkOjpfXzI6Ol9fdGhyb3dfbGVuZ3RoX2Vycm9yW2FiaTp2MTUwMDBdKGNoYXIgY29uc3QqKTh6c3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6U2luVG9uZSwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlNpblRvbmU+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCk5fHN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlNpblRvbmUsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpTaW5Ub25lPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpLjE6dXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlNpblRvbmUsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpTaW5Ub25lPj46Ol9fb25femVyb19zaGFyZWQoKTt+c3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6VHJhaXRUb25lLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6VHJhaXRUb25lPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpPIABc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6VHJhaXRUb25lLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6VHJhaXRUb25lPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpLjE9dHN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxJbnB1dEl0ZXJhdG9yPGludD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8SW5wdXRJdGVyYXRvcjxpbnQ+Pj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpPnZzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8SW5wdXRJdGVyYXRvcjxpbnQ+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPElucHV0SXRlcmF0b3I8aW50Pj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xPyRJbnB1dEl0ZXJhdG9yPGludD46On5JbnB1dEl0ZXJhdG9yKClARnN0ZDo6X18yOjpfX2RlcXVlX2Jhc2U8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+Ojp+X19kZXF1ZV9iYXNlKClBJklucHV0SXRlcmF0b3I8aW50Pjo6fklucHV0SXRlcmF0b3IoKS4xQhpJbnB1dEl0ZXJhdG9yPGludD46Ok5leHQoKUNCVEJTS21vZGVtQ1BQOjpSZWNvdmVyYWJsZVN0b3BJdGVyYXRpb246OlJlY292ZXJhYmxlU3RvcEl0ZXJhdGlvbigpRCt2aXJ0dWFsIHRodW5rIHRvIElucHV0SXRlcmF0b3I8aW50Pjo6TmV4dCgpRTV2aXJ0dWFsIHRodW5rIHRvIElucHV0SXRlcmF0b3I8aW50Pjo6fklucHV0SXRlcmF0b3IoKUY3dmlydHVhbCB0aHVuayB0byBJbnB1dEl0ZXJhdG9yPGludD46On5JbnB1dEl0ZXJhdG9yKCkuMUdMc3RkOjpfXzI6Ol9fc3BsaXRfYnVmZmVyPGludCosIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Kj4+OjpwdXNoX2JhY2soaW50KiYmKUhNc3RkOjpfXzI6Ol9fc3BsaXRfYnVmZmVyPGludCosIHN0ZDo6X18yOjphbGxvY2F0b3I8aW50Kj4+OjpwdXNoX2Zyb250KGludComJilJenN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxJbnB1dEl0ZXJhdG9yPGRvdWJsZT4sIHN0ZDo6X18yOjphbGxvY2F0b3I8SW5wdXRJdGVyYXRvcjxkb3VibGU+Pj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpSnxzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8SW5wdXRJdGVyYXRvcjxkb3VibGU+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPElucHV0SXRlcmF0b3I8ZG91YmxlPj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xS3VzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8SW5wdXRJdGVyYXRvcjxkb3VibGU+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPElucHV0SXRlcmF0b3I8ZG91YmxlPj4+OjpfX29uX3plcm9fc2hhcmVkKClMJ0lucHV0SXRlcmF0b3I8ZG91YmxlPjo6fklucHV0SXRlcmF0b3IoKU1Mc3RkOjpfXzI6Ol9fZGVxdWVfYmFzZTxkb3VibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZG91YmxlPj46On5fX2RlcXVlX2Jhc2UoKU4pSW5wdXRJdGVyYXRvcjxkb3VibGU+Ojp+SW5wdXRJdGVyYXRvcigpLjFPHUlucHV0SXRlcmF0b3I8ZG91YmxlPjo6TmV4dCgpUC52aXJ0dWFsIHRodW5rIHRvIElucHV0SXRlcmF0b3I8ZG91YmxlPjo6TmV4dCgpUTh2aXJ0dWFsIHRodW5rIHRvIElucHV0SXRlcmF0b3I8ZG91YmxlPjo6fklucHV0SXRlcmF0b3IoKVI6dmlydHVhbCB0aHVuayB0byBJbnB1dEl0ZXJhdG9yPGRvdWJsZT46On5JbnB1dEl0ZXJhdG9yKCkuMVOCAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlhQc2tTaW5Ub25lLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6WFBza1NpblRvbmU+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKClUhAFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpYUHNrU2luVG9uZSwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlhQc2tTaW5Ub25lPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpLjFVhAFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpDb2ZmUHJlYW1ibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpDb2ZmUHJlYW1ibGU+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKClWhgFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpDb2ZmUHJlYW1ibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpDb2ZmUHJlYW1ibGU+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMVeGAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlRic2tNb2R1bGF0b3IsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpUYnNrTW9kdWxhdG9yPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpWIgBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlRic2tNb2R1bGF0b3I+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMVl8c3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPE91dHB1dEl0ZXJhdG9yPGRvdWJsZT4sIHN0ZDo6X18yOjphbGxvY2F0b3I8T3V0cHV0SXRlcmF0b3I8ZG91YmxlPj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKVp+c3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPE91dHB1dEl0ZXJhdG9yPGRvdWJsZT4sIHN0ZDo6X18yOjphbGxvY2F0b3I8T3V0cHV0SXRlcmF0b3I8ZG91YmxlPj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xWylPdXRwdXRJdGVyYXRvcjxkb3VibGU+Ojp+T3V0cHV0SXRlcmF0b3IoKVwrT3V0cHV0SXRlcmF0b3I8ZG91YmxlPjo6fk91dHB1dEl0ZXJhdG9yKCkuMV2KAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlRic2tEZW1vZHVsYXRvciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlRic2tEZW1vZHVsYXRvcj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKV6MAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlRic2tEZW1vZHVsYXRvciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlRic2tEZW1vZHVsYXRvcj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xX4UBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6VGJza0RlbW9kdWxhdG9yLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6VGJza0RlbW9kdWxhdG9yPj46Ol9fb25femVyb19zaGFyZWQoKWB2c3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPE91dHB1dEl0ZXJhdG9yPGludD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8T3V0cHV0SXRlcmF0b3I8aW50Pj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKWF4c3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPE91dHB1dEl0ZXJhdG9yPGludD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8T3V0cHV0SXRlcmF0b3I8aW50Pj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xYiZPdXRwdXRJdGVyYXRvcjxpbnQ+Ojp+T3V0cHV0SXRlcmF0b3IoKWMoT3V0cHV0SXRlcmF0b3I8aW50Pjo6fk91dHB1dEl0ZXJhdG9yKCkuMWRwc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPERlbW9kdWxhdGVSZXN1bHQsIHN0ZDo6X18yOjphbGxvY2F0b3I8RGVtb2R1bGF0ZVJlc3VsdD4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKWVyc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPERlbW9kdWxhdGVSZXN1bHQsIHN0ZDo6X18yOjphbGxvY2F0b3I8RGVtb2R1bGF0ZVJlc3VsdD4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xZmtzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8RGVtb2R1bGF0ZVJlc3VsdCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxEZW1vZHVsYXRlUmVzdWx0Pj46Ol9fb25femVyb19zaGFyZWQoKWd6c3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6UGNtRGF0YSwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlBjbURhdGE+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKClofHN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlBjbURhdGEsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpQY21EYXRhPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpLjFpmQJzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX3BvaW50ZXI8c3RkOjpfXzI6OnZlY3Rvcjxkb3VibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZG91YmxlPj4gY29uc3QqLCBzdGQ6Ol9fMjo6ZGVmYXVsdF9kZWxldGU8c3RkOjpfXzI6OnZlY3Rvcjxkb3VibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZG91YmxlPj4gY29uc3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8ZG91YmxlLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGRvdWJsZT4+IGNvbnN0Pj46Ol9fb25femVyb19zaGFyZWQoKWqxAnN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfcG9pbnRlcjxzdGQ6Ol9fMjo6dmVjdG9yPGRvdWJsZSwgc3RkOjpfXzI6OmFsbG9jYXRvcjxkb3VibGU+PiBjb25zdCosIHN0ZDo6X18yOjpkZWZhdWx0X2RlbGV0ZTxzdGQ6Ol9fMjo6dmVjdG9yPGRvdWJsZSwgc3RkOjpfXzI6OmFsbG9jYXRvcjxkb3VibGU+PiBjb25zdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnZlY3Rvcjxkb3VibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZG91YmxlPj4gY29uc3Q+Pjo6X19nZXRfZGVsZXRlcihzdGQ6OnR5cGVfaW5mbyBjb25zdCYpIGNvbnN0a5ABc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxkb3VibGU+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxkb3VibGU+Pj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpbJIBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxkb3VibGU+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxkb3VibGU+Pj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpLjFtL1RCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxkb3VibGU+Ojp+UHlJdGVyYXRvcigpbjFUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8ZG91YmxlPjo6flB5SXRlcmF0b3IoKS4xbyhUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8ZG91YmxlPjo6TmV4dCgpcDl2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxkb3VibGU+OjpOZXh0KClxQHZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpQeUl0ZXJhdG9yPGRvdWJsZT46On5QeUl0ZXJhdG9yKClyQnZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpQeUl0ZXJhdG9yPGRvdWJsZT46On5QeUl0ZXJhdG9yKCkuMXM/VEJTS21vZGVtQ1BQOjpQeUl0ZXJhdG9yPGRvdWJsZT46OlB0cldyYXBwZXJDUzo6flB0cldyYXBwZXJDUygpdEFUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8ZG91YmxlPjo6UHRyV3JhcHBlckNTOjp+UHRyV3JhcHBlckNTKCkuMXWuAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKXawAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPGludCwgc3RkOjpfXzI6OmFsbG9jYXRvcjxpbnQ+Pj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xd6kBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8aW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGludD4+Pj46Ol9fb25femVyb19zaGFyZWQoKXiKAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8aW50Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8aW50Pj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKXmMAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8aW50Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8aW50Pj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xeixUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8aW50Pjo6flB5SXRlcmF0b3IoKXsuVEJTS21vZGVtQ1BQOjpQeUl0ZXJhdG9yPGludD46On5QeUl0ZXJhdG9yKCkuMXwlVEJTS21vZGVtQ1BQOjpQeUl0ZXJhdG9yPGludD46Ok5leHQoKX02dmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8aW50Pjo6TmV4dCgpfj12aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxpbnQ+Ojp+UHlJdGVyYXRvcigpfz92aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6UHlJdGVyYXRvcjxpbnQ+Ojp+UHlJdGVyYXRvcigpLjGAATxUQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8aW50Pjo6UHRyV3JhcHBlckNTOjp+UHRyV3JhcHBlckNTKCmBAT5UQlNLbW9kZW1DUFA6OlB5SXRlcmF0b3I8aW50Pjo6UHRyV3JhcHBlckNTOjp+UHRyV3JhcHBlckNTKCkuMYIBcVRCU0ttb2RlbUNQUDo6Q29mZlByZWFtYmxlOjpDb2ZmUHJlYW1ibGUoc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpUcmFpdFRvbmUgY29uc3Q+IGNvbnN0JiwgZG91YmxlLCBpbnQpgwEvVEJTS21vZGVtQ1BQOjpDb2ZmUHJlYW1ibGU6OkdldFByZWFtYmxlKCkgY29uc3SEAWlUQlNLbW9kZW1DUFA6OlByZWFtYmxlQml0czo6UHJlYW1ibGVCaXRzKHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6VHJhaXRUb25lIGNvbnN0PiBjb25zdCYsIGludCmFAWdUQlNLbW9kZW1DUFA6OkNvZmZQcmVhbWJsZTo6V2FpdEZvclN5bWJvbChzdGQ6Ol9fMjo6c2hhcmVkX3B0cjxUQlNLbW9kZW1DUFA6OklSb1N0cmVhbTxkb3VibGU+PiBjb25zdCYphgGTAVRCU0ttb2RlbUNQUDo6V2FpdEZvclN5bWJvbEFTX2ltcGw6OldhaXRGb3JTeW1ib2xBU19pbXBsKFRCU0ttb2RlbUNQUDo6Q29mZlByZWFtYmxlJiwgc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJUm9TdHJlYW08ZG91YmxlPj4gY29uc3QmKYcBWlRCU0ttb2RlbUNQUDo6UmVjb3ZlcmFibGVFeGNlcHRpb248VEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVM+Ojp+UmVjb3ZlcmFibGVFeGNlcHRpb24oKYgBK1RCU0ttb2RlbUNQUDo6Q29mZlByZWFtYmxlOjp+Q29mZlByZWFtYmxlKCmJAS1UQlNLbW9kZW1DUFA6OkNvZmZQcmVhbWJsZTo6fkNvZmZQcmVhbWJsZSgpLjGKAYQBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6UHJlYW1ibGVCaXRzLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6UHJlYW1ibGVCaXRzPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpiwGGAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlByZWFtYmxlQml0cywgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlByZWFtYmxlQml0cz4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xjAEqVEJTS21vZGVtQ1BQOjpCYXNpY1JvU3RyZWFtPGRvdWJsZT46OkdldCgpjQE0VEJTS21vZGVtQ1BQOjpCYXNpY1JvU3RyZWFtPGRvdWJsZT46OkdldHMoaW50LCBib29sKY4BLlRCU0ttb2RlbUNQUDo6QmFzaWNSb1N0cmVhbTxkb3VibGU+OjpTZWVrKGludCmPAT92aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6QmFzaWNSb1N0cmVhbTxkb3VibGU+OjpTZWVrKGludCmQATt2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6QmFzaWNSb1N0cmVhbTxkb3VibGU+OjpHZXQoKZEBRXZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpCYXNpY1JvU3RyZWFtPGRvdWJsZT46OkdldHMoaW50LCBib29sKZIBNVRCU0ttb2RlbUNQUDo6QmFzaWNSb1N0cmVhbTxkb3VibGU+Ojp+QmFzaWNSb1N0cmVhbSgpkwE3VEJTS21vZGVtQ1BQOjpCYXNpY1JvU3RyZWFtPGRvdWJsZT46On5CYXNpY1JvU3RyZWFtKCkuMZQBK1RCU0ttb2RlbUNQUDo6UHJlYW1ibGVCaXRzOjp+UHJlYW1ibGVCaXRzKCmVAS1UQlNLbW9kZW1DUFA6OlByZWFtYmxlQml0czo6flByZWFtYmxlQml0cygpLjGWATx2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6UHJlYW1ibGVCaXRzOjp+UHJlYW1ibGVCaXRzKCmXAT52aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6UHJlYW1ibGVCaXRzOjp+UHJlYW1ibGVCaXRzKCkuMZgBN3N0ZDo6X18yOjpfX3Rocm93X291dF9vZl9yYW5nZVthYmk6djE1MDAwXShjaGFyIGNvbnN0KimZAa0Bc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9wb2ludGVyPFRCU0ttb2RlbUNQUDo6Qml0U3RyZWFtKiwgc3RkOjpfXzI6OmRlZmF1bHRfZGVsZXRlPFRCU0ttb2RlbUNQUDo6Qml0U3RyZWFtPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OkJpdFN0cmVhbT4+OjpfX29uX3plcm9fc2hhcmVkKCmaAcUBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9wb2ludGVyPFRCU0ttb2RlbUNQUDo6Qml0U3RyZWFtKiwgc3RkOjpfXzI6OmRlZmF1bHRfZGVsZXRlPFRCU0ttb2RlbUNQUDo6Qml0U3RyZWFtPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OkJpdFN0cmVhbT4+OjpfX2dldF9kZWxldGVyKHN0ZDo6dHlwZV9pbmZvIGNvbnN0JikgY29uc3SbAUNUQlNLbW9kZW1DUFA6OlJpbmdCdWZmZXI8ZG91YmxlPjo6UmluZ0J1ZmZlcih1bnNpZ25lZCBsb25nLCBkb3VibGUpnAGUAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6V2FpdEZvclN5bWJvbEFTX2ltcGw+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCmdAZYBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6V2FpdEZvclN5bWJvbEFTX2ltcGwsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVNfaW1wbD4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xngE7VEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVNfaW1wbDo6fldhaXRGb3JTeW1ib2xBU19pbXBsKCmfAT1UQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjp+V2FpdEZvclN5bWJvbEFTX2ltcGwoKS4xoAEpVEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVNfaW1wbDo6UnVuKCmhAZkBc3RkOjpfXzI6OnNoYXJlZF9wdHI8c3RkOjpfXzI6OnZlY3Rvcjxkb3VibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZG91YmxlPj4+IFRCU0ttb2RlbUNQUDo6RnVuY3Rpb25zOjpUb1ZlY3Rvcjxkb3VibGU+KFRCU0ttb2RlbUNQUDo6SVB5SXRlcmF0b3I8ZG91YmxlPiopogFfc3RkOjpfXzI6OnZlY3Rvcjxkb3VibGUsIHN0ZDo6X18yOjphbGxvY2F0b3I8ZG91YmxlPj46Ol9fdGhyb3dfb3V0X29mX3JhbmdlW2FiaTp2MTUwMDBdKCkgY29uc3SjAc0Ddm9pZCBzdGQ6Ol9fMjo6X19pbnRyb3NvcnQ8c3RkOjpfXzI6Ol9DbGFzc2ljQWxnUG9saWN5LCBzdGQ6Ol9fMjo6Z3JlYXRlcjxUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGU+JiwgVEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVNfaW1wbDo6UnVuKCk6OlRQY1R1cGxlKj4oVEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVNfaW1wbDo6UnVuKCk6OlRQY1R1cGxlKiwgVEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVNfaW1wbDo6UnVuKCk6OlRQY1R1cGxlKiwgc3RkOjpfXzI6OmdyZWF0ZXI8VEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVNfaW1wbDo6UnVuKCk6OlRQY1R1cGxlPiYsIHN0ZDo6X18yOjppdGVyYXRvcl90cmFpdHM8VEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVNfaW1wbDo6UnVuKCk6OlRQY1R1cGxlKj46OmRpZmZlcmVuY2VfdHlwZSmkAb8Bdm9pZCBzdGQ6Ol9fMjo6X19pbnRyb3NvcnQ8c3RkOjpfXzI6Ol9DbGFzc2ljQWxnUG9saWN5LCBzdGQ6Ol9fMjo6Z3JlYXRlcjxkb3VibGU+JiwgZG91YmxlKj4oZG91YmxlKiwgZG91YmxlKiwgc3RkOjpfXzI6OmdyZWF0ZXI8ZG91YmxlPiYsIHN0ZDo6X18yOjppdGVyYXRvcl90cmFpdHM8ZG91YmxlKj46OmRpZmZlcmVuY2VfdHlwZSmlAS9UQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpHZXRSZXN1bHQoKaYBK1RCU0ttb2RlbUNQUDo6V2FpdEZvclN5bWJvbEFTX2ltcGw6OkNsb3NlKCmnAZwBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6QnVmZmVyZWRJdGVyYXRvcjxkb3VibGU+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6QnVmZmVyZWRJdGVyYXRvcjxkb3VibGU+Pj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpqAGeAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OkJ1ZmZlcmVkSXRlcmF0b3I8ZG91YmxlPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OkJ1ZmZlcmVkSXRlcmF0b3I8ZG91YmxlPj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xqQE7VEJTS21vZGVtQ1BQOjpCdWZmZXJlZEl0ZXJhdG9yPGRvdWJsZT46On5CdWZmZXJlZEl0ZXJhdG9yKCmqAT1UQlNLbW9kZW1DUFA6OkJ1ZmZlcmVkSXRlcmF0b3I8ZG91YmxlPjo6fkJ1ZmZlcmVkSXRlcmF0b3IoKS4xqwEuVEJTS21vZGVtQ1BQOjpCdWZmZXJlZEl0ZXJhdG9yPGRvdWJsZT46Ok5leHQoKawBP3ZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpCdWZmZXJlZEl0ZXJhdG9yPGRvdWJsZT46Ok5leHQoKa0BTHZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpCdWZmZXJlZEl0ZXJhdG9yPGRvdWJsZT46On5CdWZmZXJlZEl0ZXJhdG9yKCmuAU52aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6QnVmZmVyZWRJdGVyYXRvcjxkb3VibGU+Ojp+QnVmZmVyZWRJdGVyYXRvcigpLjGvAS9UQlNLbW9kZW1DUFA6OlJpbmdCdWZmZXI8ZG91YmxlPjo6flJpbmdCdWZmZXIoKbABMVRCU0ttb2RlbUNQUDo6UmluZ0J1ZmZlcjxkb3VibGU+Ojp+UmluZ0J1ZmZlcigpLjGxAZYBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6U2VsZkNvcnJjb2VmSXRlcmF0b3IyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6U2VsZkNvcnJjb2VmSXRlcmF0b3IyPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpsgGYAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlNlbGZDb3JyY29lZkl0ZXJhdG9yMiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlNlbGZDb3JyY29lZkl0ZXJhdG9yMj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xswGRAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlNlbGZDb3JyY29lZkl0ZXJhdG9yMiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlNlbGZDb3JyY29lZkl0ZXJhdG9yMj4+OjpfX29uX3plcm9fc2hhcmVkKCm0ATVUQlNLbW9kZW1DUFA6OlJpbmdCdWZmZXI8ZG91YmxlPjo6U3ViSXRlcmF0b3I6Ok5leHQoKbUBMVRCU0ttb2RlbUNQUDo6SVB5SXRlcmF0b3I8ZG91YmxlPjo6fklQeUl0ZXJhdG9yKCm2AboBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPHN0ZDo6X18yOjp2ZWN0b3I8ZG91YmxlLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGRvdWJsZT4+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjp2ZWN0b3I8ZG91YmxlLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPGRvdWJsZT4+Pj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgptwG8AXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxzdGQ6Ol9fMjo6dmVjdG9yPGRvdWJsZSwgc3RkOjpfXzI6OmFsbG9jYXRvcjxkb3VibGU+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6dmVjdG9yPGRvdWJsZSwgc3RkOjpfXzI6OmFsbG9jYXRvcjxkb3VibGU+Pj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xuAHbA3Vuc2lnbmVkIGludCBzdGQ6Ol9fMjo6X19zb3J0NDxzdGQ6Ol9fMjo6X0NsYXNzaWNBbGdQb2xpY3ksIHN0ZDo6X18yOjpncmVhdGVyPFRCU0ttb2RlbUNQUDo6V2FpdEZvclN5bWJvbEFTX2ltcGw6OlJ1bigpOjpUUGNUdXBsZT4mLCBUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGUqPihUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGUqLCBUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGUqLCBUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGUqLCBUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGUqLCBzdGQ6Ol9fMjo6Z3JlYXRlcjxUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGU+Jim5Ad4CYm9vbCBzdGQ6Ol9fMjo6X19pbnNlcnRpb25fc29ydF9pbmNvbXBsZXRlPHN0ZDo6X18yOjpncmVhdGVyPFRCU0ttb2RlbUNQUDo6V2FpdEZvclN5bWJvbEFTX2ltcGw6OlJ1bigpOjpUUGNUdXBsZT4mLCBUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGUqPihUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGUqLCBUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGUqLCBzdGQ6Ol9fMjo6Z3JlYXRlcjxUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBU19pbXBsOjpSdW4oKTo6VFBjVHVwbGU+Jim6AYwBdW5zaWduZWQgaW50IHN0ZDo6X18yOjpfX3NvcnQ1PHN0ZDo6X18yOjpncmVhdGVyPGRvdWJsZT4mLCBkb3VibGUqPihkb3VibGUqLCBkb3VibGUqLCBkb3VibGUqLCBkb3VibGUqLCBkb3VibGUqLCBzdGQ6Ol9fMjo6Z3JlYXRlcjxkb3VibGU+Jim7AX1ib29sIHN0ZDo6X18yOjpfX2luc2VydGlvbl9zb3J0X2luY29tcGxldGU8c3RkOjpfXzI6OmdyZWF0ZXI8ZG91YmxlPiYsIGRvdWJsZSo+KGRvdWJsZSosIGRvdWJsZSosIHN0ZDo6X18yOjpncmVhdGVyPGRvdWJsZT4mKbwBXFRCU0ttb2RlbUNQUDo6UmVjb3ZlcmFibGVFeGNlcHRpb248VEJTS21vZGVtQ1BQOjpXYWl0Rm9yU3ltYm9sQVM+Ojp+UmVjb3ZlcmFibGVFeGNlcHRpb24oKS4xvQFKVEJTS21vZGVtQ1BQOjpSZWNvdmVyYWJsZUV4Y2VwdGlvbjxUQlNLbW9kZW1DUFA6OldhaXRGb3JTeW1ib2xBUz46OkNsb3NlKCm+AShUQlNLbW9kZW1DUFA6OlNpblRvbmU6OlNpblRvbmUoaW50LCBpbnQpvwFWVEJTS21vZGVtQ1BQOjpYUHNrU2luVG9uZTo6WFBza1NpblRvbmUoaW50LCBpbnQsIGludCwgVEJTS21vZGVtQ1BQOjpJUHlJdGVyYXRvcjxpbnQ+KinAASVUQlNLbW9kZW1DUFA6OlRyYWl0VG9uZTo6flRyYWl0VG9uZSgpwQEnVEJTS21vZGVtQ1BQOjpUcmFpdFRvbmU6On5UcmFpdFRvbmUoKS4xwgEhVEJTS21vZGVtQ1BQOjpEZWZhdWx0SXRlcjo6TmV4dCgpwwE3VEJTS21vZGVtQ1BQOjpCYXNpY1JvU3RyZWFtPGRvdWJsZT46On5CYXNpY1JvU3RyZWFtKCkuMsQBNVRCU0ttb2RlbUNQUDo6VHJhaXRCbG9ja0VuY29kZXI6On5UcmFpdEJsb2NrRW5jb2RlcigpxQE3VEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRW5jb2Rlcjo6flRyYWl0QmxvY2tFbmNvZGVyKCkuMcYBRnZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRW5jb2Rlcjo6flRyYWl0QmxvY2tFbmNvZGVyKCnHATdUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tFbmNvZGVyOjp+VHJhaXRCbG9ja0VuY29kZXIoKS4yyAFIdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tFbmNvZGVyOjp+VHJhaXRCbG9ja0VuY29kZXIoKS4xyQFgVEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRW5jb2Rlcjo6U2V0SW5wdXQoc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJQml0U3RyZWFtPiBjb25zdCYpygFxdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tFbmNvZGVyOjpTZXRJbnB1dChzdGQ6Ol9fMjo6c2hhcmVkX3B0cjxUQlNLbW9kZW1DUFA6OklCaXRTdHJlYW0+IGNvbnN0JinLASdUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tFbmNvZGVyOjpOZXh0KCnMATh2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6VHJhaXRCbG9ja0VuY29kZXI6Ok5leHQoKc0BL1RCU0ttb2RlbUNQUDo6VHJhaXRCbG9ja0VuY29kZXI6OkdldFBvcygpIGNvbnN0zgFAdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tFbmNvZGVyOjpHZXRQb3MoKSBjb25zdM8BNVRCU0ttb2RlbUNQUDo6VHJhaXRCbG9ja0RlY29kZXI6On5UcmFpdEJsb2NrRGVjb2Rlcigp0AE3VEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRGVjb2Rlcjo6flRyYWl0QmxvY2tEZWNvZGVyKCkuMdEBRnZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRGVjb2Rlcjo6flRyYWl0QmxvY2tEZWNvZGVyKCnSATdUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tEZWNvZGVyOjp+VHJhaXRCbG9ja0RlY29kZXIoKS4y0wFIdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tEZWNvZGVyOjp+VHJhaXRCbG9ja0RlY29kZXIoKS4x1AFnVEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRGVjb2Rlcjo6U2V0SW5wdXQoc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJUm9TdHJlYW08ZG91YmxlPj4gY29uc3QmKdUBeHZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRGVjb2Rlcjo6U2V0SW5wdXQoc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJUm9TdHJlYW08ZG91YmxlPj4gY29uc3QmKdYBJ1RCU0ttb2RlbUNQUDo6VHJhaXRCbG9ja0RlY29kZXI6Ok5leHQoKdcBOHZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRGVjb2Rlcjo6TmV4dCgp2AEvVEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRGVjb2Rlcjo6R2V0UG9zKCkgY29uc3TZAUB2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6VHJhaXRCbG9ja0RlY29kZXI6OkdldFBvcygpIGNvbnN02gEnVEJTS21vZGVtQ1BQOjpCYXNpY1JvU3RyZWFtPGludD46OkdldCgp2wExVEJTS21vZGVtQ1BQOjpCYXNpY1JvU3RyZWFtPGludD46OkdldHMoaW50LCBib29sKdwBK1RCU0ttb2RlbUNQUDo6QmFzaWNSb1N0cmVhbTxpbnQ+OjpTZWVrKGludCndATx2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6QmFzaWNSb1N0cmVhbTxpbnQ+OjpTZWVrKGludCneATh2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6QmFzaWNSb1N0cmVhbTxpbnQ+OjpHZXQoKd8BQnZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpCYXNpY1JvU3RyZWFtPGludD46OkdldHMoaW50LCBib29sKeABJVRCU0ttb2RlbUNQUDo6Qml0U3RyZWFtOjp+Qml0U3RyZWFtKCnhATZ2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6Qml0U3RyZWFtOjp+Qml0U3RyZWFtKCniASdUQlNLbW9kZW1DUFA6OkJpdFN0cmVhbTo6fkJpdFN0cmVhbSgpLjHjATh2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6Qml0U3RyZWFtOjp+Qml0U3RyZWFtKCkuMeQBH1RCU0ttb2RlbUNQUDo6Qml0U3RyZWFtOjpOZXh0KCnlATB2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6Qml0U3RyZWFtOjpOZXh0KCnmASdUQlNLbW9kZW1DUFA6OkJpdFN0cmVhbTo6R2V0UG9zKCkgY29uc3TnATh2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6Qml0U3RyZWFtOjpHZXRQb3MoKSBjb25zdOgBMFRCU0ttb2RlbUNQUDo6UHlTdG9wSXRlcmF0aW9uOjpQeVN0b3BJdGVyYXRpb24oKekBhwFUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcjo6Qml0c1dpZHRoQ29udmVydEl0ZXJhdG9yKHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6SVB5SXRlcmF0b3I8aW50Pj4gY29uc3QmLCBpbnQsIGludCnqAUNUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcjo6fkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcigp6wFUdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcjo6fkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcigp7AFFVEJTS21vZGVtQ1BQOjpCaXRzV2lkdGhDb252ZXJ0SXRlcmF0b3I6On5CaXRzV2lkdGhDb252ZXJ0SXRlcmF0b3IoKS4x7QFWdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcjo6fkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcigpLjHuAS5UQlNLbW9kZW1DUFA6OkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcjo6TmV4dCgp7wE/dmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcjo6TmV4dCgp8AF1VEJTS21vZGVtQ1BQOjpBdmVyYWdlSW50ZXJhdG9yOjpBdmVyYWdlSW50ZXJhdG9yKHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6SVB5SXRlcmF0b3I8ZG91YmxlPj4gY29uc3QmLCBpbnQp8QEmVEJTS21vZGVtQ1BQOjpBdmVyYWdlSW50ZXJhdG9yOjpOZXh0KCnyATd2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6QXZlcmFnZUludGVyYXRvcjo6TmV4dCgp8wEzVEJTS21vZGVtQ1BQOjpBdmVyYWdlSW50ZXJhdG9yOjp+QXZlcmFnZUludGVyYXRvcigp9AE1VEJTS21vZGVtQ1BQOjpBdmVyYWdlSW50ZXJhdG9yOjp+QXZlcmFnZUludGVyYXRvcigpLjH1AUR2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6QXZlcmFnZUludGVyYXRvcjo6fkF2ZXJhZ2VJbnRlcmF0b3IoKfYBRnZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpBdmVyYWdlSW50ZXJhdG9yOjp+QXZlcmFnZUludGVyYXRvcigpLjH3ASlUQlNLbW9kZW1DUFA6OlN1bUl0ZXJhdG9yOjp+U3VtSXRlcmF0b3IoKfgBK1RCU0ttb2RlbUNQUDo6U3VtSXRlcmF0b3I6On5TdW1JdGVyYXRvcigpLjH5ATp2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6U3VtSXRlcmF0b3I6On5TdW1JdGVyYXRvcigp+gErVEJTS21vZGVtQ1BQOjpTdW1JdGVyYXRvcjo6flN1bUl0ZXJhdG9yKCkuMvsBPHZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpTdW1JdGVyYXRvcjo6flN1bUl0ZXJhdG9yKCkuMfwBIVRCU0ttb2RlbUNQUDo6U3VtSXRlcmF0b3I6Ok5leHQoKf0BMnZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpTdW1JdGVyYXRvcjo6TmV4dCgp/gEkVEJTS21vZGVtQ1BQOjpYb3JTaGlmdFJhbmQzMTo6TmV4dCgp/wGEAVRCU0ttb2RlbUNQUDo6U2VsZkNvcnJjb2VmSXRlcmF0b3IyOjpTZWxmQ29ycmNvZWZJdGVyYXRvcjIoaW50LCBzdGQ6Ol9fMjo6c2hhcmVkX3B0cjxUQlNLbW9kZW1DUFA6OklQeUl0ZXJhdG9yPGRvdWJsZT4+IGNvbnN0JiwgaW50KYACPVRCU0ttb2RlbUNQUDo6U2VsZkNvcnJjb2VmSXRlcmF0b3IyOjp+U2VsZkNvcnJjb2VmSXRlcmF0b3IyKCmBAj9UQlNLbW9kZW1DUFA6OlNlbGZDb3JyY29lZkl0ZXJhdG9yMjo6flNlbGZDb3JyY29lZkl0ZXJhdG9yMigpLjGCAitUQlNLbW9kZW1DUFA6OlNlbGZDb3JyY29lZkl0ZXJhdG9yMjo6TmV4dCgpgwLdAVRCU0ttb2RlbUNQUDo6UGNtRGF0YTo6UGNtRGF0YSh1bnNpZ25lZCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgbG9uZywgaW50LCBpbnQsIHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpDaHVuayBjb25zdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpDaHVuayBjb25zdD4+PiBjb25zdCophAJCVEJTS21vZGVtQ1BQOjpGbG9hdDJieXRlcyhUQlNLbW9kZW1DUFA6OklQeUl0ZXJhdG9yPGRvdWJsZT4mLCBpbnQphQIqVEJTS21vZGVtQ1BQOjpQY21EYXRhOjpEYXRhQXNGbG9hdCgpIGNvbnN0hgIhVEJTS21vZGVtQ1BQOjpQY21EYXRhOjp+UGNtRGF0YSgphwIjVEJTS21vZGVtQ1BQOjpQY21EYXRhOjp+UGNtRGF0YSgpLjGIAklUQlNLbW9kZW1DUFA6Ok1lbUJ1ZmZlcjo6X1dyaXRlQnl0ZXModW5zaWduZWQgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcpiQJNVEJTS21vZGVtQ1BQOjpNZW1CdWZmZXI6OldyaXRlQnl0ZXModW5zaWduZWQgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcsIGludCmKAjRUQlNLbW9kZW1DUFA6Ok1lbUJ1ZmZlcjo6V3JpdGVJbnQxNkxFKHVuc2lnbmVkIGxvbmcpiwI0VEJTS21vZGVtQ1BQOjpNZW1CdWZmZXI6OldyaXRlSW50MzJMRSh1bnNpZ25lZCBsb25nKYwCN1RCU0ttb2RlbUNQUDo6TWVtQnVmZmVyOjpBc0ludDMyTEUodW5zaWduZWQgbG9uZykgY29uc3SNAjhUQlNLbW9kZW1DUFA6Ok1lbUJ1ZmZlcjo6QXNCeXRlc1B0cih1bnNpZ25lZCBsb25nKSBjb25zdI4CQVRCU0ttb2RlbUNQUDo6TWVtQnVmZmVyOjpEdW1wKFRCU0ttb2RlbUNQUDo6SUJpbmFyeVdyaXRlciYpIGNvbnN0jwIlVEJTS21vZGVtQ1BQOjpNZW1CdWZmZXI6On5NZW1CdWZmZXIoKZACJ1RCU0ttb2RlbUNQUDo6TWVtQnVmZmVyOjp+TWVtQnVmZmVyKCkuMZECNlRCU0ttb2RlbUNQUDo6Q2h1bms6OkNodW5rKGNoYXIgY29uc3QqLCB1bnNpZ25lZCBsb25nKZICHVRCU0ttb2RlbUNQUDo6Q2h1bms6On5DaHVuaygpkwIkVEJTS21vZGVtQ1BQOjpDaHVuazo6R2V0U2l6ZSgpIGNvbnN0lAI9VEJTS21vZGVtQ1BQOjpDaHVuazo6RHVtcChUQlNLbW9kZW1DUFA6OklCaW5hcnlXcml0ZXImKSBjb25zdJUCLlRCU0ttb2RlbUNQUDo6Rm10Q2h1bms6OkdldFNhbXBsZXdpZHRoKCkgY29uc3SWAocCdm9pZCBzdGQ6Ol9fMjo6dmVjdG9yPHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6Q2h1bmsgY29uc3Q+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6Q2h1bmsgY29uc3Q+Pj46Ol9fcHVzaF9iYWNrX3Nsb3dfcGF0aDxzdGQ6Ol9fMjo6c2hhcmVkX3B0cjxUQlNLbW9kZW1DUFA6OkNodW5rIGNvbnN0Pj4oc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpDaHVuayBjb25zdD4mJimXAp4Bc3RkOjpfXzI6OnZlY3RvcjxzdGQ6Ol9fMjo6c2hhcmVkX3B0cjxUQlNLbW9kZW1DUFA6OkNodW5rIGNvbnN0Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6c2hhcmVkX3B0cjxUQlNLbW9kZW1DUFA6OkNodW5rIGNvbnN0Pj4+Ojp+dmVjdG9yW2FiaTp2MTUwMDBdKCmYAuQBVEJTS21vZGVtQ1BQOjpXYXZlRmlsZTo6V2F2ZUZpbGUoaW50LCBpbnQsIGludCwgdW5zaWduZWQgY2hhciBjb25zdCosIHVuc2lnbmVkIGxvbmcsIHN0ZDo6X18yOjp2ZWN0b3I8c3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpDaHVuayBjb25zdD4sIHN0ZDo6X18yOjphbGxvY2F0b3I8c3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpDaHVuayBjb25zdD4+PiBjb25zdCopmQInVEJTS21vZGVtQ1BQOjpXYXZlRmlsZTo6R2V0RGF0YSgpIGNvbnN0mgImVEJTS21vZGVtQ1BQOjpXYXZlRmlsZTo6R2V0Rm10KCkgY29uc3SbAkBUQlNLbW9kZW1DUFA6OldhdmVGaWxlOjpEdW1wKFRCU0ttb2RlbUNQUDo6SUJpbmFyeVdyaXRlciYpIGNvbnN0nAIjVEJTS21vZGVtQ1BQOjpXYXZlRmlsZTo6fldhdmVGaWxlKCmdAiVUQlNLbW9kZW1DUFA6OldhdmVGaWxlOjp+V2F2ZUZpbGUoKS4xngIjVEJTS21vZGVtQ1BQOjpSYXdDaHVuazo6flJhd0NodW5rKCmfAh9UQlNLbW9kZW1DUFA6OkNodW5rOjp+Q2h1bmsoKS4xoAJ8c3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6Rm10Q2h1bmssIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpGbXRDaHVuaz4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKaECfnN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OkZtdENodW5rLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6Rm10Q2h1bms+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMaICfnN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OkRhdGFDaHVuaywgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OkRhdGFDaHVuaz4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKaMCgAFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpEYXRhQ2h1bmssIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpEYXRhQ2h1bms+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMaQCqwFUQlNLbW9kZW1DUFA6OlRic2tNb2R1bGF0b3JfaW1wbDo6VGJza01vZHVsYXRvcl9pbXBsKHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6VHJhaXRUb25lIGNvbnN0PiBjb25zdCYsIHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6UHJlYW1ibGUgY29uc3Q+IGNvbnN0JimlAjdUQlNLbW9kZW1DUFA6OlRic2tNb2R1bGF0b3JfaW1wbDo6flRic2tNb2R1bGF0b3JfaW1wbCgppgI5VEJTS21vZGVtQ1BQOjpUYnNrTW9kdWxhdG9yX2ltcGw6On5UYnNrTW9kdWxhdG9yX2ltcGwoKS4xpwKwAVRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvcl9pbXBsOjpNb2R1bGF0ZUFzQml0KHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6SVJvU3RyZWFtPGludD4+IGNvbnN0Jiwgc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJUHlJdGVyYXRvcjxkb3VibGU+PiBjb25zdCYsIGJvb2wpqAIzVEJTS21vZGVtQ1BQOjpBc3luY0RlbW9kdWxhdGVYOjp+QXN5bmNEZW1vZHVsYXRlWCgpqQI1VEJTS21vZGVtQ1BQOjpBc3luY0RlbW9kdWxhdGVYOjp+QXN5bmNEZW1vZHVsYXRlWCgpLjGqAjVUQlNLbW9kZW1DUFA6OkFzeW5jRGVtb2R1bGF0ZVg6On5Bc3luY0RlbW9kdWxhdGVYKCkuMqsCK1RCU0ttb2RlbUNQUDo6QXN5bmNEZW1vZHVsYXRlWDo6R2V0UmVzdWx0KCmsAidUQlNLbW9kZW1DUFA6OkFzeW5jRGVtb2R1bGF0ZVg6OkNsb3NlKCmtAiVUQlNLbW9kZW1DUFA6OkFzeW5jRGVtb2R1bGF0ZVg6OlJ1bigprgKpAVRCU0ttb2RlbUNQUDo6VGJza0RlbW9kdWxhdG9yX2ltcGw6OlRic2tEZW1vZHVsYXRvcl9pbXBsKHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6VHJhaXRUb25lIGNvbnN0PiBjb25zdCYsIHN0ZDo6X18yOjpzaGFyZWRfcHRyPFRCU0ttb2RlbUNQUDo6UHJlYW1ibGU+IGNvbnN0JimvAnNUQlNLbW9kZW1DUFA6OlRic2tEZW1vZHVsYXRvcl9pbXBsOjpEZW1vZHVsYXRlQXNCaXQoc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJUHlJdGVyYXRvcjxkb3VibGU+PiBjb25zdCYpsAJbVEJTS21vZGVtQ1BQOjpSZWNvdmVyYWJsZUV4Y2VwdGlvbjxUQlNLbW9kZW1DUFA6OkFzeW5jRGVtb2R1bGF0ZVg+Ojp+UmVjb3ZlcmFibGVFeGNlcHRpb24oKbECjgFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRW5jb2Rlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tFbmNvZGVyPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpsgKQAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tFbmNvZGVyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6VHJhaXRCbG9ja0VuY29kZXI+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMbMCsAFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpUYnNrTW9kdWxhdG9yX2ltcGw6OkRpZmZCaXRFbmNvZGVyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvcl9pbXBsOjpEaWZmQml0RW5jb2Rlcj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKbQCsgFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpUYnNrTW9kdWxhdG9yX2ltcGw6OkRpZmZCaXRFbmNvZGVyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvcl9pbXBsOjpEaWZmQml0RW5jb2Rlcj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xtQJDVEJTS21vZGVtQ1BQOjpUYnNrTW9kdWxhdG9yX2ltcGw6OkRpZmZCaXRFbmNvZGVyOjp+RGlmZkJpdEVuY29kZXIoKbYCRVRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvcl9pbXBsOjpEaWZmQml0RW5jb2Rlcjo6fkRpZmZCaXRFbmNvZGVyKCkuMbcCQVRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvcl9pbXBsOjpEaWZmQml0RW5jb2Rlcjo6R2V0cyhpbnQsIGJvb2wpuAI7VEJTS21vZGVtQ1BQOjpUYnNrTW9kdWxhdG9yX2ltcGw6OkRpZmZCaXRFbmNvZGVyOjpTZWVrKGludCm5AjhUQlNLbW9kZW1DUFA6OlRic2tNb2R1bGF0b3JfaW1wbDo6RGlmZkJpdEVuY29kZXI6Ok5leHQoKboCQFRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvcl9pbXBsOjpEaWZmQml0RW5jb2Rlcjo6R2V0UG9zKCkgY29uc3S7Akl2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvcl9pbXBsOjpEaWZmQml0RW5jb2Rlcjo6TmV4dCgpvAJUdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OlRic2tNb2R1bGF0b3JfaW1wbDo6RGlmZkJpdEVuY29kZXI6On5EaWZmQml0RW5jb2RlcigpvQJWdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OlRic2tNb2R1bGF0b3JfaW1wbDo6RGlmZkJpdEVuY29kZXI6On5EaWZmQml0RW5jb2RlcigpLjG+AlF2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvcl9pbXBsOjpEaWZmQml0RW5jb2Rlcjo6R2V0UG9zKCkgY29uc3S/AowBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6UmVwZWF0ZXI8ZG91YmxlPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlJlcGVhdGVyPGRvdWJsZT4+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCnAAo4Bc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6UmVwZWF0ZXI8ZG91YmxlPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlJlcGVhdGVyPGRvdWJsZT4+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMcECJlRCU0ttb2RlbUNQUDo6UmVwZWF0ZXI8ZG91YmxlPjo6TmV4dCgpwgI3dmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OlJlcGVhdGVyPGRvdWJsZT46Ok5leHQoKcMCPHZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpSZXBlYXRlcjxkb3VibGU+Ojp+UmVwZWF0ZXIoKcQCPnZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpSZXBlYXRlcjxkb3VibGU+Ojp+UmVwZWF0ZXIoKS4xxQKOAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6Okl0ZXJDaGFpbjxkb3VibGU+LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6SXRlckNoYWluPGRvdWJsZT4+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCnGApABc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6SXRlckNoYWluPGRvdWJsZT4sIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpJdGVyQ2hhaW48ZG91YmxlPj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4xxwKmAXN0ZDo6X18yOjpfX2RlcXVlX2Jhc2U8c3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJUHlJdGVyYXRvcjxkb3VibGU+Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxzdGQ6Ol9fMjo6c2hhcmVkX3B0cjxUQlNLbW9kZW1DUFA6OklQeUl0ZXJhdG9yPGRvdWJsZT4+Pj46OmNsZWFyKCnIAi1UQlNLbW9kZW1DUFA6Okl0ZXJDaGFpbjxkb3VibGU+Ojp+SXRlckNoYWluKCnJAi9UQlNLbW9kZW1DUFA6Okl0ZXJDaGFpbjxkb3VibGU+Ojp+SXRlckNoYWluKCkuMcoCL1RCU0ttb2RlbUNQUDo6SXRlckNoYWluPGRvdWJsZT46On5JdGVyQ2hhaW4oKS4yywInVEJTS21vZGVtQ1BQOjpJdGVyQ2hhaW48ZG91YmxlPjo6TmV4dCgpzAI4dmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6Okl0ZXJDaGFpbjxkb3VibGU+OjpOZXh0KCnNAj52aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6SXRlckNoYWluPGRvdWJsZT46On5JdGVyQ2hhaW4oKc4CQHZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpJdGVyQ2hhaW48ZG91YmxlPjo6fkl0ZXJDaGFpbigpLjHPAowBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6Um9TdHJlYW08ZG91YmxlPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGRvdWJsZT4+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCnQAo4Bc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6Um9TdHJlYW08ZG91YmxlPiwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGRvdWJsZT4+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMdECK1RCU0ttb2RlbUNQUDo6Um9TdHJlYW08ZG91YmxlPjo6flJvU3RyZWFtKCnSAi1UQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGRvdWJsZT46On5Sb1N0cmVhbSgpLjHTAi1UQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGRvdWJsZT46On5Sb1N0cmVhbSgpLjLUAiZUQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGRvdWJsZT46Ok5leHQoKdUCN3ZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpSb1N0cmVhbTxkb3VibGU+OjpOZXh0KCnWAjx2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6Um9TdHJlYW08ZG91YmxlPjo6flJvU3RyZWFtKCnXAj52aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6Um9TdHJlYW08ZG91YmxlPjo6flJvU3RyZWFtKCkuMdgCjgFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpUcmFpdEJsb2NrRGVjb2Rlciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tEZWNvZGVyPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgp2QKQAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlRyYWl0QmxvY2tEZWNvZGVyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6VHJhaXRCbG9ja0RlY29kZXI+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMdoCjAFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpBc3luY0RlbW9kdWxhdGVYLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6QXN5bmNEZW1vZHVsYXRlWD4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKdsCjgFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpBc3luY0RlbW9kdWxhdGVYLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6QXN5bmNEZW1vZHVsYXRlWD4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4x3AJdVEJTS21vZGVtQ1BQOjpSZWNvdmVyYWJsZUV4Y2VwdGlvbjxUQlNLbW9kZW1DUFA6OkFzeW5jRGVtb2R1bGF0ZVg+Ojp+UmVjb3ZlcmFibGVFeGNlcHRpb24oKS4x3QI4VEJTS21vZGVtQ1BQOjpCaXRzV2lkdGhGaWx0ZXI6OkJpdHNXaWR0aEZpbHRlcihpbnQsIGludCneAjFUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aEZpbHRlcjo6fkJpdHNXaWR0aEZpbHRlcigp3wJCdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aEZpbHRlcjo6fkJpdHNXaWR0aEZpbHRlcigp4AIzVEJTS21vZGVtQ1BQOjpCaXRzV2lkdGhGaWx0ZXI6On5CaXRzV2lkdGhGaWx0ZXIoKS4x4QJEdmlydHVhbCB0aHVuayB0byBUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aEZpbHRlcjo6fkJpdHNXaWR0aEZpbHRlcigpLjHiAmJUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aEZpbHRlcjo6U2V0SW5wdXQoc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJUm9TdHJlYW08aW50Pj4gY29uc3QmKeMCJVRCU0ttb2RlbUNQUDo6Qml0c1dpZHRoRmlsdGVyOjpOZXh0KCnkAi1UQlNLbW9kZW1DUFA6OkJpdHNXaWR0aEZpbHRlcjo6R2V0UG9zKCkgY29uc3TlAi9UQlNLbW9kZW1DUFA6OkFzeW5jRGVtb2R1bGF0ZUFzSW50OjpHZXRSZXN1bHQoKeYCK1RCU0ttb2RlbUNQUDo6QXN5bmNEZW1vZHVsYXRlQXNJbnQ6OkNsb3NlKCnnAilUQlNLbW9kZW1DUFA6OkFzeW5jRGVtb2R1bGF0ZUFzSW50OjpSdW4oKegCc1RCU0ttb2RlbUNQUDo6VGJza0RlbW9kdWxhdG9yOjpEZW1vZHVsYXRlQXNJbnQoc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJUHlJdGVyYXRvcjxkb3VibGU+PiBjb25zdCYsIGludCnpAl9UQlNLbW9kZW1DUFA6OlJlY292ZXJhYmxlRXhjZXB0aW9uPFRCU0ttb2RlbUNQUDo6QXN5bmNEZW1vZHVsYXRlQXNJbnQ+Ojp+UmVjb3ZlcmFibGVFeGNlcHRpb24oKeoCO1RCU0ttb2RlbUNQUDo6QXN5bmNEZW1vZHVsYXRlQXNJbnQ6On5Bc3luY0RlbW9kdWxhdGVBc0ludCgp6wI9VEJTS21vZGVtQ1BQOjpBc3luY0RlbW9kdWxhdGVBc0ludDo6fkFzeW5jRGVtb2R1bGF0ZUFzSW50KCkuMewCigFzdGQ6Ol9fMjo6X19zaGFyZWRfcHRyX2VtcGxhY2U8VEJTS21vZGVtQ1BQOjpCaXRzV2lkdGhGaWx0ZXIsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpCaXRzV2lkdGhGaWx0ZXI+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCntAowBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6Qml0c1dpZHRoRmlsdGVyLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6Qml0c1dpZHRoRmlsdGVyPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgpLjHuApwBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6Qml0c1dpZHRoQ29udmVydEl0ZXJhdG9yLCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6Qml0c1dpZHRoQ29udmVydEl0ZXJhdG9yPj46On5fX3NoYXJlZF9wdHJfZW1wbGFjZSgp7wKeAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvciwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OkJpdHNXaWR0aENvbnZlcnRJdGVyYXRvcj4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4x8AKUAXN0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OkFzeW5jRGVtb2R1bGF0ZUFzSW50LCBzdGQ6Ol9fMjo6YWxsb2NhdG9yPFRCU0ttb2RlbUNQUDo6QXN5bmNEZW1vZHVsYXRlQXNJbnQ+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCnxApYBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6QXN5bmNEZW1vZHVsYXRlQXNJbnQsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpBc3luY0RlbW9kdWxhdGVBc0ludD4+Ojp+X19zaGFyZWRfcHRyX2VtcGxhY2UoKS4x8gJhVEJTS21vZGVtQ1BQOjpSZWNvdmVyYWJsZUV4Y2VwdGlvbjxUQlNLbW9kZW1DUFA6OkFzeW5jRGVtb2R1bGF0ZUFzSW50Pjo6flJlY292ZXJhYmxlRXhjZXB0aW9uKCkuMfMCbVRCU0ttb2RlbUNQUDo6VGJza01vZHVsYXRvcjo6TW9kdWxhdGUoc3RkOjpfXzI6OnNoYXJlZF9wdHI8VEJTS21vZGVtQ1BQOjpJUHlJdGVyYXRvcjxpbnQ+PiBjb25zdCYsIGludCwgYm9vbCn0Ai1UQlNLbW9kZW1DUFA6OlRic2tNb2R1bGF0b3I6On5UYnNrTW9kdWxhdG9yKCn1AoABc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6U3VmZml4VG9uZSwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlN1ZmZpeFRvbmU+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCn2AoIBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6U3VmZml4VG9uZSwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlN1ZmZpeFRvbmU+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMfcCe3N0ZDo6X18yOjpfX3NoYXJlZF9wdHJfZW1wbGFjZTxUQlNLbW9kZW1DUFA6OlN1ZmZpeFRvbmUsIHN0ZDo6X18yOjphbGxvY2F0b3I8VEJTS21vZGVtQ1BQOjpTdWZmaXhUb25lPj46Ol9fb25femVyb19zaGFyZWQoKfgCIFRCU0ttb2RlbUNQUDo6U3VmZml4VG9uZTo6TmV4dCgp+QInVEJTS21vZGVtQ1BQOjpTdWZmaXhUb25lOjp+U3VmZml4VG9uZSgp+gIpVEJTS21vZGVtQ1BQOjpTdWZmaXhUb25lOjp+U3VmZml4VG9uZSgpLjH7AoYBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6Um9TdHJlYW08aW50Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGludD4+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCn8AogBc3RkOjpfXzI6Ol9fc2hhcmVkX3B0cl9lbXBsYWNlPFRCU0ttb2RlbUNQUDo6Um9TdHJlYW08aW50Piwgc3RkOjpfXzI6OmFsbG9jYXRvcjxUQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGludD4+Pjo6fl9fc2hhcmVkX3B0cl9lbXBsYWNlKCkuMf0CKFRCU0ttb2RlbUNQUDo6Um9TdHJlYW08aW50Pjo6flJvU3RyZWFtKCn+AipUQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGludD46On5Sb1N0cmVhbSgpLjH/AipUQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGludD46On5Sb1N0cmVhbSgpLjKAAyNUQlNLbW9kZW1DUFA6OlJvU3RyZWFtPGludD46Ok5leHQoKYEDNHZpcnR1YWwgdGh1bmsgdG8gVEJTS21vZGVtQ1BQOjpSb1N0cmVhbTxpbnQ+OjpOZXh0KCmCAzl2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6Um9TdHJlYW08aW50Pjo6flJvU3RyZWFtKCmDAzt2aXJ0dWFsIHRodW5rIHRvIFRCU0ttb2RlbUNQUDo6Um9TdHJlYW08aW50Pjo6flJvU3RyZWFtKCkuMYQDCF9fbWVtY3B5hQMHbWVtbW92ZYYDBm1lbXNldIcDBnNjYWxibogDBV9fc2luiQMFX19jb3OKAwNzaW6LAxBfX2Vycm5vX2xvY2F0aW9ujAMIZGxtYWxsb2ONAwZkbGZyZWWOAw1kaXNwb3NlX2NodW5rjwMEc2Jya5ADzQF2b2lkIHN0ZDo6X18yOjpfX2ludHJvc29ydDxzdGQ6Ol9fMjo6X0NsYXNzaWNBbGdQb2xpY3ksIHN0ZDo6X18yOjpfX2xlc3M8ZG91YmxlLCBkb3VibGU+JiwgZG91YmxlKj4oZG91YmxlKiwgZG91YmxlKiwgc3RkOjpfXzI6Ol9fbGVzczxkb3VibGUsIGRvdWJsZT4mLCBzdGQ6Ol9fMjo6aXRlcmF0b3JfdHJhaXRzPGRvdWJsZSo+OjpkaWZmZXJlbmNlX3R5cGUpkQNcc3RkOjpfXzI6Ol9fbGVzczxkb3VibGUsIGRvdWJsZT46Om9wZXJhdG9yKClbYWJpOnYxNTAwMF0oZG91YmxlIGNvbnN0JiwgZG91YmxlIGNvbnN0JikgY29uc3SSA3N2b2lkIHN0ZDo6X18yOjpfSXRlck9wczxzdGQ6Ol9fMjo6X0NsYXNzaWNBbGdQb2xpY3k+OjppdGVyX3N3YXBbYWJpOnYxNTAwMF08ZG91YmxlKiYsIGRvdWJsZSomPihkb3VibGUqJiwgZG91YmxlKiYpkwOpAnN0ZDo6X18yOjplbmFibGVfaWY8IV9fdXNlX2JyYW5jaGxlc3Nfc29ydDxzdGQ6Ol9fMjo6X19sZXNzPGRvdWJsZSwgZG91YmxlPiYsIGRvdWJsZSo+Ojp2YWx1ZSwgdm9pZD46OnR5cGUgc3RkOjpfXzI6Ol9fc29ydDRfbWF5YmVfYnJhbmNobGVzc1thYmk6djE1MDAwXTxzdGQ6Ol9fMjo6X0NsYXNzaWNBbGdQb2xpY3ksIHN0ZDo6X18yOjpfX2xlc3M8ZG91YmxlLCBkb3VibGU+JiwgZG91YmxlKj4oZG91YmxlKiwgZG91YmxlKiwgZG91YmxlKiwgZG91YmxlKiwgc3RkOjpfXzI6Ol9fbGVzczxkb3VibGUsIGRvdWJsZT4mKZQDsgJzdGQ6Ol9fMjo6ZW5hYmxlX2lmPCFfX3VzZV9icmFuY2hsZXNzX3NvcnQ8c3RkOjpfXzI6Ol9fbGVzczxkb3VibGUsIGRvdWJsZT4mLCBkb3VibGUqPjo6dmFsdWUsIHZvaWQ+Ojp0eXBlIHN0ZDo6X18yOjpfX3NvcnQ1X21heWJlX2JyYW5jaGxlc3NbYWJpOnYxNTAwMF08c3RkOjpfXzI6Ol9DbGFzc2ljQWxnUG9saWN5LCBzdGQ6Ol9fMjo6X19sZXNzPGRvdWJsZSwgZG91YmxlPiYsIGRvdWJsZSo+KGRvdWJsZSosIGRvdWJsZSosIGRvdWJsZSosIGRvdWJsZSosIGRvdWJsZSosIHN0ZDo6X18yOjpfX2xlc3M8ZG91YmxlLCBkb3VibGU+JimVA8MBdW5zaWduZWQgaW50IHN0ZDo6X18yOjpfX3NvcnQ1X3dyYXBfcG9saWN5PHN0ZDo6X18yOjpfQ2xhc3NpY0FsZ1BvbGljeSwgc3RkOjpfXzI6Ol9fbGVzczxkb3VibGUsIGRvdWJsZT4mLCBkb3VibGUqPihkb3VibGUqLCBkb3VibGUqLCBkb3VibGUqLCBkb3VibGUqLCBkb3VibGUqLCBzdGQ6Ol9fMjo6X19sZXNzPGRvdWJsZSwgZG91YmxlPiYplgOlAXVuc2lnbmVkIGludCBzdGQ6Ol9fMjo6X19zb3J0MzxzdGQ6Ol9fMjo6X0NsYXNzaWNBbGdQb2xpY3ksIHN0ZDo6X18yOjpfX2xlc3M8ZG91YmxlLCBkb3VibGU+JiwgZG91YmxlKj4oZG91YmxlKiwgZG91YmxlKiwgZG91YmxlKiwgc3RkOjpfXzI6Ol9fbGVzczxkb3VibGUsIGRvdWJsZT4mKZcDiwFib29sIHN0ZDo6X18yOjpfX2luc2VydGlvbl9zb3J0X2luY29tcGxldGU8c3RkOjpfXzI6Ol9fbGVzczxkb3VibGUsIGRvdWJsZT4mLCBkb3VibGUqPihkb3VibGUqLCBkb3VibGUqLCBzdGQ6Ol9fMjo6X19sZXNzPGRvdWJsZSwgZG91YmxlPiYpmAOgAnN0ZDo6X18yOjplbmFibGVfaWY8IV9fdXNlX2JyYW5jaGxlc3Nfc29ydDxzdGQ6Ol9fMjo6X19sZXNzPGRvdWJsZSwgZG91YmxlPiYsIGRvdWJsZSo+Ojp2YWx1ZSwgdm9pZD46OnR5cGUgc3RkOjpfXzI6Ol9fc29ydDNfbWF5YmVfYnJhbmNobGVzc1thYmk6djE1MDAwXTxzdGQ6Ol9fMjo6X0NsYXNzaWNBbGdQb2xpY3ksIHN0ZDo6X18yOjpfX2xlc3M8ZG91YmxlLCBkb3VibGU+JiwgZG91YmxlKj4oZG91YmxlKiwgZG91YmxlKiwgZG91YmxlKiwgc3RkOjpfXzI6Ol9fbGVzczxkb3VibGUsIGRvdWJsZT4mKZkDrgF1bnNpZ25lZCBpbnQgc3RkOjpfXzI6Ol9fc29ydDQ8c3RkOjpfXzI6Ol9DbGFzc2ljQWxnUG9saWN5LCBzdGQ6Ol9fMjo6X19sZXNzPGRvdWJsZSwgZG91YmxlPiYsIGRvdWJsZSo+KGRvdWJsZSosIGRvdWJsZSosIGRvdWJsZSosIGRvdWJsZSosIHN0ZDo6X18yOjpfX2xlc3M8ZG91YmxlLCBkb3VibGU+JimaA80Bdm9pZCBzdGQ6Ol9fMjo6X19zaWZ0X2Rvd248c3RkOjpfXzI6Ol9DbGFzc2ljQWxnUG9saWN5LCBzdGQ6Ol9fMjo6X19sZXNzPGRvdWJsZSwgZG91YmxlPiYsIGRvdWJsZSo+KGRvdWJsZSosIHN0ZDo6X18yOjpfX2xlc3M8ZG91YmxlLCBkb3VibGU+Jiwgc3RkOjpfXzI6Oml0ZXJhdG9yX3RyYWl0czxkb3VibGUqPjo6ZGlmZmVyZW5jZV90eXBlLCBkb3VibGUqKZsDSmxvbmcgc3RkOjpfXzI6Ol9fbGliY3BwX2F0b21pY19yZWZjb3VudF9kZWNyZW1lbnRbYWJpOnYxNTAwMF08bG9uZz4obG9uZyYpnAMvc3RkOjpfXzI6Ol9fc2hhcmVkX3dlYWtfY291bnQ6Ol9fcmVsZWFzZV93ZWFrKCmdA0lzdGQ6Ol9fMjo6X19zaGFyZWRfd2Vha19jb3VudDo6X19nZXRfZGVsZXRlcihzdGQ6OnR5cGVfaW5mbyBjb25zdCYpIGNvbnN0ngMbb3BlcmF0b3IgbmV3KHVuc2lnbmVkIGxvbmcpnwMnc3RkOjpleGNlcHRpb246OmV4Y2VwdGlvblthYmk6djE1MDAwXSgpoAM9c3RkOjpfXzI6Ol9fbGliY3BwX3JlZnN0cmluZzo6X19saWJjcHBfcmVmc3RyaW5nKGNoYXIgY29uc3QqKaEDKnN0ZDo6bG9naWNfZXJyb3I6OmxvZ2ljX2Vycm9yKGNoYXIgY29uc3QqKaIDLnN0ZDo6cnVudGltZV9lcnJvcjo6cnVudGltZV9lcnJvcihjaGFyIGNvbnN0KimjAztfX2N4eGFiaXYxOjpfX2lzT3VyRXhjZXB0aW9uQ2xhc3MoX1Vud2luZF9FeGNlcHRpb24gY29uc3QqKaQDGF9fY3hhX2FsbG9jYXRlX2V4Y2VwdGlvbqUDSl9fY3h4YWJpdjE6OnRocm93bl9vYmplY3RfZnJvbV9jeGFfZXhjZXB0aW9uKF9fY3h4YWJpdjE6Ol9fY3hhX2V4Y2VwdGlvbioppgMUX19jeGFfZnJlZV9leGNlcHRpb26nAzNfX2N4eGFiaXYxOjpjeGFfZXhjZXB0aW9uX2Zyb21fdGhyb3duX29iamVjdCh2b2lkKimoAwtfX2N4YV90aHJvd6kDS19fY3h4YWJpdjE6OmV4Y2VwdGlvbl9jbGVhbnVwX2Z1bmMoX1Vud2luZF9SZWFzb25fQ29kZSwgX1Vud2luZF9FeGNlcHRpb24qKaoDTV9fY3h4YWJpdjE6OmN4YV9leGNlcHRpb25fZnJvbV9leGNlcHRpb25fdW53aW5kX2V4Y2VwdGlvbihfVW53aW5kX0V4Y2VwdGlvbiopqwMiX19jeGFfZGVjcmVtZW50X2V4Y2VwdGlvbl9yZWZjb3VudKwDEV9fY3hhX2JlZ2luX2NhdGNorQMPX19jeGFfZW5kX2NhdGNorgMNX19jeGFfcmV0aHJvd68DDWFib3J0X21lc3NhZ2WwAx5kZW1hbmdsaW5nX3Rlcm1pbmF0ZV9oYW5kbGVyKCmxAx9kZW1hbmdsaW5nX3VuZXhwZWN0ZWRfaGFuZGxlcigpsgMxZGVtYW5nbGUoY2hhciBjb25zdCopOjokXzA6Ol9faW52b2tlKGNoYXIgY29uc3QqKbMDfXN0ZDo6X18yOjpfX2NvbXByZXNzZWRfcGFpcl9lbGVtPGNoYXIgY29uc3QqLCAwLCBmYWxzZT46Ol9fY29tcHJlc3NlZF9wYWlyX2VsZW1bYWJpOnYxNTAwMF08Y2hhciBjb25zdComLCB2b2lkPihjaGFyIGNvbnN0KiYptAMQc3RkOjp0ZXJtaW5hdGUoKbUDHHN0ZDo6X190ZXJtaW5hdGUodm9pZCAoKikoKSm2AxJfX2N4YV9wdXJlX3ZpcnR1YWy3AzcoYW5vbnltb3VzIG5hbWVzcGFjZSk6Om5vZGVfZnJvbV9vZmZzZXQodW5zaWduZWQgc2hvcnQpuAMvX19jeHhhYml2MTo6X19hbGlnbmVkX2ZyZWVfd2l0aF9mYWxsYmFjayh2b2lkKim5Az8oYW5vbnltb3VzIG5hbWVzcGFjZSk6OmFmdGVyKChhbm9ueW1vdXMgbmFtZXNwYWNlKTo6aGVhcF9ub2RlKim6A1AoYW5vbnltb3VzIG5hbWVzcGFjZSk6Om9mZnNldF9mcm9tX25vZGUoKGFub255bW91cyBuYW1lc3BhY2UpOjpoZWFwX25vZGUgY29uc3QqKbsDPGlzX2VxdWFsKHN0ZDo6dHlwZV9pbmZvIGNvbnN0Kiwgc3RkOjp0eXBlX2luZm8gY29uc3QqLCBib29sKbwDW19fY3h4YWJpdjE6Ol9fY2xhc3NfdHlwZV9pbmZvOjpjYW5fY2F0Y2goX19jeHhhYml2MTo6X19zaGltX3R5cGVfaW5mbyBjb25zdCosIHZvaWQqJikgY29uc3S9A2tfX2N4eGFiaXYxOjpfX2NsYXNzX3R5cGVfaW5mbzo6cHJvY2Vzc19mb3VuZF9iYXNlX2NsYXNzKF9fY3h4YWJpdjE6Ol9fZHluYW1pY19jYXN0X2luZm8qLCB2b2lkKiwgaW50KSBjb25zdL4Dbl9fY3h4YWJpdjE6Ol9fY2xhc3NfdHlwZV9pbmZvOjpoYXNfdW5hbWJpZ3VvdXNfcHVibGljX2Jhc2UoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQqLCBpbnQpIGNvbnN0vwNxX19jeHhhYml2MTo6X19zaV9jbGFzc190eXBlX2luZm86Omhhc191bmFtYmlndW91c19wdWJsaWNfYmFzZShfX2N4eGFiaXYxOjpfX2R5bmFtaWNfY2FzdF9pbmZvKiwgdm9pZCosIGludCkgY29uc3TAA3NfX2N4eGFiaXYxOjpfX2Jhc2VfY2xhc3NfdHlwZV9pbmZvOjpoYXNfdW5hbWJpZ3VvdXNfcHVibGljX2Jhc2UoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQqLCBpbnQpIGNvbnN0wQModXBkYXRlX29mZnNldF90b19iYXNlKGNoYXIgY29uc3QqLCBsb25nKcIDcl9fY3h4YWJpdjE6Ol9fdm1pX2NsYXNzX3R5cGVfaW5mbzo6aGFzX3VuYW1iaWd1b3VzX3B1YmxpY19iYXNlKF9fY3h4YWJpdjE6Ol9fZHluYW1pY19jYXN0X2luZm8qLCB2b2lkKiwgaW50KSBjb25zdMMDgwFfX2N4eGFiaXYxOjpfX2NsYXNzX3R5cGVfaW5mbzo6cHJvY2Vzc19zdGF0aWNfdHlwZV9hYm92ZV9kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCB2b2lkIGNvbnN0KiwgaW50KSBjb25zdMQDdl9fY3h4YWJpdjE6Ol9fY2xhc3NfdHlwZV9pbmZvOjpwcm9jZXNzX3N0YXRpY190eXBlX2JlbG93X2RzdChfX2N4eGFiaXYxOjpfX2R5bmFtaWNfY2FzdF9pbmZvKiwgdm9pZCBjb25zdCosIGludCkgY29uc3TFA3NfX2N4eGFiaXYxOjpfX3ZtaV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9iZWxvd19kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0xgOBAV9fY3h4YWJpdjE6Ol9fYmFzZV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9hYm92ZV9kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCB2b2lkIGNvbnN0KiwgaW50LCBib29sKSBjb25zdMcDdF9fY3h4YWJpdjE6Ol9fYmFzZV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9iZWxvd19kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0yANyX19jeHhhYml2MTo6X19zaV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9iZWxvd19kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0yQNvX19jeHhhYml2MTo6X19jbGFzc190eXBlX2luZm86OnNlYXJjaF9iZWxvd19kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0ygOAAV9fY3h4YWJpdjE6Ol9fdm1pX2NsYXNzX3R5cGVfaW5mbzo6c2VhcmNoX2Fib3ZlX2RzdChfX2N4eGFiaXYxOjpfX2R5bmFtaWNfY2FzdF9pbmZvKiwgdm9pZCBjb25zdCosIHZvaWQgY29uc3QqLCBpbnQsIGJvb2wpIGNvbnN0ywN/X19jeHhhYml2MTo6X19zaV9jbGFzc190eXBlX2luZm86OnNlYXJjaF9hYm92ZV9kc3QoX19jeHhhYml2MTo6X19keW5hbWljX2Nhc3RfaW5mbyosIHZvaWQgY29uc3QqLCB2b2lkIGNvbnN0KiwgaW50LCBib29sKSBjb25zdMwDfF9fY3h4YWJpdjE6Ol9fY2xhc3NfdHlwZV9pbmZvOjpzZWFyY2hfYWJvdmVfZHN0KF9fY3h4YWJpdjE6Ol9fZHluYW1pY19jYXN0X2luZm8qLCB2b2lkIGNvbnN0Kiwgdm9pZCBjb25zdCosIGludCwgYm9vbCkgY29uc3TNAxxzdGQ6OmV4Y2VwdGlvbjo6d2hhdCgpIGNvbnN0zgMbc3RkOjpiYWRfYWxsb2M6OmJhZF9hbGxvYygpzwMcc3RkOjpiYWRfYWxsb2M6OndoYXQoKSBjb25zdNADJ3N0ZDo6YmFkX2FycmF5X25ld19sZW5ndGg6OndoYXQoKSBjb25zdNEDIHN0ZDo6bG9naWNfZXJyb3I6On5sb2dpY19lcnJvcigp0gMzc3RkOjpfXzI6Ol9fbGliY3BwX3JlZnN0cmluZzo6fl9fbGliY3BwX3JlZnN0cmluZygp0wMic3RkOjpsb2dpY19lcnJvcjo6fmxvZ2ljX2Vycm9yKCkuMdQDHnN0ZDo6bG9naWNfZXJyb3I6OndoYXQoKSBjb25zdNUDJHN0ZDo6cnVudGltZV9lcnJvcjo6fnJ1bnRpbWVfZXJyb3IoKdYDJnN0ZDo6cnVudGltZV9lcnJvcjo6fnJ1bnRpbWVfZXJyb3IoKS4x1wNTX19jeHhhYml2MTo6cmVhZEVuY29kZWRQb2ludGVyKHVuc2lnbmVkIGNoYXIgY29uc3QqKiwgdW5zaWduZWQgY2hhciwgdW5zaWduZWQgbG9uZynYAy5fX2N4eGFiaXYxOjpyZWFkVUxFQjEyOCh1bnNpZ25lZCBjaGFyIGNvbnN0Kiop2QMuX19jeHhhYml2MTo6cmVhZFNMRUIxMjgodW5zaWduZWQgY2hhciBjb25zdCoqKdoDgAFfX2N4eGFiaXYxOjpnZXRfc2hpbV90eXBlX2luZm8odW5zaWduZWQgbG9uZyBsb25nLCB1bnNpZ25lZCBjaGFyIGNvbnN0KiwgdW5zaWduZWQgY2hhciwgYm9vbCwgX1Vud2luZF9FeGNlcHRpb24qLCB1bnNpZ25lZCBsb25nKdsDNV9fY3h4YWJpdjE6OmdldF90aHJvd25fb2JqZWN0X3B0cihfVW53aW5kX0V4Y2VwdGlvbiop3AM0X19jeHhhYml2MTo6Y2FsbF90ZXJtaW5hdGUoYm9vbCwgX1Vud2luZF9FeGNlcHRpb24qKd0DZ3Vuc2lnbmVkIGxvbmcgX19jeHhhYml2MTo6KGFub255bW91cyBuYW1lc3BhY2UpOjpyZWFkUG9pbnRlckhlbHBlcjx1bnNpZ25lZCBpbnQ+KHVuc2lnbmVkIGNoYXIgY29uc3QqJineA211bnNpZ25lZCBsb25nIF9fY3h4YWJpdjE6Oihhbm9ueW1vdXMgbmFtZXNwYWNlKTo6cmVhZFBvaW50ZXJIZWxwZXI8dW5zaWduZWQgbG9uZyBsb25nPih1bnNpZ25lZCBjaGFyIGNvbnN0KiYp3wMXX1Vud2luZF9DYWxsUGVyc29uYWxpdHngAw1fVW53aW5kX1NldEdS4QMJc3RhY2tTYXZl4gMMc3RhY2tSZXN0b3Jl4wMKc3RhY2tBbGxvY+QDCHNldFRocmV35QMGX190cmFw5gMUbGVnYWxzdHViJGR5bkNhbGxfamkHHAIAD19fc3RhY2tfcG9pbnRlcgEIdGVtcFJldDAJrAMlAAcucm9kYXRhAQkucm9kYXRhLjECCS5yb2RhdGEuMgMJLnJvZGF0YS4zBAkucm9kYXRhLjQFCS5yb2RhdGEuNQYJLnJvZGF0YS42Bwkucm9kYXRhLjcICS5yb2RhdGEuOAkJLnJvZGF0YS45Cgoucm9kYXRhLjEwCwoucm9kYXRhLjExDAoucm9kYXRhLjEyDQoucm9kYXRhLjEzDgoucm9kYXRhLjE0Dwoucm9kYXRhLjE1EAoucm9kYXRhLjE2EQoucm9kYXRhLjE3Egoucm9kYXRhLjE4Ewoucm9kYXRhLjE5FAoucm9kYXRhLjIwFQoucm9kYXRhLjIxFgoucm9kYXRhLjIyFwoucm9kYXRhLjIzGAoucm9kYXRhLjI0GQoucm9kYXRhLjI1Ggoucm9kYXRhLjI2Gwoucm9kYXRhLjI3HAoucm9kYXRhLjI4HQoucm9kYXRhLjI5Hgoucm9kYXRhLjMwHwoucm9kYXRhLjMxIAoucm9kYXRhLjMyIQoucm9kYXRhLjMzIgoucm9kYXRhLjM0Iwoucm9kYXRhLjM1JAUuZGF0YQ==\";\n\n//# sourceURL=webpack://tbskmodem-js/./src/wasm/tbskmodem_wasm_mod.wasm?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/tbskmodem.js");
/******/ 	
/******/ })()
;